<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2010

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		chat
 */


function submit_handler()
{
	header('Content-Type: text/xml');
//	header('HTTP/1.0 200 Ok');
	header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1
	header("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); // Date in the past

	$response ='<?xml version="1.0" encoding="'.get_charset().'" ?>';
	$response.='<response><content>';


	if (!is_guest(get_member()))
	{
		$map['STATUS']=trim(either_param('status', ''));

		if ((post_param('zone', '')!='') && ($map['STATUS']!='') && ($map['STATUS']!=do_lang('TYPE_HERE')))
		{
			comcode_to_tempcode($map['STATUS']);

			$map['ZONE']=either_param('zone', '');
			$map['PAGE']=either_param('page', '');
			$map['DOMAIN']=$map['ZONE'].":".$map['PAGE'];
			$map['PRIVACY']=either_param('privacy', 'private');

			if (strlen(strip_tags($map['STATUS'])) < strlen($map['STATUS']))
			{
				$cc_guide=build_url(array('page'=>'userguide_comcode'),'site');
				$response.='<success>0</success><feedback><![CDATA[No HTML allowed. See <a href="'.$cc_guide->evaluate().'">Comcode Help</a> for info on the alternative.]]></feedback>';
			}
			else
			{
				$map['STATUS']=$map['STATUS'];


				if (strlen($map['STATUS'])>255)
				{
					$response.='<success>0</success><feedback>Message is '.(strlen($map['STATUS'])-255).' characters too long</feedback>';
				}
				else
				{
					$stored_id=say_activity('RAW_DUMP',
													$GLOBALS['FORUM_DRIVER']->get_username(get_member()),
													$map['STATUS'],
													'',
													$map['DOMAIN'],
													$map['PAGE'],
													$map['ZONE'],
													'',
													($map['PRIVACY']=='public')?'1':'0'
					);

					if ($stored_id>0)
					{
						$response.='<success>1</success><feedback>Message received.</feedback>';
					}
					elseif ($stored_id==-1)
					{
						$response.='<success>0</success><feedback>Message already received.</feedback>';
					}
				}
			}
		}
	}
	else
		$response.='<success>0</success><feedback>'.do_lang('LOGIN_EXPIRED_POST').'</feedback>';

	$response.='</content></response>';

	echo $response;
}

function update_list_handler()
{
	$map['max']=$GLOBALS['SITE_DB']->query_value_null_ok('values', 'the_value', array('the_name'=>get_zone_name()."_".get_page_name()."_update_max"));

	if (is_null($map['max']))
	{
		$map['max']='10';
	}

	$last_id=post_param('lastid', '-1');
	$mode=post_param('mode','all');

	//require_css('side_blocks');
	require_lang('main_activities');
	require_code('support');

	$proceed_selection=true; //There are some cases in which even glancing at the database is a waste of precious time.

	$is_guest=false; //Can't be doing with overcomplicated SQL breakages. Weed it out.
	$guest_id=intval($GLOBALS['FORUM_DRIVER']->get_guest_id());
	$viewer_id=intval(get_member()); //We'll need this later anyway.
	if ($guest_id==$viewer_id)
		$is_guest=true;

	$can_remove_others = (has_zone_access($viewer_id,'adminzone'))?true:false;

	//Getting the member viewed id if available, member viewing if not
	$username=post_param('member_id',strval($viewer_id));
	if ($username=='') $username=strval($viewer_id);
	if (is_numeric($username))
	{
		$member_id=post_param_integer('member_id',$viewer_id);
		$username=$GLOBALS['FORUM_DRIVER']->get_member_row_field($member_id,'m_username');
		if ((is_null($username))) return do_lang_tempcode('USER_NO_EXIST');
	}
	else
	{
		$member_id=$GLOBALS['FORUM_DRIVER']->get_member_from_username($username);
		if (is_null($member_id)) return do_lang_tempcode('_USER_NO_EXIST',escape_html($username));
	}

	if (addon_installed('chat') && $is_guest===false) //If not a guest, get all blocks
	{
		//Grabbing who you're blocked-by
		$blocked_by=$GLOBALS['SITE_DB']->query_select('chat_blocking', array('member_blocker'), array('member_blocked'=>$viewer_id));

		if (count($blocked_by)>0)
		{
			if (count($blocked_by)>1)
			{
				collapse_1d_complexity('member_blocker', $blocked_by);
				$blocked_by=implode(',',$blocked_by);
			}
			else
			{
				$blocked_by=current($blocked_by);
				$blocked_by=$blocked_by['member_blocker'];
			}
		}
		else
			$blocked_by = '';

		//Grabbing who you've blocked
		$blocking=$GLOBALS['SITE_DB']->query_select('chat_blocking', array('member_blocked'), array('member_blocker'=>$viewer_id));

		if (count($blocking)>0)
		{
			if (count($blocking)>1)
			{
				collapse_1d_complexity('member_blocked', $blocking);
				$blocking=implode(',',$blocking);
			}
			else
			{
				$blocking=current($blocking);
				$blocking=$blocking['member_blocked']; //If it's pointing to anything other than the only possible item, PHP needs fixing.
			}
		}
		else
			$blocking = '';
	}
	else
	{
		$blocking = '';
	}

	switch ($mode)
	{
		case 'own': //This is used when viewing a profile
			$whereville='a_member_id='.intval($member_id);

			// If the chat addon is installed then there may be friends-only posts
			if (addon_installed('chat') && ($member_id!=$viewer_id))
			{
				$view_private=NULL;        //Set to default denial level and only bother asking for perms if not a guest.
				if (($is_guest===false))
				{
					if (strlen($blocked_by)>0) //On the basis that you've sought this view out, your blocking them doesn't hide their messages.
						$short_where=' WHERE (member_likes='.$member_id.' AND member_liked='.$viewer_id.' AND member_likes NOT IN('.$blocked_by.'))';
					else
						$short_where=' WHERE (member_likes='.$member_id.' AND member_liked='.$viewer_id.')';

					$view_private=$GLOBALS['SITE_DB']->query_value_null_ok('chat_buddies', 'member_likes',NULL, $short_where);
				}

				if (is_null($view_private)) //If not friended by this person, the view is filtered.
					$whereville='('.$whereville.' AND a_is_public=1)';

			}
	      break;
		case 'friends':
			// No point looking for friends if we're a guest or there's no chat
			// addon
			if (addon_installed('chat') && $is_guest===false) //If not a guest, get all reciprocal friendships.
			{
				$like_outgoing=array();
				//Working on the principle that you only want to see people you like on this, only those you like and have not blocked will be selected
				//Exclusions will be based on whether they like and have not blocked you.

				//Select mutual likes you haven't blocked.
				$tables_and_joins ='chat_buddies a JOIN '.get_table_prefix().'chat_buddies b';
				$tables_and_joins.=' ON (a.member_liked=b.member_likes AND a.member_likes=b.member_liked AND a.member_likes=';
				$tables_and_joins.=$viewer_id;

				$extra_not='';
				if (strlen($blocking)>0) //Also setting who gets discarded from outgoing like selection
				{
					$tables_and_joins.=' AND a.member_liked NOT IN('.$blocking.')';
					$extra_not.=' AND member_liked NOT IN('.$blocking.')';
				}

				if (strlen($blocked_by)>0)
				{
					$tables_and_joins.=' AND a.member_liked NOT IN('.$blocked_by.')';
				}

				$tables_and_joins.=')';
				$extra_not.=');';

				$like_mutual=$GLOBALS['SITE_DB']->query_select($tables_and_joins, array('a.member_liked AS liked'));

				if (count($like_mutual)>1) //More than one mutual friend
				{
					$lm_ids='';

					foreach ($like_mutual as $l_m)
					{
						$lm_ids.=','.$l_m['liked'];
					}

					$lm_ids=substr($lm_ids, 1);

					$like_outgoing=$GLOBALS['SITE_DB']->query_select('chat_buddies', array('member_liked'), NULL, ' WHERE member_likes='.$viewer_id.' AND member_liked NOT IN('.$lm_ids.');'.$extra_not);

					if (count($like_outgoing)>1) //Likes more than one non-mutual friend
					{
						$lo_ids='';
						foreach ($like_outgoing as $l_o)
						{
							$lo_ids.=','.$l_o['member_liked'];
						}

						$lo_ids=substr($lo_ids, 1);

						$whereville='(a_member_id IN('.$lm_ids.') OR (a_member_id IN('.$lo_ids.') AND a_is_public=1))';
					}
					elseif (count($like_outgoing)>0) //Likes one non-mutual friend
					{
						$whereville='(a_member_id IN('.$lm_ids.') OR (a_member_id='.intval($like_outgoing[0]['member_liked']).' AND a_is_public=1))';
					}
					else //Only has mutual friends
					{
						$whereville='a_member_id IN('.$lm_ids.')';
					}
				}
				elseif (count($like_mutual)>0) //Has one mutual friend
				{
					$like_outgoing=$GLOBALS['SITE_DB']->query_select('chat_buddies', array('member_liked'), NULL, ' WHERE (member_likes='.$viewer_id.' AND member_liked!='.intval($like_mutual[0]['liked']).$extra_not);

					if (count($like_outgoing)>1) //Likes more than one non-mutual friend
					{
						$lo_ids='';
						foreach ($like_outgoing as $l_o)
						{
							$lo_ids.=','.$l_o['member_liked'];
						}

						$lo_ids=substr($lo_ids, 1);

						$whereville='(a_member_id='.intval($like_mutual[0]['liked']).' OR (a_member_id IN('.$lo_ids.') AND a_is_public=1))';
					}
					elseif (count($like_outgoing)>0) //Likes one non-mutual friend
					{
						$whereville='(a_member_id='.intval($like_mutual[0]['liked']).' OR (a_member_id='.intval($like_outgoing[0]['member_liked']).' AND a_is_public=1))';
					}
					else
					{
						$whereville='a_member_id='.intval($like_mutual[0]['liked']); //Has one mutual friend and no others
					}
				}
				else //Has no mutual friends
				{
					if ($is_guest===false)
						$like_outgoing=$GLOBALS['SITE_DB']->query_select('chat_buddies', array('member_liked'), NULL, ' WHERE (member_likes='.$viewer_id.$extra_not);

					if (count($like_outgoing)>1) //Likes more than one person
					{
						$lo_ids='';
						foreach ($like_outgoing as $l_o)
						{
							$lo_ids.=','.$l_o['member_liked'];
						}

						$lo_ids=substr($lo_ids, 1);

						$whereville='(a_member_id IN('.$lo_ids.') AND a_is_public=1)';
					}
					elseif (count($like_outgoing)>0) //Likes one person
						$whereville='(a_member_id='.intval($like_outgoing[0]['member_liked']).' AND a_is_public=1)';
					else //Has no friends, the case with _all_ new members.
						$proceed_selection=false;
				}
			}
			else
				$proceed_selection=false;
			break;
		case 'all': //Frontpage, 100% permissions dependent.
		default:
			$view_private=array();
			if (addon_installed('chat') && $is_guest===false)
			{
				$short_where='member_liked='.$viewer_id;
				if (strlen($blocked_by)>0)
					$short_where='('.$short_where.' AND member_likes NOT IN ('.$blocked_by.'))';
					
				$view_private=$GLOBALS['SITE_DB']->query_select('chat_buddies', array('member_likes'), NULL, ' WHERE '.$short_where.';');
				$view_private[]=array('member_likes'=>$viewer_id);
			}

			if (count($view_private)>1)
			{
				$vp='';

				foreach($view_private as $v_p)
				{
					$vp.=','.$v_p['member_likes'];
				}

				$vp=substr($vp, 1);

				$whereville='(a_member_id IN('.$vp.') OR (a_is_public=1 AND a_member_id!='.$guest_id.'))';
			}
			elseif (count($view_private)>0)
			{
				$view_private=current($view_private);
				$whereville='(a_member_id='.$view_private['member_likes'].' OR (a_is_public=1 AND a_member_id!='.$guest_id.'))';
			}
			else
			{
				$whereville='(a_is_public=1 AND a_member_id!='.$guest_id.')';
			}
	      break;
	}

	header("Content-Type: text/xml");
	header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1
	header("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); // Date in the past

	$response ='<?xml version="1.0" encoding="'.get_charset().'" ?>';

	if ($proceed_selection===true)
	{
		$activities=$GLOBALS['SITE_DB']->query('SELECT * FROM '.get_table_prefix().'main_activities WHERE (('.$whereville.') AND id>'.$last_id.') ORDER BY a_time DESC',$map['max']);

		if (count($activities)>0)
		{
			$list_items='';
			foreach ($activities as $row)
			{
				$link_1=($row['a_pagelink_1']=='')?new ocp_tempcode():pagelink_to_tempcode($row['a_pagelink_1']);
				$link_2=($row['a_pagelink_2']=='')?new ocp_tempcode():pagelink_to_tempcode($row['a_pagelink_2']);
				$link_3=($row['a_pagelink_3']=='')?new ocp_tempcode():pagelink_to_tempcode($row['a_pagelink_3']);
				$id = $row['a_member_id'];
				$memberpic=$GLOBALS['FORUM_DRIVER']->get_member_avatar_url($id);
				$member_url=build_url(array('page'=>'members','type'=>'view','id'=>$id),get_page_zone('members'));
				$member = $row['a_label_1'];
				$datetime = strval($row['a_time']);

				$tempcode=do_lang_tempcode($row['a_language_string_code'],comcode_to_tempcode(escape_html($row['a_label_1']),$guest_id,false,NULL),comcode_to_tempcode(escape_html($row['a_label_2']),$guest_id,false,NULL),array(comcode_to_tempcode(escape_html($row['a_label_3']),$guest_id,false,NULL),escape_html($link_1->evaluate()),escape_html($link_2->evaluate()),escape_html($link_3->evaluate())));

				$list_item=do_template('BLOCK_MAIN_ACTIVITIES_XML',array('BITS'=>(is_object($tempcode))?$tempcode->evaluate():$tempcode,'MEMPIC'=>$memberpic,'NAME'=>$member, 'DATETIME'=>$datetime, 'URL'=>$member_url->evaluate(), 'LIID'=>strval($row['id']), 'ALLOW_REMOVE'=>(($row['a_member_id']==$viewer_id) || $can_remove_others)));
				// We dump our response in CDATA, since that lets us work around the
				// fact that our list elements aren't actually in a list, etc.
				// However, we allow comcode but some tags make use of CDATA. Since
				// CDATA can't be nested (as it's a form of comment), we take this
				// into account by base64 encoding the whole template and decoding
				// it in the browser. We wrap it in some arbitrary XML and a CDATA
				// tag so that the Javascript knows what it's received
				$list_items.='<listitem id="'.strval($row['id']).'"><![CDATA['.base64_encode($list_item->evaluate()).']]></listitem>';

			}
			$response.='<response><success>1</success><feedlen>'.$map['max'].'</feedlen><content>'.$list_items.'</content><supp>'.$whereville.'</supp></response>';
		}
		else
		{
			$response.='<response><success>2</success><content>NU - Nothing new.</content></response>';
		}
	}
	else
	{
		$response.='<response><success>2</success><content>NU - No feeds to select from.</content></response>';
	}

	echo $response;


}

function removal_handler()
{
	$is_guest=false; //Can't be doing with overcomplicated SQL breakages. Weed it out.
	$guest_id=intval($GLOBALS['FORUM_DRIVER']->get_guest_id());
	$viewer_id=intval(get_member()); //We'll need this later anyway.
	if ($guest_id==$viewer_id)
		$is_guest=true;

	$can_remove_others = (has_zone_access($viewer_id,'adminzone'))?true:false;

	header('Content-Type: text/xml');
	header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1
	header("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); // Date in the past

	$response ='<?xml version="1.0" encoding="'.get_charset().'" ?>';
	$response.='<response>';

	$stat_id=post_param_integer('removal_id',-1);
	$stat_owner=($stat_id!=-1)?$GLOBALS['SITE_DB']->query_value_null_ok('main_activities', 'a_member_id', array('id'=>$stat_id)):NULL;

	if (($is_guest!==true) && (!is_null($stat_owner)))
	{
		if (($stat_owner!=$viewer_id) && ($can_remove_others!==true))
		{
			$response.='<success>0</success><err>perms</err>';
			$response.='<feedback>You do not have permission to remove this status message.</feedback><status_id>'.$stat_id.'</status_id>';
		}
		else //I suppose we can proceed now.
		{
			$GLOBALS['SITE_DB']->query_delete('main_activities', array('id'=>$stat_id),'',1);

			$response.='<success>1</success><feedback>Message deleted.</feedback><status_id>'.$stat_id.'</status_id>';
		}
	}
	elseif (is_null($stat_owner))
	{
		$response.='<success>0</success><err>missing</err><feedback>Missing ID for status removal or id does not exist.</feedback>';
	}
	else
		$response.='<success>0</success><feedback>Login expired, you must log in again to post</feedback>';

	$response.='</response>';

	echo $response;
}

/**
 * Maintains a text file in data_custom. This contains the latest activity's ID.
 * Since the Javascript polls for updates, it can check against this before
 * running any PHP.
 * Locking timeout code provided by "administrator at proxy-list dot org" on
 * http://php.net/manual/en/function.flock.php
 *
 * @param  integer		The ID we are going to write to the file
 * @param  integer		Our timeout in milliseconds (how long we should keep trying). Default: 1000
 * @param  boolean		Whether to force this ID to be the newest, even if it's less than the current value
 */
function log_newest_activity($id,$timeout=1000,$force=false)
{
	$filename = get_custom_file_base().'/data_custom/latest_activity.txt';

	// Grab a pointer for appending to this file
	// NOTE: ALWAYS open as append! Opening as write will wipe the file during
	// the fopen call, which is before we have a lock.
	$fp = fopen($filename, 'a+');

	// Only bother running if this file can be opened
	if ($fp)
	{
		// Grab our current time in milliseconds
		$startTime = microtime();

		$sleep_multiplier = $timeout / 10;

		// Start looping
		do
		{
			// Try to lock the file
			$canWrite = flock($fp, LOCK_EX);

			// If lock is not obtained sleep for 0 <-> $timeout/10 milliseconds,
			// to avoid collision and CPU load
			if(!$canWrite) usleep(round(rand(0, $sleep_multiplier)*1000));		// *1000 as usleep uses microseconds
		}
		while ((!$canWrite) && ((microtime()-$startTime) < $timeout));

		// File was locked so now we can store information
		if ($canWrite) {
			// Read the current value
			rewind($fp);
			$old_id = intval(fgets($fp,1024));
			// See if we should be updating the file (IDs increase numerically)
			if ($force || ($old_id < $id))
			{
				// If so then wipe the file (since we're in append mode,
				// but we want to overwrite)
				ftruncate($fp, 0);

				// Save our new ID
				fwrite($fp, strval($id));
			}
		}
		fclose($fp);
	}
}