<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2012

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		gallery_syndicate
 */

class video_syndication_youtube
{
	var $_access_token=NULL;

	function is_active()
	{
		$youtube_key=get_option('youtube_key');
		if (is_null($youtube_key))
		{
			return false;
		}

		return ($youtube_key!='');
	}

	function get_remote_videos()
	{
		$videos=array();

		$start=1;
		do
		{
			$xml=$this->_http('/feeds/api/users/default/uploads',array('max-results'=>strval(50),'start-index'=>strval($start)));
			if ($xml===NULL) return $videos;

			$parsed=TODO;

			$start+=50;
		}
		while (count($parsed)>0);

		foreach ($parsed as $p)
		{
			$videos[]=array(
				'bound_id'=>TODO,
				'title'=>TODO,
				'description'=>TODO,
				'mtime'=>TODO,
				'tags'=>TODO,
				'_youtube_id'=>TODO,
			);
		}

		return $videos;
	}

	function change_remote_video($video,$property,$value)
	{
		// TODO
	}

	function unbind_remote_video($video)
	{
		// TODO
	}

	function unbind_remote_video($video)
	{
		// TODO
	}

	function unvalidate_remote_video($video)
	{
		// TODO
	}

	function delete_remote_video($video)
	{
		// TODO https://developers.google.com/youtube/2.0/developers_guide_protocol_updating_and_deleting_videos
	}

	function upload_video($video)
	{
		// TODO https://developers.google.com/youtube/2.0/developers_guide_protocol_uploading_videos
	}

	function _connect()
	{
		require_code('oauth');

		$auth_url='https://accounts.google.com/o/oauth2/token';
		$this->_access_token=refresh_oauth($auth_url,get_option('youtube_key'),get_option('youtube_secret'),get_value('youtube_refresh_token'));
	}

	function _http($path,$params)
	{
		$key=get_option('youtube_key');

		require_code('files');

		if (is_null($this->_access_token))
		{
			if (!$this->_connect()) return NULL;
		}

		$_params='';
		foreach ($params as $key=>$val)
		{
			$_params.='&'.$key.'='.urlencode($val);
		}

		return http_download_file('https://gdata.youtube.com'.$url.'?key='.$key.'&strict=1&v=2.1'.$_params,NULL,true,false,'ocPortal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,$this->_access_token);
	}
}
