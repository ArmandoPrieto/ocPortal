<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2014

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		occle
 */

/**
 * Module page class.
 */
class Module_admin_occle
{
    /**
	 * Find details of the module.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
    public function info()
    {
        $info = array();
        $info['author'] = 'Philip Withnall';
        $info['organisation'] = 'ocProducts';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 2;
        $info['update_require_upgrade'] = 1;
        $info['locked'] = false;
        return $info;
    }

    /**
	 * Find entry-points available within this module.
	 *
	 * @param  boolean	Whether to check permissions.
	 * @param  ?MEMBER	The member to check permissions as (NULL: current user).
	 * @param  boolean	Whether to allow cross links to other modules (identifiable via a full-page-link rather than a screen-name).
	 * @param  boolean	Whether to avoid any entry-point (or even return NULL to disable the page in the Sitemap) if we know another module, or page_group, is going to link to that entry-point. Note that "!" and "misc" entry points are automatically merged with container page nodes (likely called by page-groupings) as appropriate.
	 * @return ?array		A map of entry points (screen-name=>language-code/string or screen-name=>[language-code/string, icon-theme-image]) (NULL: disabled).
	 */
    public function get_entry_points($check_perms = true,$member_id = null,$support_crosslinks = true,$be_deferential = false)
    {
        return array(
            '!' => array('OCCLE','menu/adminzone/tools/occle'),
        );
    }

    /**
	 * Install the module.
	 *
	 * @param  ?integer	What version we're upgrading from (NULL: new install)
	 * @param  ?integer	What hack version we're upgrading from (NULL: new-install/not-upgrading-from-a-hacked-version)
	 */
    public function install($upgrade_from = null,$upgrade_from_hack = null)
    {
        if (is_null($upgrade_from)) {
            $usergroups = $GLOBALS['FORUM_DRIVER']->get_usergroup_list(false,true);
            foreach (array_keys($usergroups) as $id) {
                $GLOBALS['SITE_DB']->query_insert('group_page_access',array('page_name' => 'admin_occle','zone_name' => 'adminzone','group_id' => $id)); // OcCLE very dangerous
            }

            $GLOBALS['SITE_DB']->create_table('occlechat',array(
                'id' => '*AUTO',
                'c_message' => 'LONG_TEXT',
                'c_url' => 'URLPATH',
                'c_incoming' => 'BINARY',
                'c_timestamp' => 'TIME'
            ));
        }
    }

    /**
	 * Uninstall the module.
	 */
    public function uninstall()
    {
        $GLOBALS['SITE_DB']->drop_table_if_exists('occlechat');

        delete_value('last_occle_command');
    }

    public $title;

    /**
	 * Module pre-run function. Allows us to know meta-data for <head> before we start streaming output.
	 *
	 * @return ?tempcode		Tempcode indicating some kind of exceptional output (NULL: none).
	 */
    public function pre_run()
    {
        $type = get_param('type','misc');

        require_lang('occle');

        set_helper_panel_tutorial('tut_occle');
        set_helper_panel_text(comcode_lang_string('DOC_OCCLE'));

        $this->title = get_screen_title('OCCLE');

        return NULL;
    }

    /**
	 * Execute the module.
	 *
	 * @return tempcode	The result of execution.
	 */
    public function run()
    {
        require_code('occle');
        require_javascript('javascript_ajax');
        require_javascript('javascript_occle');
        require_css('occle');

        return $this->main_gui();
    }

    /**
	 * The main OcCLE GUI.
	 *
	 * @return tempcode	The UI
	 */
    public function main_gui()
    {
        if (!is_null($GLOBALS['CURRENT_SHARE_USER'])) {
            warn_exit(do_lang_tempcode('SHARED_INSTALL_PROHIBIT'));
        }

        $command = post_param('occle_command','');
        if ($command != '') {
            //We've had a normal form submission
            $temp = new virtual_bash($command);
            $commands = $temp->output_html();
        } else {
            $commands = new ocp_tempcode();
        }

        $content = do_template('OCCLE_MAIN',array(
            '_GUID' => '05c1e7efacc3839babfe58fe624caa61',
            'SUBMIT_URL' => build_url(array('page' => '_SELF'),'_SELF'),
            'PROMPT' => do_lang_tempcode('COMMAND_PROMPT',escape_html($GLOBALS['FORUM_DRIVER']->get_username(get_member()))),
            'COMMANDS' => $commands,
        ));

        return do_template('OCCLE_MAIN_SCREEN',array(
            '_GUID' => 'd71ef9fa2cdaf419fee64cf3d7555225',
            'TITLE' => $this->title,
            'CONTENT' => $content,
        ));
    }
}
