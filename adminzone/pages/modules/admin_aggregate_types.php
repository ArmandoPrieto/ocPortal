<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2013

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		aggregate_types
 */

/**
 * Module page class.
 */
class Module_admin_aggregate_types extends standard_crud_module
{

	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['author']='Chris Graham';
		$info['organisation']='ocProducts';
		$info['hacked_by']=NULL;
		$info['hack_version']=NULL;
		$info['version']=1;
		$info['locked']=false;
		return $info;
	}

	/**
	 * Standard modular uninstall function.
	 */
	function uninstall()
	{
		$GLOBALS['SITE_DB']->drop_table_if_exists('aggregate_types');
	}

	/**
	 * Standard modular install function.
	 *
	 * @param  ?integer	What version we're upgrading from (NULL: new install)
	 * @param  ?integer	What hack version we're upgrading from (NULL: new-install/not-upgrading-from-a-hacked-version)
	 */
	function install($upgrade_from=NULL,$upgrade_from_hack=NULL)
	{
		$GLOBALS['SITE_DB']->create_table('aggregate_type_instances',array(
			'id'=>'*AUTO',
			'aggregate_label'=>'SHORT_TEXT',
			'aggregate_type'=>'ID_TEXT',
			'other_properties'=>'LONG_TEXT',
			'add_time'=>'TIME',
			'edit_time'=>'TIME',
		));
		$GLOBALS['SITE_DB']->create_index('aggregate_type_instances','aggregate_lookup',array('aggregate_label','aggregate_type'));
	}

	/**
	 * Standard modular entry-point finder function.
	 *
	 * @return ?array	A map of entry points (type-code=>language-code) (NULL: disabled).
	 */
	function get_entry_points()
	{
		return parent::get_entry_points()+array('xml'=>'TODO');
	}

	/**
	 * Standard crud_module run_start.
	 *
	 * @return tempcode		The output of the run
	 */
	function run_start()
	{
		return new ocp_tempcode();
	}

	/**
	 * Get tempcode for a forum grouping template adding/editing form.
	 *
	 * @param  SHORT_TEXT	The title (name) of the forum grouping
	 * @param  LONG_TEXT		The description for the forum grouping
	 * @param  BINARY			Whether the forum grouping is expanded by default when shown in the forum view
	 * @return tempcode		The input fields
	 */
	function get_form_fields($title='',$description='',$expanded_by_default=1)
	{
		TODO;
	}

	/**
	 * Standard crud_module edit form filler.
	 *
	 * @param  ID_TEXT		The entry being edited
	 * @return array			A pair: fields, hidden-fields
	 */
	function fill_in_edit_form($_id)
	{
		TODO;
	}

	/**
	 * Standard crud_module add actualiser.
	 *
	 * @return ID_TEXT		The entry added
	 */
	function add_actualisation()
	{
		TODO;
	}

	/**
	 * Standard crud_module edit actualiser.
	 *
	 * @param  ID_TEXT		The entry being edited
	 */
	function edit_actualisation($id)
	{
		TODO;
	}

	/**
	 * Standard crud_module delete actualiser.
	 *
	 * @param  ID_TEXT		The entry being deleted
	 */
	function delete_actualisation($id)
	{
		TODO;
	}

	/**
	 * The UI to edit the aggregate_types XML file.
	 *
	 * @return tempcode		The UI
	 */
	function xml()
	{
		set_helper_panel_tutorial('tut_repository');
		set_helper_panel_text(comcode_lang_string('DOC_TODO'));

		$title=get_screen_title('TODO');

		$post_url=build_url(array('page'=>'_SELF','type'=>'_xml'),'_SELF');

		return do_template('XML_CONFIG_SCREEN',array(
			'TITLE'=>$title,
			'POST_URL'=>$post_url,
			'XML'=>file_exists(get_custom_file_base().'/data_custom/aggregate_types.xml')?file_get_contents(get_custom_file_base().'/data_custom/aggregate_types.xml'):'',
		));
	}

	/**
	 * The UI actualiser edit the aggregate_types XML file.
	 *
	 * @return tempcode		The UI
	 */
	function _xml()
	{
		$title=get_screen_title('TODO');

		$myfile=@fopen(get_custom_file_base().'/data_custom/aggregate_types.xml','wt');
		if ($myfile===false) intelligent_write_error(get_custom_file_base().'/data_custom/aggregate_types.xml');
		$xml=post_param('xml');
		if (fwrite($myfile,$xml)<strlen($xml)) warn_exit(do_lang_tempcode('COULD_NOT_SAVE_FILE'));
		fclose($myfile);
		fix_permissions(get_custom_file_base().'/data_custom/aggregate_types.xml');
		sync_file(get_custom_file_base().'/data_custom/aggregate_types.xml');

		return inform_screen($title,do_lang_tempcode('SUCCESS'));
	}

}


