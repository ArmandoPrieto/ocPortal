<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2014

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		ecommerce
 */

require_code('crud_module');

/**
 * Module page class.
 */
class Module_admin_ecommerce extends standard_crud_module
{
	var $lang_type='USERGROUP_SUBSCRIPTION';
	var $select_name='TITLE';
	var $select_name_description='DESCRIPTION_TITLE';
	var $menu_label='ECOMMERCE';
	var $table='f_usergroup_subs';
	var $orderer='s_title';
	var $title_is_multi_lang=true;

	var $javascript="
		var _length_units=document.getElementById('length_units'),_length=document.getElementById('length');
		var adjust_lengths=function()
		{
			var length_units=_length_units.options[_length_units.selectedIndex].value,length=_length.value;
			if ((length_units=='d') && ((length<1) || (length>90)))
				_length.value=(length<1)?1:90;
			if ((length_units=='w') && ((length<1) || (length>52)))
				_length.value=(length<1)?1:52;
			if ((length_units=='m') && ((length<1) || (length>24)))
				_length.value=(length<1)?1:24;
			if ((length_units=='y') && ((length<1) || (length>5)))
				_length.value=(length<1)?1:5;
		}
		_length_units.onchange=adjust_lengths;
		_length.onchange=adjust_lengths;
	";

	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['author']='Chris Graham';
		$info['organisation']='ocProducts';
		$info['hacked_by']=NULL;
		$info['hack_version']=NULL;
		$info['version']=2;
		$info['locked']=false;
		return $info;
	}

	/**
	 * Standard modular entry-point finder function.
	 *
	 * @param  boolean	Whether to check permissions.
	 * @param  ?MEMBER	The member to check permissions as (NULL: current user).
	 * @param  boolean	Whether to allow cross links to other modules (identifiable via a full-page-link rather than a screen-name).
	 * @param  boolean	Whether to avoid any entry-point (or even return NULL to disable the page in the Sitemap) if we know another module, or page_group, is going to link to that entry-point. Note that "!" and "misc" entry points are automatically merged with container page nodes (likely called by page-groupings) as appropriate.
	 * @return ?array		A map of entry points (screen-name=>language-code/string or screen-name=>[language-code/string, icon-theme-image]) (NULL: disabled).
	 */
	function get_entry_points($check_perms=true,$member_id=NULL,$support_crosslinks=true,$be_deferential=false)
	{
		$ret=array(
			'misc'=>array('CUSTOM_PRODUCT_USERGROUP','menu/adminzone/audit/ecommerce/subscriptions'),
		);
		$ret+=parent::get_entry_points();
		return $ret;
	}

	var $title;

	/**
	 * Standard modular pre-run function, so we know meta-data for <head> before we start streaming output.
	 *
	 * @param  boolean		Whether this is running at the top level, prior to having sub-objects called.
	 * @param  ?ID_TEXT		The screen type to consider for meta-data purposes (NULL: read from environment).
	 * @return ?tempcode		Tempcode indicating some kind of exceptional output (NULL: none).
	 */
	function pre_run($top_level=true,$type=NULL)
	{
		$type=get_param('type','misc');

		require_lang('ecommerce');

		set_helper_panel_tutorial('tut_ecommerce');

		if ($type=='misc')
		{
			$also_url=build_url(array('page'=>'admin_ecommerce_logs','type'=>'misc'),get_module_zone('admin_ecommerce_logs'));
			attach_message(do_lang_tempcode('menus:ALSO_SEE_AUDIT',escape_html($also_url->evaluate())),'inform');

			$this->title=get_screen_title('CUSTOM_PRODUCT_USERGROUP');
		}

		if (($type=='ad') || ($type=='_ad') || ($type=='ed') || ($type=='_ed') || ($type=='__ed'))
		{
			if (get_forum_type()=='ocf')
			{
				breadcrumb_set_parents(array(array('_SEARCH:admin_ocf_members:misc',do_lang_tempcode('MEMBERS'))));
			}
		}

		return parent::pre_run($top_level);
	}

	/**
	 * Standard crud_module run_start.
	 *
	 * @param  ID_TEXT		The type of module execution
	 * @return tempcode		The output of the run
	 */
	function run_start($type)
	{
		require_code('ecommerce');
		require_code('ecommerce2');

		if ((get_value('unofficial_ecommerce')!='1') && (count(find_all_hooks('systems','ecommerce'))==8))
		{
			if (get_forum_type()!='ocf') warn_exit(do_lang_tempcode('NO_OCF')); else ocf_require_all_forum_stuff();
		}

		$this->add_one_label=do_lang_tempcode('ADD_USERGROUP_SUBSCRIPTION');
		$this->edit_this_label=do_lang_tempcode('EDIT_THIS_USERGROUP_SUBSCRIPTION');
		$this->edit_one_label=do_lang_tempcode('EDIT_USERGROUP_SUBSCRIPTION');

		if ($type=='misc') return $this->misc();

		return new ocp_tempcode();
	}

	/**
	 * The do-next manager for before setup management.
	 *
	 * @return tempcode		The UI
	 */
	function misc()
	{
		require_code('templates_donext');
		return do_next_manager($this->title,comcode_lang_string('DOC_USERGROUP_SUBSCRIPTION'),
			array(
				((get_forum_type()!='ocf') && (get_value('unofficial_ecommerce')!='1'))?NULL:array('menu/_generic_admin/add_one',array('_SELF',array('type'=>'ad'),'_SELF'),do_lang('ADD_USERGROUP_SUBSCRIPTION')),
				((get_forum_type()!='ocf') && (get_value('unofficial_ecommerce')!='1'))?NULL:array('menu/_generic_admin/edit_one',array('_SELF',array('type'=>'ed'),'_SELF'),do_lang('EDIT_USERGROUP_SUBSCRIPTION')),
			),
			do_lang('CUSTOM_PRODUCT_USERGROUP')
		);
	}

	/**
	 * Get tempcode for adding/editing form.
	 *
	 * @param  SHORT_TEXT	The title
	 * @param  LONG_TEXT		The description
	 * @param  SHORT_TEXT	The cost
	 * @param  integer		The length
	 * @param  SHORT_TEXT	The units for the length
	 * @set    y m d w
	 * @param  ?GROUP			The usergroup that purchasing gains membership to (NULL: super members)
	 * @param  BINARY			Whether this is applied to primary usergroup membership
	 * @param  BINARY			Whether this is currently enabled
	 * @param  ?LONG_TEXT	The text of the e-mail to send out when a subscription is start (NULL: default)
	 * @param  ?LONG_TEXT	The text of the e-mail to send out when a subscription is ended (NULL: default)
	 * @param  ?LONG_TEXT	The text of the e-mail to send out when a subscription cannot be renewed because the subproduct is gone (NULL: default)
	 * @param  ?AUTO_LINK	ID of existing subscription (NULL: new)
	 * @return array			Tuple: The input fields, The hidden fields, The delete fields
	 */
	function get_form_fields($title='',$description='',$cost='9.99',$length=12,$length_units='m',$group_id=NULL,$uses_primary=0,$enabled=1,$mail_start=NULL,$mail_end=NULL,$mail_uhoh=NULL,$id=NULL)
	{
		if (($title=='') && (get_forum_type()=='ocf'))
		{
			$add_usergroup_url=build_url(array('page'=>'admin_ocf_groups','type'=>'ad'),get_module_zone('admin_ocf_groups'));
			attach_message(do_lang_tempcode('ADD_USER_GROUP_FIRST',escape_html($add_usergroup_url->evaluate())),'inform');
		}

		if (is_null($group_id)) $group_id=get_param_integer('group_id',db_get_first_id()+3);
		if (is_null($mail_start)) $mail_start=do_lang('_PAID_SUBSCRIPTION_STARTED',get_option('site_name'));
		if (is_null($mail_end))
		{
			$_purchase_url=build_url(array('page'=>'purchase'),get_module_zone('purchase'),NULL,false,false,true);
			$purchase_url=$_purchase_url->evaluate();
			$mail_end=do_lang('_PAID_SUBSCRIPTION_ENDED',get_option('site_name'),$purchase_url);
		}
		if (is_null($mail_uhoh)) $mail_uhoh=do_lang('_PAID_SUBSCRIPTION_UHOH',get_option('site_name'));

		$fields=new ocp_tempcode();
		$fields->attach(form_input_line(do_lang_tempcode('TITLE'),do_lang_tempcode('DESCRIPTION_USERGROUP_SUBSCRIPTION_TITLE'),'title',$title,true));
		$fields->attach(form_input_text_comcode(do_lang_tempcode('DESCRIPTION'),do_lang_tempcode('DESCRIPTION_USERGROUP_SUBSCRIPTION_DESCRIPTION'),'description',$description,true));
		$fields->attach(form_input_float(do_lang_tempcode('COST'),do_lang_tempcode('DESCRIPTION_USERGROUP_SUBSCRIPTION_COST'),'cost',floatval($cost),true));
		$list=new ocp_tempcode();
		foreach (array('d','w','m','y') as $unit)
		{
			$list->attach(form_input_list_entry($unit,$unit==$length_units,do_lang_tempcode('LENGTH_UNIT_'.$unit)));
		}
		$fields->attach(form_input_list(do_lang_tempcode('LENGTH_UNITS'),do_lang_tempcode('DESCRIPTION_LENGTH_UNITS'),'length_units',$list));

		$list=new ocp_tempcode();
		$groups=$GLOBALS['FORUM_DRIVER']->get_usergroup_list();
		if (get_forum_type()=='ocf')
		{
			require_code('ocf_groups');
			$default_groups=ocf_get_all_default_groups(true);
		}
		foreach ($groups as $id=>$group)
		{
			if (get_forum_type()=='ocf')
			{
				if ((in_array($id,$default_groups)) && ($id!==$group_id)) continue;
			}

			if ($id!=$GLOBALS['FORUM_DRIVER']->get_guest_id())
				$list->attach(form_input_list_entry(strval($id),$id==$group_id,$group));
		}

		$fields->attach(form_input_integer(do_lang_tempcode('SUBSCRIPTION_LENGTH'),do_lang_tempcode('DESCRIPTION_USERGROUP_SUBSCRIPTION_LENGTH'),'length',$length,true));
		$fields->attach(form_input_list(do_lang_tempcode('GROUP'),do_lang_tempcode('DESCRIPTION_USERGROUP_SUBSCRIPTION_GROUP'),'group_id',$list));
		$fields->attach(form_input_tick(do_lang_tempcode('USES_PRIMARY'),do_lang_tempcode('DESCRIPTION_USES_PRIMARY'),'uses_primary',$uses_primary==1));
		$fields->attach(form_input_tick(do_lang_tempcode('ENABLED'),do_lang_tempcode('DESCRIPTION_USERGROUP_SUBSCRIPTION_ENABLED'),'enabled',$enabled==1));
		$fields->attach(form_input_text_comcode(do_lang_tempcode('MAIL_START'),do_lang_tempcode('DESCRIPTION_USERGROUP_SUBSCRIPTION_MAIL_START'),'mail_start',$mail_start,true,NULL,true));
		$fields->attach(form_input_text_comcode(do_lang_tempcode('MAIL_END'),do_lang_tempcode('DESCRIPTION_USERGROUP_SUBSCRIPTION_MAIL_END'),'mail_end',$mail_end,true,NULL,true));
		$fields->attach(form_input_text_comcode(do_lang_tempcode('MAIL_UHOH'),do_lang_tempcode('DESCRIPTION_USERGROUP_SUBSCRIPTION_MAIL_UHOH'),'mail_uhoh',$mail_uhoh,false,NULL,true));

		$delete_fields=NULL;
		if ($GLOBALS['SITE_DB']->query_select_value('subscriptions','COUNT(*)',array('s_type_code'=>'USERGROUP'.strval($id)))>0)
		{
			$delete_fields=new ocp_tempcode();
			$delete_fields->attach(form_input_tick(do_lang_tempcode('DELETE'),do_lang_tempcode('DESCRIPTION_DELETE_USERGROUP_SUB_DANGER'),'delete',false));
		}

		return array($fields,new ocp_tempcode(),$delete_fields,NULL,!is_null($delete_fields));
	}

	/**
	 * Standard crud_module table function.
	 *
	 * @param  array			Details to go to build_url for link to the next screen.
	 * @return array			A pair: The choose table, Whether re-ordering is supported from this screen.
	 */
	function create_selection_list_choose_table($url_map)
	{
		require_code('templates_results_table');

		$current_ordering=get_param('sort','s_title ASC');
		if (strpos($current_ordering,' ')===false) warn_exit(do_lang_tempcode('INTERNAL_ERROR'));
		list($sortable,$sort_order)=explode(' ',$current_ordering,2);
		$sortables=array(
			's_title'=>do_lang_tempcode('TITLE'),
			's_cost'=>do_lang_tempcode('COST'),
			's_length'=>do_lang_tempcode('SUBSCRIPTION_LENGTH'),
			's_group_id'=>do_lang_tempcode('GROUP'),
			's_enabled'=>do_lang('ENABLED'),
		);
		if (((strtoupper($sort_order)!='ASC') && (strtoupper($sort_order)!='DESC')) || (!array_key_exists($sortable,$sortables)))
			log_hack_attack_and_exit('ORDERBY_HACK');

		$header_row=results_field_title(array(
			do_lang_tempcode('TITLE'),
			do_lang_tempcode('COST'),
			do_lang_tempcode('SUBSCRIPTION_LENGTH'),
			do_lang_tempcode('GROUP'),
			do_lang('ENABLED'),
			do_lang_tempcode('ACTIONS'),
		),$sortables,'sort',$sortable.' '.$sort_order);

		$fields=new ocp_tempcode();

		require_lang('ecommerce');

		require_code('form_templates');
		list($rows,$max_rows)=$this->get_entry_rows(false,$current_ordering,NULL,get_forum_type()!='ocf');
		foreach ($rows as $r)
		{
			$edit_link=build_url($url_map+array('id'=>$r['id']),'_SELF');

			$fields->attach(results_entry(array(get_translated_text($r['s_title'],$GLOBALS[(get_forum_type()=='ocf')?'FORUM_DB':'SITE_DB']),$r['s_cost'],do_lang('_LENGTH_UNIT_'.$r['s_length_units'],integer_format($r['s_length'])),ocf_get_group_name($r['s_group_id']),($r['s_enabled']==1)?do_lang_tempcode('YES'):do_lang_tempcode('NO'),protect_from_escaping(hyperlink($edit_link,do_lang_tempcode('EDIT'),false,true,'#'.strval($r['id']))))),true);
		}

		return array(results_table(do_lang($this->menu_label),get_param_integer('start',0),'start',get_param_integer('max',20),'max',$max_rows,$header_row,$fields,$sortables,$sortable,$sort_order),false);
	}

	/**
	 * Standard crud_module list function.
	 *
	 * @return tempcode		The selection list
	 */
	function create_selection_list_entries()
	{
		$dbs_bak=$GLOBALS['NO_DB_SCOPE_CHECK'];
		$GLOBALS['NO_DB_SCOPE_CHECK']=true;

		$_m=$GLOBALS[(get_forum_type()=='ocf')?'FORUM_DB':'SITE_DB']->query_select('f_usergroup_subs',array('*'));
		$entries=new ocp_tempcode();
		foreach ($_m as $m)
		{
			$entries->attach(form_input_list_entry(strval($m['id']),false,get_translated_text($m['s_title'],$GLOBALS[(get_forum_type()=='ocf')?'FORUM_DB':'SITE_DB'])));
		}

		$GLOBALS['NO_DB_SCOPE_CHECK']=$dbs_bak;

		return $entries;
	}

	/**
	 * Standard crud_module edit form filler.
	 *
	 * @param  ID_TEXT		The entry being edited
	 * @return array			Tuple: The input fields, The hidden fields, The delete fields
	 */
	function fill_in_edit_form($id)
	{
		$dbs_bak=$GLOBALS['NO_DB_SCOPE_CHECK'];
		$GLOBALS['NO_DB_SCOPE_CHECK']=true;

		$m=$GLOBALS['FORUM_DB']->query_select('f_usergroup_subs',array('*'),array('id'=>intval($id)),'',1);
		if (!array_key_exists(0,$m)) warn_exit(do_lang_tempcode('MISSING_RESOURCE'));
		$r=$m[0];

		$fields=$this->get_form_fields(get_translated_text($r['s_title'],$GLOBALS[(get_forum_type()=='ocf')?'FORUM_DB':'SITE_DB']),get_translated_text($r['s_description'],$GLOBALS[(get_forum_type()=='ocf')?'FORUM_DB':'SITE_DB']),$r['s_cost'],$r['s_length'],$r['s_length_units'],$r['s_group_id'],$r['s_uses_primary'],$r['s_enabled'],get_translated_text($r['s_mail_start'],$GLOBALS[(get_forum_type()=='ocf')?'FORUM_DB':'SITE_DB']),get_translated_text($r['s_mail_end'],$GLOBALS[(get_forum_type()=='ocf')?'FORUM_DB':'SITE_DB']),get_translated_text($r['s_mail_uhoh'],$GLOBALS[(get_forum_type()=='ocf')?'FORUM_DB':'SITE_DB']),$id);

		$GLOBALS['NO_DB_SCOPE_CHECK']=$dbs_bak;

		return $fields;
	}

	/**
	 * Standard crud_module add actualiser.
	 *
	 * @return array			A pair: The entry added, Description about usage
	 */
	function add_actualisation()
	{
		if (has_actual_page_access(get_member(),'admin_config'))
		{
			$_config_url=build_url(array('page'=>'admin_config','type'=>'category','id'=>'ECOMMERCE'),get_module_zone('admin_config'));
			$config_url=$_config_url->evaluate();
			$config_url.='#group_ECOMMERCE';

			$text=do_lang_tempcode('ECOM_ADDED_SUBSCRIP',escape_html($config_url));
		} else $text=NULL;

		$title=post_param('title');

		return array(strval(add_usergroup_subscription($title,post_param('description'),post_param('cost'),post_param_integer('length'),post_param('length_units'),post_param_integer('group_id'),post_param_integer('uses_primary',0),post_param_integer('enabled',0),post_param('mail_start'),post_param('mail_end'),post_param('mail_uhoh'))),$text);
	}

	/**
	 * Standard crud_module edit actualiser.
	 *
	 * @param  ID_TEXT		The entry being edited
	 */
	function edit_actualisation($id)
	{
		$title=post_param('title');

		edit_usergroup_subscription(intval($id),$title,post_param('description'),post_param('cost'),post_param_integer('length'),post_param('length_units'),post_param_integer('group_id'),post_param_integer('uses_primary',0),post_param_integer('enabled',0),post_param('mail_start'),post_param('mail_end'),post_param('mail_uhoh'));
	}

	/**
	 * Standard crud_module delete actualiser.
	 *
	 * @param  ID_TEXT		The entry being deleted
	 */
	function delete_actualisation($id)
	{
		$uhoh_mail=post_param('mail_uhoh');

		delete_usergroup_subscription(intval($id),$uhoh_mail);
	}
}
