<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2011

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/*NO_API_CHECK*/
/*CQC: No check*/

/**
 * @package		facebook
 */

/**
 * Handle a Facebook oauth request.
 *
 * @return tempcode		The UI
 */
function oauth_receive()
{
	$title=get_page_title('FACEBOOK_OAUTH');
	
	if (!is_null(get_param('error_reason',NULL)))
	{
		warn_exit(do_lang_tempcode('FACEBOOK_OAUTH_FAIL',escape_html(get_param('error_reason'))));
	}
	
	$code=get_param('code','',true);
	if ($code=='') exit();
	
	require_code('files');
	$validate_url='https://graph.facebook.com/oauth/access_token?client_id='.rawurlencode(get_option('facebook_appid')).'&redirect_uri='.rawurlencode(get_self_url(true,false,array('code'=>NULL))).'&client_secret='.rawurlencode(get_option('facebook_secret_code')).'&code='.rawurlencode($code);
	$result=http_download_file($validate_url);
	if ($result=='') exit();
	if (strpos($result,'error')!==false) warn_exit($result);

	$access_token=preg_replace('#^access_token=#','',$result);
	$user=json_decode(http_download_file('https://graph.facebook.com/me?access_token='.$access_token));

	if ($user->id!=get_option('facebook_target_ids'))
	{
		if (get_option('facebook_target_ids')=='')
		{
			require_code('config2');
			set_option('facebook_uid',$user->id);
			set_option('facebook_target_ids',$user->id);
		} else
		{
			warn_exit(do_lang_tempcode('WRONG_FACEBOOK_USERNAME'));
		}
	}

	// Save in two parts, as too long
	set_value('oauth_token',substr($access_token,0,50));
	set_value('oauth_token_2',substr($access_token,50));
	
	publish_to_FB(get_param('title'),get_param('categorisation'),get_param('link'));

	return inform_screen($title,do_lang_tempcode('FACEBOOK_OAUTH_SUCCESS'));
}

/**
 * Send a message to Facebook.
 *
 * @param  string				Title
 * @param  string				Heading of update
 * @param  string				Content source link
 * @param  string				Link Caption
 * @param  ID_TEXT			User ID of user to post to wall of
 * @return ~string			API output (false: error)
 */
function publish_to_FB($title,$categorisation,$link,$user_target_id=NULL)
{
	// ----------- the facebook client library include------------
	
	require_code('facebook/facebook');
	
	// ---------- Application api key, secret code setting -------
	
	$appapikey = get_option('facebook_api');
	$appsecret = get_option('facebook_secret_code');
	$uid = get_option('facebook_uid');
	$appid = get_option('facebook_appid');

	if(($appapikey=='') || ($appsecret=='') || ($appid=='')) return false;
	if(!function_exists('curl_init')) return false;
	
	$oauth_token = get_value('oauth_token');

   $oauth_url=build_url(array('page'=>'_SELF','type'=>'oauth_facebook','title'=>$title,'categorisation'=>$categorisation,'link'=>$link),'_SELF');
	$oauth_redir_url='https://www.facebook.com/dialog/oauth?client_id='.rawurlencode($appid).'&scope=publish_stream,offline_access&redirect_uri='.rawurlencode($oauth_url->evaluate());

	if (is_null($oauth_token))
	{
      header('Location: '.$oauth_redir_url);
		exit();
	}
	
	$oauth_token .= get_value('oauth_token_2'); // As is too long to fit on one hidden parameter

	if (is_null($user_target_id))
		$user_target_id = get_option('facebook_target_ids');
	if ($user_target_id=='') $user_target_id = $uid;

	$facebook = new Facebook(array('appId'=>$appid,'secret'=>$appsecret));
	$facebook->setSession(array('uid'=>$uid,'access_token'=>$oauth_token), false);
	
	//-------------------------------------------------------------
	
	$attachment = array(
		'name'=>$title,
		'link'=>$link,
		'caption'=>$categorisation,
	);
	try
	{
		$ret=$facebook->api('/'.$user_target_id.'/feed', 'POST', $attachment);
	}
	catch (Exception $e)
	{
		if ($e->getMessage()=='(#200) The user hasn\'t authorized the application to perform this action')
		{
	      header('Location: '.$oauth_redir_url);
			exit();
		} else fatal_exit($e->getMessage());
	}
	
	return $ret;
}
