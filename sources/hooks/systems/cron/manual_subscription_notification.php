<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2013

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		ecommerce
 */

class Hook_cron_manual_subscription_notification
{

	/**
	 * Standard modular run function for CRON hooks. Searches for tasks to perform.
	 */
	function run()
	{
		$_last_time=get_long_value('last_cron_manual_subscription_notification');
		$last_time=is_null($_last_time)?mixed():intval($_last_time);
		if (!is_null($last_time))
		{
			if ($last_time<60*60*24) return; // Only do once per day
		}

		$subscriptions=$GLOBALS['SITE_DB']->query_select('subscriptions',array('*'),array('s_state'=>'active','s_via'=>'manual'));
		if (count($subscriptions)>0)
		{
			require_code('ecommerce');
			require_lang('ecommerce');

			foreach ($subscriptions as $sub)
			{
				$product_obj=find_product($sub['s_type_code']);
				$products=$product_obj->get_products(true);
				$product_name=$products[$sub['s_type_code']][4];
				$s_length=$products[$sub['s_type_code']][3]['length'];
				$s_length_units=$products[$sub['s_type_code']][3]['length_units']; // y-year, m-month, w-week, d-day
				$time_period_units=array('y'=>'year','m'=>'month','w'=>'week','d'=>'day');
				$expiry_time=$sub['s_time'];
				while ($expiry_time<time())
				{
					$expiry_time=strtotime('+'.strval($s_length).' '.$time_period_units[$s_length_units],$expiry_time);
				}

				if (!is_null($last_time))
				{
					if (($expiry_time-$last_time)<(MANUAL_SUBSCRIPTION_EXPIRY_NOTICE*24*60*60)) continue; // Notification already sent!
				}

				if (($expiry_time-time())<(MANUAL_SUBSCRIPTION_EXPIRY_NOTICE*24*60*60))
				{
					$expiry_date=get_timezoned_date($expiry_time,false,false,false,true);
					$member_name=$GLOBALS['FORUM_DRIVER']->get_username($sub['s_member_id']);
					if (!is_null($member_name)) // If not a deleted member
					{
						$member_profile_url=$GLOBALS['OCF_DRIVER']->member_profile_url($sub['s_member_id']);
						$cancel_url=build_url(array('page'=>'admin_ecommerce','type'=>'cancel_subscription','subscription_id'=>$sub['id']),get_module_zone('admin_ecommerce'),NULL,false,false,true);
					
						require_code('notifications');
						$subject=do_lang('MANUAL_SUBSCRIPTION_NOTIFICATION_MAIL_SUBJECT',$member_name,$expiry_date);
						$mail=do_lang('MANUAL_SUBSCRIPTION_NOTIFICATION_MAIL',escape_html($member_profile_url),escape_html($cancel_url->evaluate()),array(strval(MANUAL_SUBSCRIPTION_EXPIRY_NOTICE),$member_name,$expiry_date));

						dispatch_notification('manual_subscription',NULL,$subject,$mail);
					}
				}
			}
		}

		set_long_value('last_cron_manual_subscription_notification',strval(time()));
	}

}