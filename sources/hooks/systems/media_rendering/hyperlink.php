<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2013

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		core_rich_media
 */

class Hook_media_rendering_hyperlink
{
	/**
	 * Find the media types this hook serves.
	 *
	 * @return integer	The media type(s), as a bitmask
	 */
	function get_media_type()
	{
		return MEDIA_TYPE_OTHER;
	}

	/**
	 * See if we can recognise this mime type.
	 *
	 * @param  ID_TEXT	The mime type
	 * @return integer	Recognition precedence
	 */
	function recognises_mime_type($mime_type)
	{
		return MEDIA_RECOG_PRECEDENCE_LOW;
	}

	/**
	 * See if we can recognise this URL pattern.
	 *
	 * @param  URLPATH	URL to pattern match
	 * @return integer	Recognition precedence
	 */
	function recognises_url($url)
	{
		return MEDIA_RECOG_PRECEDENCE_NONE;
	}

	/**
	 * Provide code to display what is at the URL, in the most appropriate way.
	 *
	 * @param  URLPATH	URL to render
	 * @param  array		Attributes (e.g. width, height, length)
	 * @param  ?MEMBER	Member to run as
	 * @return tempcode	Rendered version
	 */
	function render($url,$attributes,$source_member=NULL)
	{
		// Try and find the link title
		require_code('files2');
		$meta_details=get_webpage_meta_details($url);

		// Render as a nice preview box
		if (($meta_details['t_description']!='') || ($meta_details['t_image_url']!=''))
		{
			$title=$meta_details['t_title'];
			$meta_title=$meta_details['t_meta_title'];
			if ($meta_title=='') $meta_title=escape_html($title);

			return do_template('MEDIA_WEBPAGE_SEMANTIC',array(
				'TITLE'=>$meta_details['t_title'],
				'META_TITLE'=>$meta_title,
				'DESCRIPTION'=>$meta_details['t_description'],
				'IMAGE_URL'=>$meta_details['t_image_url'],
				'URL'=>$meta_details['t_url'],
			));
		}

		$link_captions_title=$meta_details['t_title'];
		if ($link_captions_title=='') $link_captions_title=$url;

		require_code('comcode_renderer');
		if (is_null($source_member)) $source_member=get_member();
		$comcode='';

		// Render as a 'page' link?
		$page_link=url_to_pagelink($url,true);
		if ($page_link!='')
		{
			return _do_tags_comcode('page',array('param'=>$page_link),make_string_tempcode(escape_html($link_captions_title)),false,$comcode,0,$source_member,false,$GLOBALS['SITE_DB'],'',false,false,false);
		}

		// Okay, just render as a URL then
		$url_tempcode=new ocp_tempcode();
		$url_tempcode->attach($url);
		return _do_tags_comcode('url',array('param'=>$link_captions_title),$url_tempcode,false,'',0,$source_member,false,$GLOBALS['SITE_DB'],$comcode,false,false,false);
	}

}
