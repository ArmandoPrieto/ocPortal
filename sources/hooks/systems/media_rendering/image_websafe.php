<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2013

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		core_rich_media
 */

class Hook_media_rendering_image_websafe
{
	/**
	 * Find the media types this hook serves.
	 *
	 * @return integer	The media type(s), as a bitmask
	 */
	function get_media_type()
	{
		return MEDIA_TYPE_IMAGE;
	}

	/**
	 * See if we can recognise this mime type.
	 *
	 * @param  ID_TEXT	The mime type
	 * @return integer	Recognition precedence
	 */
	function recognises_mime_type($mime_type)
	{
		if ($mime_type=='image/png') return MEDIA_RECOG_PRECEDENCE_HIGH;
		if ($mime_type=='image/gif') return MEDIA_RECOG_PRECEDENCE_HIGH;
		if ($mime_type=='image/jpeg') return MEDIA_RECOG_PRECEDENCE_HIGH;
		return MEDIA_RECOG_PRECEDENCE_NONE;
	}

	/**
	 * See if we can recognise this URL pattern.
	 *
	 * @param  URLPATH	URL to pattern match
	 * @return integer	Recognition precedence
	 */
	function recognises_url($url)
	{
		return MEDIA_RECOG_PRECEDENCE_NONE;
	}

	/**
	 * Provide code to display what is at the URL, in the most appropriate way.
	 *
	 * @param  URLPATH	URL to render
	 * @param  array		Attributes (e.g. width, height, length)
	 * @return tempcode	Rendered version
	 */
	function render($url,$attributes)
	{
		// Put in defaults
		if ((!array_key_exists('width',$attributes)) || (!is_numeric($attributes['width'])))
		{
			$attributes['width']=get_option('thumb_width');
			$auto_width=true;
		} else $auto_width=false;
		if ((!array_key_exists('height',$attributes)) || (!is_numeric($attributes['height'])))
		{
			$attributes['height']=get_option('thumb_width');
			$auto_height=true;
		} else $auto_height=false;
		if ((!array_key_exists('thumb_url',$attributes)) || ($attributes['thumb_url']==''))
		{
			$new_name=$attributes['width'].'__'.url_to_filename($url);
			require_code('images');
			if (!is_saveable_image($new_name)) $new_name.='.png';
			$file_thumb=get_custom_file_base().'/uploads/auto_thumbs/'.$new_name;
			if (!file_exists($file_thumb))
			{
				convert_image($url,$file_thumb,-1,-1,intval($attributes['width']),false);
			}
			$attributes['thumb_url']=get_custom_base_url().'/uploads/auto_thumbs/'.rawurlencode($new_name);
			if (function_exists('getimagesize'))
			{
				list($width,$height)=getimagesize($file_thumb);
				if ($auto_width) $attributes['width']=strval($width);
				if ($auto_height) $attributes['height']=strval($height);
			}
		}

		return do_template('MEDIA_IMAGE_WEBSAFE',array('HOOK'=>'image_websafe')+_create_media_template_parameters($url,$attributes));
	}

}
