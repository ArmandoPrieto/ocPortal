<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2013

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		core_menus
 */

require_code('content_fs');

class Hook_occle_fs_menus extends content_fs_base
{
	var $folder_content_type='menu';
	var $file_content_type='menu_item';

	/**
	 * Standard modular introspection function.
	 *
	 * @return array			The properties available for the content type
	 */
	function _enumerate_folder_properties()
	{
		return array(
		);
	}

	/**
	 * Standard modular add function for content hooks. Adds some content with the given label and properties.
	 *
	 * @param  SHORT_TEXT	Filename OR Content label
	 * @param  string			The path (blank: root / not applicable)
	 * @param  array			Properties (may be empty, properties given are open to interpretation by the hook but generally correspond to database fields)
	 * @return ~ID_TEXT		The content ID (false: error)
	 */
	function _folder_add($filename,$path,$properties)
	{
		list($category_content_type,$category)=$this->_folder_convert_filename_to_id($path);
		if ($category!='') return false; // Only one depth allowed for this content type

		list($properties,$label)=$this->_folder_magic_filter($filename,$path,$properties);

		require_code('menus2');

		$menu=$this->_create_name_from_label($label);

		$order=db_get_first_id();
		$parent=NULL;
		$caption=do_lang('FRONT_PAGE');
		$url='_SELF:start';
		$check_permissions=1;
		$page_only='';
		$expanded=1;
		$new_window=0;
		$caption_long='';
		$theme_image_code='';

		add_menu_item($menu,$order,$parent,$caption,$url,$check_permissions,$page_only,$expanded,$new_window,$caption_long,$theme_image_code);
		return $menu;
	}

	/**
	 * Standard modular delete function for content hooks. Deletes the content.
	 *
	 * @param  ID_TEXT	The filename
	 */
	function _folder_delete($filename)
	{
		list($content_type,$content_id)=$this->_folder_convert_filename_to_id($filename);

		require_code('menus2');
		delete_menu($content_id);
	}

	/**
	 * Standard modular introspection function.
	 *
	 * @return array			The properties available for the content type
	 */
	function _enumerate_file_properties()
	{
		return array(
			'order'=>'INTEGER',
			'parent'=>'?menu_item',
			'caption_long'=>'SHORT_TRANS',
			'url'=>'SHORT_TEXT',
			'check_permissions'=>'BINARY',
			'expanded'=>'BINARY',
			'new_window'=>'BINARY',
			'page_only'=>'ID_TEXT',
			'theme_img_code'=>'ID_TEXT',
		);
	}

	/**
	 * Standard modular add function for content hooks. Adds some content with the given label and properties.
	 *
	 * @param  SHORT_TEXT	Filename OR Content label
	 * @param  string			The path (blank: root / not applicable)
	 * @param  array			Properties (may be empty, properties given are open to interpretation by the hook but generally correspond to database fields)
	 * @return ~ID_TEXT		The content ID (false: error, could not create via these properties / here)
	 */
	function _file_add($filename,$path,$properties)
	{
		list($category_content_type,$category)=$this->_folder_convert_filename_to_id($path);
		list($properties,$label)=$this->_file_magic_filter($filename,$path,$properties);

		require_code('menus2');

		$order=$this->_default_property_int($properties,'order');
		$parent=$this->_default_property_int_null($properties,'parent');
		$url=$this->_default_property_str($properties,'url');
		$check_permissions=$this->_default_property_int($properties,'check_permissions');
		$page_only=$this->_default_property_str($properties,'page_only');
		$expanded=$this->_default_property_int($properties,'expanded');
		$new_window=$this->_default_property_int($properties,'new_window');
		$caption_long=$this->_default_property_str($properties,'caption_long');
		$theme_image_code=$this->_default_property_str($properties,'theme_image_code');

		$id=add_menu_item($category,$order,$parent,$label,$url,$check_permissions,$page_only,$expanded,$new_window,$caption_long,$theme_image_code);
		return strval($id);
	}

	/**
	 * Standard modular delete function for content hooks. Deletes the content.
	 *
	 * @param  ID_TEXT	The filename
	 */
	function _file_delete($filename)
	{
		list($content_type,$content_id)=$this->_file_convert_filename_to_id($filename);

		require_code('menus2');
		delete_menu_item(intval($content_id));
	}
}
