<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2013

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		galleries
 */

require_code('content_fs');

class Hook_occle_fs_galleries extends content_fs_base
{
	var $folder_content_type='gallery';
	var $file_content_type=array('image','video');

	/**
	 * Standard modular add function for content hooks. Adds some content with the given title and properties.
	 *
	 * @param  SHORT_TEXT	Content title
	 * @param  ID_TEXT		Parent category (blank: root / not applicable)
	 * @param  array			Properties (may be empty, properties given are open to interpretation by the hook but generally correspond to database fields)
	 * @return ID_TEXT		The content ID
	 */
	function _folder_add($title,$category,$properties)
	{
		require_code('galleries2');

		$name=$this->_create_name_from_title($title);
		$description=$this->_default_property_str($properties,'description');
		$notes=$this->_default_property_str($properties,'notes');
		$parent_id=$category;
		$accept_images=$this->_default_property_int_null($properties,'accept_images');
		if (is_null($accept_images)) $accept_images=1;
		$accept_videos=$this->_default_property_int_null($properties,'accept_videos');
		if (is_null($accept_videos)) $accept_videos=1;
		$is_member_synched=$this->_default_property_int($properties,'is_member_synched');
		$flow_mode_interface=$this->_default_property_int($properties,'flow_mode_interface');
		$rep_image=$this->_default_property_str($properties,'rep_image');
		$watermark_top_left=$this->_default_property_str($properties,'watermark_top_left');
		$watermark_top_right=$this->_default_property_str($properties,'watermark_top_right');
		$watermark_bottom_left=$this->_default_property_str($properties,'watermark_bottom_left');
		$watermark_bottom_right=$this->_default_property_str($properties,'watermark_bottom_right');
		$allow_rating=$this->_default_property_int($properties,'allow_rating');
		$allow_comments=$this->_default_property_int($properties,'allow_comments');
		$add_date=$this->_default_property_int_null($properties,'add_date');
		$g_owner=$this->_default_property_int_null($properties,'g_owner');
		add_gallery($name,$title,$description,$notes,$parent_id,$accept_images,$accept_videos,$is_member_synched,$flow_mode_interface,$rep_image,$watermark_top_left,$watermark_top_right,$watermark_bottom_left,$watermark_bottom_right,$allow_rating,$allow_comments,false,$add_date,$g_owner);
		return $name;
	}

	/**
	 * Standard modular delete function for content hooks. Deletes the content.
	 *
	 * @param  ID_TEXT	The content ID
	 */
	function _folder_delete($content_id)
	{
		require_code('galleries2');
		delete_gallery($content_id);
	}

	/**
	 * Standard modular add function for content hooks. Adds some content with the given title and properties.
	 *
	 * @param  SHORT_TEXT	Content title
	 * @param  ID_TEXT		Parent category (blank: root / not applicable)
	 * @param  array			Properties (may be empty, properties given are open to interpretation by the hook but generally correspond to database fields)
	 * @return ID_TEXT		The content ID
	 */
	function _file_add($title,$category,$properties)
	{
		require_code('galleries2');

		$cat=$category;
		$description=$this->_default_property_str($properties,'description');
		$url=$this->_default_property_str($properties,'url');
		$thumb_url=$this->_default_property_str($properties,'thumb_url');
		$validated=$this->_default_property_int($properties,'validated');
		$allow_rating=$this->_default_property_int($properties,'allow_rating');
		$allow_comments=$this->_default_property_int($properties,'allow_comments');
		$allow_trackbacks=$this->_default_property_int($properties,'allow_trackbacks');
		$notes=$this->_default_property_str($properties,'notes');
		$submitter=$this->_default_property_int_null($properties,'submitter');
		$add_date=$this->_default_property_int_null($properties,'add_date');
		$edit_date=$this->_default_property_int_null($properties,'edit_date');
		$views=$this->_default_property_int($properties,'views');

		if (TODO)
		{
			$id=add_image($title,$cat,$description,$url,$thumb_url,$validated,$allow_rating,$allow_comments,$allow_trackbacks,$notes,$submitter,$add_date,$edit_date,$views);
		} else
		{
			$video_length=$this->_default_property_int($properties,'video_length');
			$video_width=$this->_default_property_int_null($properties,'video_width');
			if (is_null($video_width)) $video_width=720;
			$video_height=$this->_default_property_int_null($properties,'video_height');
			if (is_null($video_height)) $video_height=576;
			$id=add_video($title,$cat,$description,$url,$thumb_url,$validated,$allow_rating,$allow_comments,$allow_trackbacks,$notes,$video_length,$video_width,$video_height,$submitter,$add_date,$edit_date,$views);
		}

		return strval($id);
	}

	/**
	 * Standard modular delete function for content hooks. Deletes the content.
	 *
	 * @param  ID_TEXT	The content ID
	 */
	function _file_delete($content_id)
	{
		require_code('galleries2');

		if (TODO)
		{
			delete_image(intval($content_id));
		} else
		{
			delete_video(intval($content_id));
		}
	}
}
