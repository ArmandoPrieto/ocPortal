<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2013

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		calendar
 */

require_code('content_fs');

class Hook_occle_fs_event extends content_fs_base
{
	var $folder_content_type='calendar_type';
	var $file_content_type='event';

	/**
	 * Standard modular add function for content hooks. Adds some content with the given title and properties.
	 *
	 * @param  SHORT_TEXT	Content title
	 * @param  ID_TEXT		Parent category (blank: root / not applicable)
	 * @param  array			Properties (may be empty, properties given are open to interpretation by the hook but generally correspond to database fields)
	 * @return ID_TEXT		The content ID
	 */
	function _folder_add($title,$category,$properties)
	{
		require_code('calendar2');

		$logo=$this->_default_property_str($properties,'logo');
		$external_feed=$this->_default_property_str($properties,'external_feed');
		$id=add_event_type($title,$logo,$external_feed);
		return strval($id);
	}

	/**
	 * Standard modular delete function for content hooks. Deletes the content.
	 *
	 * @param  ID_TEXT	The content ID
	 */
	function _folder_delete($content_id)
	{
		require_code('calendar2');
		delete_event_type(intval($content_id));
	}

	/**
	 * Standard modular add function for content hooks. Adds some content with the given title and properties.
	 *
	 * @param  SHORT_TEXT	Content title
	 * @param  ID_TEXT		Parent category (blank: root / not applicable)
	 * @param  array			Properties (may be empty, properties given are open to interpretation by the hook but generally correspond to database fields)
	 * @return ID_TEXT		The content ID
	 */
	function _file_add($title,$category,$properties)
	{
		require_code('calendar2');

		$type=$this->_integer_category($category);
		$recurrence=$this->_default_property_str($properties,'recurrence');
		$recurrences=$this->_default_property_int_null($properties,'recurrences');
		$seg_recurrences=$this->_default_property_int($properties,'seg_recurrences');
		$content=$this->_default_property_str($properties,'content');
		$priority=$this->_default_property_int_null($properties,'priority');
		if ($priority===NULL) $priority=3;
		$is_public=$this->_default_property_int_null($properties,'is_public');
		if ($is_public===NULL) $is_public=1;
		$start_year=$this->_default_property_int_null($properties,'start_year');
		if ($start_year===NULL) $start_year=intval(date('Y'));
		$start_month=$this->_default_property_int_null($properties,'start_month');
		if ($start_month===NULL) $start_month=intval(date('m'));
		$start_day=$this->_default_property_int_null($properties,'start_day');
		if ($start_day===NULL) $start_day=intval(date('d'));
		$start_monthly_spec_type=$this->_default_property_str($properties,'start_monthly_spec_type');
		if ($start_monthly_spec_type=='') $start_monthly_spec_type='day_of_month';
		$start_hour=$this->_default_property_int_null($properties,'start_hour');
		$start_minute=$this->_default_property_int_null($properties,'start_minute');
		$end_year=$this->_default_property_int_null($properties,'end_year');
		$end_month=$this->_default_property_int_null($properties,'end_month');
		$end_day=$this->_default_property_int_null($properties,'end_day');
		$end_monthly_spec_type=$this->_default_property_str($properties,'end_monthly_spec_type');
		if ($end_monthly_spec_type=='') $end_monthly_spec_type='day_of_month';
		$end_hour=$this->_default_property_int_null($properties,'end_hour');
		$end_minute=$this->_default_property_int_null($properties,'end_minute');
		$timezone=$this->_default_property_str_null($properties,'timezone');
		$do_timezone_conv=$this->_default_property_int($properties,'do_timezone_conv');
		$validated=$this->_default_property_int($properties,'validated');
		$allow_rating=$this->_default_property_int($properties,'allow_rating');
		$allow_comments=$this->_default_property_int($properties,'allow_comments');
		$allow_trackbacks=$this->_default_property_int($properties,'allow_trackbacks');
		$notes=$this->_default_property_str($properties,'notes');
		$submitter=$this->_default_property_int_null($properties,'submitter');
		$views=$this->_default_property_int($properties,'views');
		$add_time=$this->_default_property_int_null($properties,'add_time');
		$edit_time=$this->_default_property_int_null($properties,'edit_time');
		$id=add_calendar_event($type,$recurrence,$recurrences,$seg_recurrences,$title,$content,$priority,$is_public,$start_year,$start_month,$start_day,$start_monthly_spec_type,$start_hour,$start_minute,$end_year,$end_month,$end_day,$end_monthly_spec_type,$end_hour,$end_minute,$timezone,$do_timezone_conv,$validated,$allow_rating,$allow_comments,$allow_trackbacks,$notes,$submitter,$views,$add_time,$edit_time);
		return strval($id);
	}

	/**
	 * Standard modular delete function for content hooks. Deletes the content.
	 *
	 * @param  ID_TEXT	The content ID
	 */
	function _file_delete($content_id)
	{
		require_code('calendar2');
		delete_calendar_event(intval($content_id));
	}
}
