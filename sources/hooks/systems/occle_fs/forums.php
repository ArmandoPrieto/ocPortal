<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2013

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		ocf_forum
 */

require_code('content_fs');

class Hook_occle_fs_forums extends content_fs_base
{
	var $folder_content_type=array('forum','topic');
	var $file_content_type='post';

	/**
	 * Standard modular add function for content hooks. Adds some content with the given title and properties.
	 *
	 * @param  SHORT_TEXT	Content title
	 * @param  ID_TEXT		Parent category (blank: root / not applicable)
	 * @param  array			Properties (may be empty, properties given are open to interpretation by the hook but generally correspond to database fields)
	 * @return ID_TEXT		The content ID
	 */
	function _folder_add($title,$category,$properties)
	{
		if (TODO)
		{
			require_code('ocf_forums_action');

			$description=$this->_default_property_str($properties,'description');
			$forum_grouping_id=$this->_default_property_str($properties,'forum_grouping_id');
			$access_mapping=array();
			$parent_forum=$this->_integer_category($category);
			$position=$this->_default_property_str($properties,'position');
			$post_count_increment=$this->_default_property_str($properties,'post_count_increment');
			$order_sub_alpha=$this->_default_property_str($properties,'order_sub_alpha');
			$intro_question=$this->_default_property_str($properties,'intro_question');
			$intro_answer=$this->_default_property_str($properties,'intro_answer');
			$redirection=$this->_default_property_str($properties,'redirection');
			$order=$this->_default_property_str($properties,'order');
			$is_threaded=$this->_default_property_str($properties,'is_threaded');
			$id=ocf_make_forum($title,$description,$forum_grouping_id,$access_mapping,$parent_forum,$position,$post_count_increment,$order_sub_alpha,$intro_question,$intro_answer,$redirection,$order,$is_threaded);
		} else
		{
			require_code('ocf_topics_action');

			$forum_id=$this->_integer_category($category);
			$title=$this->_default_property_str($properties,'title');
			$emoticon=$this->_default_property_str($properties,'emoticon');
			$validated=$this->_default_property_str($properties,'validated');
			$open=$this->_default_property_str($properties,'open');
			$pinned=$this->_default_property_str($properties,'pinned');
			$sunk=$this->_default_property_str($properties,'sunk');
			$cascading=$this->_default_property_str($properties,'cascading');
			$pt_from=$this->_default_property_str($properties,'pt_from');
			$pt_to=$this->_default_property_str($properties,'pt_to');
			$num_views=$this->_default_property_str($properties,'num_views');
			$description_link=$this->_default_property_str($properties,'description_link');
			$id=ocf_make_topic($forum_id,$title,$emoticon,$validated,$open,$pinned,$sunk,$cascading,$pt_from,$pt_to,false,$num_views,NULL,$description_link);
		}

		return strval($id);
	}

	/**
	 * Standard modular delete function for content hooks. Deletes the content.
	 *
	 * @param  ID_TEXT	The content ID
	 */
	function _folder_delete($content_id)
	{
		if (TODO)
		{
			require_code('ocf_forums_action2');
			ocf_delete_forum(intval($content_id));
		} else
		{
			require_code('ocf_topics_action2');
			ocf_delete_topic(intval($content_id));
		}
	}

	/**
	 * Standard modular add function for content hooks. Adds some content with the given title and properties.
	 *
	 * @param  SHORT_TEXT	Content title
	 * @param  ID_TEXT		Parent category (blank: root / not applicable)
	 * @param  array			Properties (may be empty, properties given are open to interpretation by the hook but generally correspond to database fields)
	 * @return ID_TEXT		The content ID
	 */
	function _file_add($title,$category,$properties)
	{
		require_code('ocf_posts_action');

		$topic_id=$this->_integer_category($category);
		$real_title=$this->_default_property_str($properties,'title');
		$skip_sig=$this->_default_property_int($properties,'skip_sig');
		$validated=$this->_default_property_int($properties,'validated');
		$is_emphasised=$this->_default_property_int($properties,'is_emphasised');
		$poster_name_if_guest=$this->_default_property_str($properties,'poster_name_if_guest');
		$ip_address=$this->_default_property_str_null($properties,'ip_address');
		$time=$this->_default_property_int_null($properties,'time');
		$poster=$this->_default_property_int_null($properties,'poster');
		$intended_solely_for=$this->_default_property_int_null($properties,'intended_solely_for');
		$last_edit_time=$this->_default_property_int_null($properties,'last_edit_time');
		$last_edit_by=$this->_default_property_int_null($properties,'last_edit_by');
		$sunk=$this->_default_property_int($properties,'sunk');
		$anonymous=$this->_default_property_int($properties,'anonymous');
		$parent_id=$this->_default_property_int_null($properties,'parent_id');
		$id=ocf_make_post($topic_id,$real_title,$title,$skip_sig,NULL,$validated,$is_emphasised,$poster_name_if_guest,$ip_address,$time,$poster,$intended_solely_for,$last_edit_time,$last_edit_by,false,true,NULL,false,NULL,$sunk,NULL,$anonymous,true,NULL,false,$parent_id);
		return strval($id);
	}

	/**
	 * Standard modular delete function for content hooks. Deletes the content.
	 *
	 * @param  ID_TEXT	The content ID
	 */
	function _file_delete($content_id)
	{
		require_code('ocf_posts_action2');
		ocf_delete_post(intval($content_id));
	}
}
