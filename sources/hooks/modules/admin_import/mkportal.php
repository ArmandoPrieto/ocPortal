<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2012

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package 	import
 */

/**
 * Standard code module initialisation function.
 */
function init__hooks__modules__admin_import__mkportal()
{
	global $TOPIC_FORUM_CACHE;
	$TOPIC_FORUM_CACHE=array();

	global $STRICT_FILE;
	$STRICT_FILE=false; // Disable this for a quicker import that is quite liable to go wrong if you don't have the files in the right place

	global $OLD_BASE_URL;
	$OLD_BASE_URL=NULL;
}

class Hook_mkportal
{

	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['supports_advanced_import']=false;
		$info['product']='MKPortal C1.2.1';
		$info['prefix']='mkp_';
		$info['import']=array(
								'config',
								'banners',
								'pages',
								'quotes',
								'rss',
								'news_and_categories',
								'downloads_and_categories',
								'images_and_galleries',
								'blocks',
								'reviews'
							);

		$info['dependencies']=array( // This dependency tree is overdefined, but I wanted to make it clear what depends on what, rather than having a simplified version
								'news_and_categories'=>array('config'),
								'blocks'=>array('pages'),
							);

		return $info;
	}

	/**
	 * Verifies that the base path is correct
	 *
	 * @param  PATH			The base directory we are importing from
	 * @return boolean		True if the base path is correct and false if it's not correct
	 */
	function verify_base_path($file_base)
	{
		if (!file_exists($file_base.'/mkportal/conf_mk.php')) return false;
		return true;
	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_config($db,$table_prefix,$file_base)
	{
		$SITE_URL='';
		$SITE_NAME='';
		$MK_DISABLEGZIP=false;
		require($file_base.'/mkportal/conf_mk.php');

		$rows=$db->query_select('config');

		$config_remapping=array();
		$board_url=$SITE_URL;
		$config_remapping['site_name']=$SITE_NAME;

		$additional_data=array();

		//$MK_BOARD has the following forum types: AEF, IPB, IPB13, MYBB, PHPBB, PHPBB3, SMF, VB

		foreach ($rows as $row)
		{
			if ($row['chiave']=='upload_file_max')
			{
				$config_remapping['max_download_size']=$row['valore'];
				continue;
			}

			if ($row['chiave']=='upload_image_max')
			{
				$config_remapping['max_image_size']=$row['valore'];
				continue;
			}

			if ($row['chiave']=='thumb_max_dimen')
			{
				$config_remapping['thumb_width']=$row['valore'];
				continue;
			}

			if ($row['chiave']=='metakey')
			{
				$config_remapping['keywords']=$row['valore'];
				continue;
			}

			if ($row['chiave']=='metadesc')
			{
				$config_remapping['description']=$row['valore'];
				continue;
			}
		}

		$config_remapping['gzip_output']=($MK_DISABLEGZIP)?0:1;

		$INFO=array();

		foreach ($config_remapping as $key=>$value)
		{
			set_option($key,$value);
			$INFO[$key]=$row;
		}

		$INFO['board_prefix']=$SITE_URL;
	}

	/**
	 * Add a banner type.
	 *
	 * @param  ID_TEXT			The name for the banner type
	 * @param  BINARY				Whether this is a textual banner
	 * @param  integer			The image width (ignored for textual banners)
	 * @param  integer			The image height (ignored for textual banners)
	 * @param  integer			The maximum file size for the banners (this is a string length for textual banners)
	 * @param  BINARY				Whether the banner will be automatically shown via Comcode hot-text (this can only happen if banners of the title are given title-text)
	 * @return ID_TEXT			The banner type ID (same as $id)
	 */
	function custom_add_banner_type($id,$is_textual=0,$image_width=0,$image_height=0,$max_file_size=0,$comcode_inline=0)
	{
		$search_criteria=array();
		if (!is_null($id))
		{
			$search_criteria['id']=$id;
		}
		$search_criteria['t_image_width']=$image_width;
		$search_criteria['t_image_height']=$image_height;

		$found=$GLOBALS['SITE_DB']->query_value_null_ok('banner_types','id',$search_criteria);
		if (!is_null($found)) return $id;

		$GLOBALS['SITE_DB']->query_insert('banner_types',array(
			'id'=>$id,
			't_is_textual'=>$is_textual,
			't_image_width'=>$image_width,
			't_image_height'=>$image_height,
			't_max_file_size'=>$max_file_size,
			't_comcode_inline'=>$comcode_inline
		));

		return $id;
	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_banners($db,$table_prefix,$old_base_dir)
	{
		require_code('banners2');
		require_code('menus2');

		$topsites_standard_type=$this->custom_add_banner_type('topsites_standard',0,478,60,0,0);
		$topsites_button_type=$this->custom_add_banner_type('topsites_button',0,120,60,0,0);

		$rows=$db->query('SELECT * FROM '.$table_prefix.'topsite');
		foreach ($rows as $row)
		{
			$row['title']=@html_entity_decode($row['title'],ENT_QUOTES,get_charset());

			$name=$row['title'].strval($row['id']);
			$name=preg_replace('#^[\_\.\-]#','x',preg_replace('#[^\w\.\-]#','_',$name));
			$name2=$row['title'].strval($row['id']+1);
			$test=$GLOBALS['SITE_DB']->query_value_null_ok('banners','name',array('name'=>$name));
			if (is_null($test))
			{
				$type=0; // Permanent
				$campaignremaining=0; // Irrelevant
				$caption=$row['title'];
				$end_date=NULL;
				$old_url=$row['link'];
				$image_url=$row['banner'];
				$image_button_url=$row['banner2'];
				$site_email=$row['email'];

				if (get_forum_type()!='ocf')
				{
					ocf_over_msn();
					$all_members=$GLOBALS['FORUM_DRIVER']->get_matching_members('');
					ocf_over_local();

					$email_address_map=array();
					foreach ($all_members as $member)
					{
						$email_address_map[$GLOBALS['FORUM_DRIVER']->pname_email($member)]=$GLOBALS['FORUM_DRIVER']->pname_id($member);
					}

					if (array_key_exists($site_email,$email_address_map)) $member=$email_address_map[$site_email]; else $member=NULL;
				} else
				{
					$member=$GLOBALS['FORUM_DB']->query_value_null_ok('f_members','id',array('m_email_address'=>$site_email));
				}
				if (is_null($member)) $member=$row['id_member'];

				ocf_over_msn();
				if (strlen($image_url)>0)
					add_banner($name,$image_url,$caption,$caption,$campaignremaining,$old_url,10,html_to_comcode($row['description']),0,$end_date,$member,$row['validate'],$topsites_standard_type,NULL,0,$row['click'],0);
				if (strlen($image_button_url)>0)
					add_banner($name2,$image_button_url,$caption,$caption,$campaignremaining,$old_url,10,html_to_comcode($row['description']),0,$end_date,$member,$row['validate'],$topsites_button_type,NULL,0,$row['click'],0);
				ocf_over_local();
			}
		}

		//create Top Sites page if it is not already created
		$topsites_panel=get_file_base().'/site/pages/comcode_custom/'.get_site_default_lang().'/topsites.txt';

		require_lang('banners');

		//ensure that there is custom left panel
		if (!file_exists($topsites_panel))
		{
			$source_path=get_file_base().'/site/pages/comcode/'.get_site_default_lang().'/topsites.txt';
			if (file_exists($source_path))
			{
				copy($source_path,$topsites_panel);
				fix_permissions($topsites_panel);
				sync_file($topsites_panel);
			} else
			{
				//create file
				$myfile=@fopen($topsites_panel,'w');
				if ($myfile!==false)
				{
					$page=<<<END
[title]{!banners:TOP_SITES}[/title]

[block="topsites_standard"]main_topsites[/block]

END;

					fwrite($myfile,$page);
					fclose($myfile);
					fix_permissions($topsites_panel);
					sync_file($topsites_panel);
				}
			}
		}

		add_menu_item_simple('main_features',NULL,'TOP_SITES','site:topsites');

	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_pages($db,$table_prefix,$old_base_dir)
	{
		foreach (array('','/site') as $zone)
		{
			$c_dir=get_custom_file_base().$zone.'/pages/comcode_custom/'.get_site_default_lang().'/';
			$comcode_pages_title=do_lang('COMCODE_PAGES');
			$page=<<<END
[title]{$comcode_pages_title}[/title]

END;
			$rows=$db->query('SELECT * FROM '.$table_prefix.'pages WHERE '.db_string_equal_to('file',''));
			foreach ($rows as $row)
			{
				$row['title']=@html_entity_decode($row['title'],ENT_QUOTES,get_charset());

				ocf_over_msn();
				$row['content']=html_to_comcode($row['content']);
				ocf_over_local();
				$page.=' - [page caption="'.$row['title'].'"]pn'.strval($row['id']).'[/page]'.chr(10);

				$page2=do_template('IMPORT_MKPORTAL_FCOMCODEPAGE',array('TITLE'=>$row['title'],'SUBTITLE'=>'','PAGE_HEADER'=>'','TEXT'=>$row['content'],'PAGE_FOOTER'=>'','SIGNATURE'=>''));
				$path=$c_dir.'pn'.strval($row['id']).'.txt';
				$myfile=@fopen($path,'wt+');
				if ($myfile===false) intelligent_write_error($path);
				fwrite($myfile,$page2->evaluate());
				fclose($myfile);
				fix_permissions($path);
				sync_file($path);
			}

			$path=$c_dir.'pnindex.txt';
			$myfile=@fopen($path,'wt+');
			if ($myfile===false) intelligent_write_error($path);
			fwrite($myfile,$page);
			fclose($myfile);
			fix_permissions($path);
			sync_file($path);

			//start importing PHP pages
			$rows=$db->query('SELECT * FROM '.$table_prefix.'pages WHERE '.db_string_not_equal_to('file','')); //select just php files
			foreach ($rows as $row)
			{
				$path=$old_base_dir.'/mkportal/'.$row['file'];

				$content='';
				$myfile=@fopen($path,'rt');
				if ($myfile!==false)
				{
					$content=fread($myfile,filesize($path));
					fclose($myfile);
				}

				$path=get_custom_file_base().$zone.'/pages/minimodules_custom/'.preg_replace('/cache\//','',$row['file']);
				$myfile=@fopen($path,'wt+');
				if ($myfile===false) intelligent_write_error($path);
				fwrite($myfile,$content);
				fclose($myfile);
				fix_permissions($path);
				sync_file($path);
			}
		}

	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_quotes($db,$table_prefix,$old_base_dir)
	{
		$rows=$db->query('SELECT * FROM '.$table_prefix.'quotes');
		if (count($rows)!=0)
		{
			$out='';//trim(read_text_file('quotes',get_site_default_lang(),true)).chr(10);		We just want our own, but only if we have at least 1 (see if statement above)
			foreach ($rows as $row)
			{
				$row['quote']=@html_entity_decode($row['quote'],ENT_QUOTES,get_charset());

				$out.=$row['quote'];
				$out.=(isset($row['author'])&&(strlen($row['author'])>0))?' ('.$row['author'].')':'';
				$out.=chr(10);
			}
			require_code('textfiles');
			write_text_file('quotes',get_site_default_lang(),$out);
		}
	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_rss($db,$table_prefix,$old_base_dir)
	{
		$rows=$db->query('SELECT * FROM '.$table_prefix.'rss ORDER BY position ASC');

		$path=get_file_base().'/pages/comcode_custom/'.get_site_default_lang().'/panel_left.txt';

		if (!file_exists($path))
		{
			$source_path=get_file_base().'/pages/comcode/'.get_site_default_lang().'/panel_left.txt';
			copy($source_path,$path);
			fix_permissions($path);
			sync_file($path);
		}

		$out='';
		foreach ($rows as $row)
		{
			if ($row['url']!='http://www.microsite.reuters.com/rss/worldNews') // hard-coded MkPortal default
			{
				$out.=chr(10).'[block="'.$row['url'].'"]side_rss[/block]';
			}
		}

		$myfile=@fopen($path,'at');
		if ($myfile===false) intelligent_write_error($path);
		$out=unixify_line_format($out);
		fwrite($myfile,$out);
		fclose($myfile);
		fix_permissions($path);
		sync_file($path);
	}

	/**
	 * Convert a named news category to an ocPortal news category ID.
	 *
	 * @param  SHORT_TEXT	Named news category
	 * @param  ID_TEXT		The image code the news category will use
	 * @return AUTO_LINK		The news category ID
	 */
	function get_news_category_id($title,$image)
	{
		require_code('news');
		require_code('galleries2');
		$cat_id=$GLOBALS['SITE_DB']->query_value_null_ok('news_categories c LEFT JOIN '.$GLOBALS['SITE_DB']->get_table_prefix().'translate t ON c.nc_title=t.id','c.id',array('text_original'=>$title));
		if (is_null($cat_id))
			$cat_id=add_news_category($title,'newscats/'.$image,'');
		return $cat_id;
	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_news_and_categories($db,$table_prefix,$old_base_dir)
	{
		require_code('news');
		require_code('galleries2');

		//check is the comment forum configured in ocPortal
		$this->test_for_comments_forum();

		// Can we comment the news?
		$com=1;

		$forum_name=get_option('comments_forum_name');

		ocf_over_msn(); //used to fixed the correct forum prefix
		$forum_id=$GLOBALS['FORUM_DRIVER']->forum_id_from_name($forum_name);
		ocf_over_local(); //used to fixed the correct forum prefix

		/* old import reviews code, as part of the news. NOTE: now they are imported as catalogues entries
		// Reviews (imports into 'community')
		$rows=$db->query('SELECT r.id AS review_id, r.title AS review_title, r.description AS review_description, r.field1 AS rf1, r.field2 AS rf2, r.field3 AS rf3, r.field4 AS rf4, r.field5 AS rf5, r.field6 AS rf6, r.field7 AS rf7, r.*, rc.title AS rc_title, rc.description AS rc_description, rc.field1 AS rcf1, rc.field2 AS rcf2, rc.field3 AS rcf3, rc.field4 AS rcf4, rc.field5 AS rcf5, rc.field6 AS rcf6, rc.field7 AS rcf7, rc.* FROM '.$table_prefix.'reviews r LEFT JOIN '.$table_prefix.'reviews_sections rc ON r.id_cat=rc.id');

		foreach ($rows as $row)
		{
			$cat_id=$this->get_news_category_id($row['review_title'],'community');
			$review_description=$row['review_description'];
			for ($i=1;$i<=7;$i++)
			{
				if (strlen($row[strval('rcf'.$i)])>0)
				{
					$review_description.=chr(10).$row[strval('rcf'.$i)].': '.$row[strval('rf'.$i)];
				}
			}
			$review_description.=chr(10).'Views: '.strval(intval($row['click']));

			ocf_over_msn(); //used to fixed the correct forum prefix
			$new_id=add_news($row['review_title'],html_to_comcode($review_description),$row['idauth'],$row['validate'],$com,1,1,'',html_to_comcode($row['review']),$cat_id,array(),$row['date'],get_member(),$row['click']);
			ocf_over_local(); //used to fixed the correct forum prefix


			// Comments
			$comments=$db->query('SELECT * FROM '.$table_prefix.'reviews_comments WHERE id='.strval($row['review_id']).' ORDER BY data');
			if (!is_null($forum_id))
			{
				foreach ($comments as $comment)
				{
					$member=$comment['id_autore']; //$GLOBALS['FORUM_DRIVER']->get_member_from_username($comment['userid']);

					ocf_over_msn(); //used to fixed the correct forum prefix
					if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
					ocf_over_local(); //used to fixed the correct forum prefix

					$title='';
					$post=$comment['testo'];
					$content_url=build_url(array('page'=>'news','id'=>$new_id,'type'=>'view'),get_module_zone('news'));

					ocf_over_msn(); //used to fixed the correct forum prefix
					$GLOBALS['FORUM_DRIVER']->make_post_forum_topic(
						$forum_name,
						'news_'.strval($new_id),
						$member,
						$title,
						html_to_comcode($post),
						$row['title'],
						do_lang('COMMENT'),
						$content_url->evaluate()
					);
					ocf_over_local(); //used to fixed the correct forum prefix
				}
			}
		} end of old import reviews code */

		// Blogs (imports into community for author)
		$rows=$db->query('SELECT * FROM '.$table_prefix.'blog');
		foreach ($rows as $row)
		{
			$blog_cat_id=$GLOBALS['SITE_DB']->query_value_null_ok('news_categories','id',array('nc_owner'=>$row['creato']));

			$row['titolo']=@html_entity_decode($row['titolo'],ENT_QUOTES,get_charset());

			ocf_over_msn(); //used to fixed the correct forum prefix
			$submitting_member_id=$GLOBALS['FORUM_DRIVER']->get_member_from_username($row['autore']);
			if (is_null($submitting_member_id)) $submitting_member_id=$GLOBALS['FORUM_DRIVER']->get_guest_id();
			ocf_over_local(); //used to fixed the correct forum prefix

			if (is_null($blog_cat_id))
			{
				ocf_over_msn(); //used to fixed the correct forum prefix
				$p_nc_title=insert_lang($row['titolo'],2);
				ocf_over_local(); //used to fixed the correct forum prefix

				$blog_cat_id=$GLOBALS['SITE_DB']->query_insert('news_categories',array('nc_title'=>$p_nc_title,'nc_img'=>'newscats/community','notes'=>'','nc_owner'=>$submitting_member_id),true);

				ocf_over_msn(); //used to fixed the correct forum prefix
				$groups=$GLOBALS['FORUM_DRIVER']->get_usergroup_list(false,true);
				ocf_over_local(); //used to fixed the correct forum prefix

				foreach (array_keys($groups) as $group_id)
					$GLOBALS['SITE_DB']->query_insert('group_category_access',array('module_the_name'=>'news','category_name'=>strval($blog_cat_id),'group_id'=>$group_id));
			}

			// Blog description goes to first post in blog
			ocf_over_msn(); //used to fixed the correct forum prefix
			$new_id=add_news($row['titolo'],'',$row['autore'],$row['validate'],1,$com,1,'',html_to_comcode($row['descrizione']),$blog_cat_id,array(),$row['creato'],$submitting_member_id);
			ocf_over_local(); //used to fixed the correct forum prefix

			$blog_posts=$db->query('SELECT * FROM '.$table_prefix.'blog_post WHERE id_blog='.strval($row['id']));
			foreach ($blog_posts as $blog_post)
			{
				if (import_check_if_imported('blog_post',strval($blog_post['id']))) continue;

				ocf_over_msn(); //used to fixed the correct forum prefix
				$new_id=add_news($row['titolo'],'',$row['autore'],$row['validate'],1,$com,1,'',html_to_comcode($blog_post['post']),$blog_cat_id,array(),$blog_post['data'],$submitting_member_id);
				ocf_over_local(); //used to fixed the correct forum prefix

				import_id_remap_put('blog_post',strval($blog_post['id']),$new_id);

				//import blog rating too
				$this->_import_ratings($db,'news',$row['id'],$new_id,$row['rate'],$table_prefix);

				// Comments
				$comments=$db->query('SELECT * FROM '.$table_prefix.'blog_commenti WHERE id_blog='.strval($blog_post['id']).' ORDER BY data');
				if (!is_null($forum_id))
				{
					foreach ($comments as $comment)
					{
						ocf_over_msn(); //used to fixed the correct forum prefix
						$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($comment['autore']);
						if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
						ocf_over_local(); //used to fixed the correct forum prefix

						$title='';
						$post=$comment['commento'];
						$content_url=build_url(array('page'=>'news','id'=>$new_id,'type'=>'view'),get_module_zone('news'));

						ocf_over_msn(); //used to fixed the correct forum prefix
						$GLOBALS['FORUM_DRIVER']->make_post_forum_topic(
							$forum_name,
							'news_'.strval($new_id),
							$member,
							$title,
							html_to_comcode($post),
							$row['titolo'],
							do_lang('COMMENT'),
							$content_url->evaluate()
						);
						ocf_over_local(); //used to fixed the correct forum prefix
					}
				}
			}

			//import blog images in personal galleries or in synch onces
			if (addon_installed('galleries'))
			{
				$blog_pimages=$db->query('SELECT * FROM '.$table_prefix.'blog_pimages WHERE iduser='.strval($submitting_member_id));
				if (count($blog_pimages)!=0)
				{
					//find is there already a personal category container
					$pcc_gallery=$GLOBALS['SITE_DB']->query_value_null_ok('galleries','name',array('is_member_synched'=>1));
					$root_gallery=is_null($pcc_gallery)?'root':$pcc_gallery;

					$ocp_path=get_custom_file_base();

					//copy watermark image, to insure it is copied
					$save_filename=$old_base_dir.'mkportal/modules/gallery/wt.png'; //NOTE: this is the default watermark image in MKPortal, if customer needs to use another image, he/she needs to overwite it
					$watermark_image='';

					if (file_exists($save_filename))
					{
						$copy_destination=$ocp_path.'/uploads/watermarks/wt.png';

						@copy($save_filename,$copy_destination);
						fix_permissions($copy_destination);
						sync_file($copy_destination);
						$watermark_image=get_custom_base_url().'/uploads/watermarks/wt.png';;
					}

					//now we need to get MKPortal settings for the watermark images
					$conf_rows=$db->query('SELECT * FROM '.$table_prefix.'config WHERE '.db_string_equal_to('chiave','watermark_pos').' OR '.db_string_equal_to('chiave','watermark_enable'));

					$watermark_pos=2; //Possible values: 0 - Top-right; 1 - Center; 2 - Bottom-right (default for MKPortal)
					$watermark_enable=0; //by default it is disabled

					foreach ($conf_rows as $conf_row)
					{
						if (isset($conf_row['chiave'])&&$conf_row['chiave']=='watermark_pos')
						{
							$watermark_pos=$conf_row['valore'];
							if ($watermark_pos==1)
							{
								$watermark_pos=2; //ocPortal doesn't have watermark center position, so we will use the mkPortal default position: Bottom-right
							}
							continue;
						}

						if (isset($conf_row['chiave'])&&$conf_row['chiave']=='watermark_enable')
						{
							$watermark_enable=$conf_row['valore'];
							continue;
						}
					}

					//add blog gallery if not added
					$test=$GLOBALS['SITE_DB']->query_value_null_ok('galleries','name',array('name'=>$row['autore'].'_blog'));
					if (is_null($test))
					{
						$rep_image='';

						//set default values for the watermark positions
						$watermark_top_left='';
						$watermark_top_right='';
						$watermark_bottom_left='';
						$watermark_bottom_right='';

						if (($watermark_enable==1)&&(strlen($watermark_image)>0)&&file_exists($watermark_image))
						{
							//$watermark_pos=2; //Possible values: 0 - Top-right; 1 - Center; 2 - Bottom-right (default for MKPortal)
							if ($watermark_pos==2)
							{
								$watermark_top_right=$watermark_image;
							} else
							{
								$watermark_bottom_right=$watermark_image;
							}
						}

						$add_date=$row['creato'];
						ocf_over_msn();
						add_gallery($row['autore'].'_blog',$row['titolo'],html_to_comcode($row['descrizione']),'','',$root_gallery,1,0,0,0,$rep_image,$watermark_top_left,$watermark_top_right,$watermark_bottom_left,$watermark_bottom_right,1,1,false,$add_date);
						ocf_over_local();
					}

					$gal_idname=$row['autore'].'_blog';

					foreach ($blog_pimages as $blog_pimage)
					{
						if (import_check_if_imported('blog_image',strval($blog_pimage['id']))) continue;

						$submitter=$blog_pimage['iduser'];

						ocf_over_msn(); //used to fixed the correct forum prefix
						if (is_null($submitter)) $submitter=$GLOBALS['FORUM_DRIVER']->get_guest_id();
						ocf_over_local(); //used to fixed the correct forum prefix

						$id=(get_param_integer('keep_preserve_ids',0)==0)?NULL:$blog_pimage['id'];

						$cat_name=$row['autore'].'_blog';

						ocf_over_msn();
						$comment_text=$row['titolo'].' '.html_to_comcode($row['descrizione']);
						ocf_over_local();

						//copy image and thumbnail and apply urls
						$url='';
						$thumb_url='';
						//image source and destination
						$save_filename=$old_base_dir.'/mkportal/blog/images/'.strval($blog_pimage['file']);
						$copy_destination=$ocp_path.'/uploads/galleries/'.$blog_pimage['file'];

						copy($save_filename,$copy_destination);
						fix_permissions($copy_destination);
						sync_file($copy_destination);

						$url=get_custom_base_url().'/uploads/galleries/'.$blog_pimage['file'];
						$thumb_url='';

						$id_new=add_image('',$cat_name,$comment_text,$url,$url,$row['validate'],1,1,1,'',$submitter,$row['creato'],$row['creato'],$row['click'],$id);

						import_id_remap_put('blog_image',strval($blog_pimage['id']),$id_new);
					}
				}
			} //end import blog images
		} //end blog import

		// Stories categories, story items, and comments
		$cats=$db->query('SELECT * FROM '.$table_prefix.'news_sections');
		$cat_id=array();
		$image='general';
		foreach ($cats as $cat)
		{
			$cat_id[$cat['id']]=$this->get_news_category_id($cat['titolo'],$image);
		}

		$pinned_news_cat_id=$this->get_news_category_id(do_lang('PINNED_NEWS'),$image);

		$rows=$db->query('SELECT * FROM '.$table_prefix.'news');

		foreach ($rows as $row)
		{
			if (import_check_if_imported('news',strval($row['id']))) continue;

			$topic=array_key_exists($row['idcategoria'],$cat_id)?$cat_id[$row['idcategoria']]:db_get_first_id();

			$row['titolo']=@html_entity_decode($row['titolo'],ENT_QUOTES,get_charset());

			ocf_over_msn(); //used to fixed the correct forum prefix
			if ($row['pinned']==1)
			{
				$new_id=add_news($row['titolo'],'',$row['autore'],$row['validate'],1,$com,1,'',html_to_comcode($row['testo']),$topic,array($pinned_news_cat_id),$row['data'],$row['idautore']);
			} else
			{
				$new_id=add_news($row['titolo'],'',$row['autore'],$row['validate'],1,$com,1,'',html_to_comcode($row['testo']),$topic,array(),$row['data'],$row['idautore']);
			}
			ocf_over_local(); //used to fixed the correct forum prefix

			import_id_remap_put('news',strval($row['id']),$new_id);

			// Comments
			$comments=$db->query('SELECT * FROM '.$table_prefix.'news_comments WHERE identry='.strval($row['id']).' ORDER BY data');
			if (!is_null($forum_id))
			{
				foreach ($comments as $comment)
				{
					ocf_over_msn(); //used to fixed the correct forum prefix
					$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($comment['autore']);
					if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
					ocf_over_local(); //used to fixed the correct forum prefix

					$title='';
					$post=$comment['testo'];
					$content_url=build_url(array('page'=>'news','id'=>$new_id,'type'=>'view'),get_module_zone('news'));

					ocf_over_msn(); //used to fixed the correct forum prefix
					$GLOBALS['FORUM_DRIVER']->make_post_forum_topic(
						$forum_name,
						'news_'.strval($new_id),
						$member,
						$title,
						html_to_comcode($post),
						$row['titolo'],
						do_lang('COMMENT'),
						$content_url->evaluate()
					);
					ocf_over_local(); //used to fixed the correct forum prefix
				}
			}
		}
	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 * @return tempcode		Import message
	 */
	function import_downloads_and_categories($db,$table_prefix,$old_base_dir)
	{
		require_code('downloads2');
		require_code('authors');

		//check is the comment forum configured in ocPortal
		$this->test_for_comments_forum();

		$category_id_remap=array();
		$rows=$db->query('SELECT * FROM '.$table_prefix.'download_sections ORDER BY id');

		ocf_over_msn(); //used to fixed the correct forum prefix
		$category_id_remap[0]=db_get_first_id();
		ocf_over_local(); //used to fixed the correct forum prefix

		// Create categories
		$orig_parents=array();
		foreach ($rows as $row)
		{
			$id=import_id_remap_get('download_category',strval($row['id']),true);
			if (!is_null($id))
			{
				$category_id_remap[$row['id']]=$id;
				continue;
			}

			$orig_parents[$row['id']]=array($row['father'],$row['evento'],$row['descrizione']);
			$id=add_download_category(html_entity_decode($row['evento'],ENT_QUOTES,get_charset()),db_get_first_id(),'','','');
			$category_id_remap[$row['id']]=$id;
			ocf_over_msn(); //used to fixed the correct forum prefix
			$groups=$GLOBALS['FORUM_DRIVER']->get_usergroup_list(false,true);
			ocf_over_local(); //used to fixed the correct forum prefix

			foreach (array_keys($groups) as $group_id)
				$GLOBALS['SITE_DB']->query_insert('group_category_access',array('module_the_name'=>'downloads','category_name'=>strval($id),'group_id'=>$group_id));

			import_id_remap_put('download_category',strval($row['id']),$id);
		}
		foreach ($orig_parents as $cid=>$bits)
		{
			list($orig_parent,$category,$description)=$bits;

			if ($orig_parent==0)
			{
				ocf_over_msn(); //used to fixed the correct forum prefix
				$parent_id=db_get_first_id();
				ocf_over_local(); //used to fixed the correct forum prefix
			} else
			{
				$parent_id=$category_id_remap[$orig_parent];
			}

			ocf_over_msn(); //used to fixed the correct forum prefix
			edit_download_category(html_entity_decode($category,ENT_QUOTES,get_charset()),$parent_id,html_to_comcode($description),$category_id_remap[$cid],'','','','');
			ocf_over_local(); //used to fixed the correct forum prefix
		}

		// Read in downloads
		$rows=$db->query('SELECT * FROM '.$table_prefix.'download');
		$rows2=array();
		foreach ($rows as $i=>$row)
		{
			$rows[$i]['validated']= $row['validate'];
			$rows[$i]['date']=$row['data'];

			$rows2[$i]['totalvotes']=$row['rate'];
			$rows2[$i]['hits']=$row['click'];
			$rows2[$i]['screenshot']=$row['screen1'];
			$rows2[$i]['screenshot2']=$row['screen2'];
		}

		// Import downloads
		foreach ($rows as $row)
		{
			if (import_check_if_imported('download',strval($row['id']))) continue;

			$original_filename=$row['file'];

			$file_parts=explode('.',$row['file']);
			$file_ext=(count($file_parts)>1)?$file_parts[count($file_parts)-1]:'';
			$just_filename=(strlen($file_ext)>0)?preg_replace('#\.'.$file_ext.'#','',$row['file']):$row['file'];

			$mkp_disk_name='mk_'.strval($row['id']).'_'.$just_filename.'.mk';
			$save_filename=$old_base_dir.'/mkportal/modules/downloads/file/'.$mkp_disk_name;
			$copy_destination=get_custom_file_base().'/uploads/downloads/'.$mkp_disk_name;
			if (@copy($save_filename,$copy_destination)!==false)
			{
				fix_permissions($copy_destination);
				sync_file($copy_destination);
			}

			$url='uploads/downloads/'.$mkp_disk_name;

			$comments_text=($row['demo']=='')?'':(do_lang('DEMO_URL').': '.$row['demo']);

			$member=$row['idauth'];
			if (is_null($member)) $member=get_member();

			$row['name']=@html_entity_decode($row['name'],ENT_QUOTES,get_charset());

			ocf_over_msn(); //used to fixed the correct forum prefix
			$new_id=add_download($category_id_remap[$row['idcategoria']],$row['name'],$url,html_to_comcode($row['description']),$row['autore'],html_to_comcode($comments_text),NULL,$row['validate'],1,1,1,'',$original_filename,$row['peso'],0,0,NULL,$row['data'],$row['downloads'],$row['click'],$member);
			ocf_over_local(); //used to fixed the correct forum prefix

			import_id_remap_put('download',strval($row['id']),$new_id);

			//get comments forum
			$forum_name=get_option('comments_forum_name');

			ocf_over_msn(); //used to fixed the correct forum prefix
			$forum_id=$GLOBALS['FORUM_DRIVER']->forum_id_from_name($forum_name);
			ocf_over_local(); //used to fixed the correct forum prefix

			// Comments
			$comments=$db->query('SELECT * FROM '.$table_prefix.'download_comments WHERE identry='.strval($row['id']).' ORDER BY data');
			if (!is_null($forum_id))
			{
				foreach ($comments as $comment)
				{
					ocf_over_msn(); //used to fixed the correct forum prefix
					$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($comment['autore']);
					if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
					ocf_over_local(); //used to fixed the correct forum prefix
					$title='';
					$post=$comment['testo'];
					$content_url=build_url(array('page'=>'downloads','id'=>$new_id,'type'=>'view'),get_module_zone('downloads'));
					ocf_over_msn(); //used to fixed the correct forum prefix
					$GLOBALS['FORUM_DRIVER']->make_post_forum_topic(
						$forum_name,
						'downloads_'.strval($new_id),
						$member,
						$title,
						html_to_comcode($post),
						$row['name'],
						do_lang('COMMENT'),
						$content_url->evaluate()
					);
					ocf_over_local(); //used to fixed the correct forum prefix
				}
			}

			//check is the 'galleries' addon installed first, before importing the screenshots
			if (addon_installed('galleries'))
			{
				// Image
				if ($row['screen1']!='')
				{
					$image_url=$row['screen1'];
					$thumb_url='';
					add_image('','download_'.strval($new_id),'',$image_url,$thumb_url,$row['validate'],1,1,1,'');
				}

				// Image 2
				if ($row['screen2']!='')
				{
					$image_url=$row['screen2'];
					$thumb_url='';
					add_image('','download_'.strval($new_id),'',$image_url,$thumb_url,$row['validate'],1,1,1,'');
				}
			}

			//import download rating too
			$this->_import_ratings($db,'downloads',$row['id'],$new_id,$row['rate'],$table_prefix);
		}

		$out=do_template('IMPORT_MESSAGE',array('_GUID'=>'ff9131c37b9e4fa2cff991e3479ae867','MESSAGE'=>do_lang_tempcode('IMPORT_REBUILD_CACHE',do_lang('IMAGE_THUMBNAILS'))));
		return $out;
	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_images_and_galleries($db,$table_prefix,$old_base_dir)
	{
		require_code('galleries2');

		//check is the comment forum configured in ocPortal
		$this->test_for_comments_forum();

		$ocp_path=get_custom_file_base();

		//copy watermark image
		$save_filename=$old_base_dir.'mkportal/modules/gallery/wt.png'; //NOTE: this is the default watermark image in MKPortal, if customer needs to use another image, he/she needs to overwite it
		$watermark_image='';

		if (file_exists($save_filename))
		{
			$copy_destination=$ocp_path.'/uploads/watermarks/wt.png';

			@copy($save_filename,$copy_destination);
			fix_permissions($copy_destination);
			sync_file($copy_destination);
			$watermark_image=get_custom_base_url().'/uploads/watermarks/wt.png';;
		}

		//now we need to get MKPortal settings for the watermark images
		$rows=$db->query('SELECT * FROM '.$table_prefix.'config WHERE '.db_string_equal_to('chiave','watermark_pos').' OR '.db_string_equal_to('chiave','watermark_enable'));

		$watermark_pos='2'; //Possible values: 0 - Top-right; 1 - Center; 2 - Bottom-right (default for MKPortal)
		$watermark_enable='0'; //by default it is disabled

		foreach ($rows as $row)
		{
			if ($row['chiave']=='watermark_pos')
			{
				$watermark_pos=$row['valore'];
				if ($watermark_pos=='1')
				{
					$watermark_pos='2'; //ocPortal doesn't have watermark center position, so we will use the mkPortal default position: Bottom-right
				}
				continue;
			}

			if ($row['chiave']=='watermark_enable')
			{
				$watermark_enable=$row['valore'];
				continue;
			}
		}

		//add galleries first
		$rows=$db->query('SELECT * FROM '.$table_prefix.'gallery_events'); //for some strange reason the gallery categories are called events
		foreach ($rows as $row)
		{
			$test=$GLOBALS['SITE_DB']->query_value_null_ok('galleries','name',array('name'=>$row['evento']));
			if (is_null($test))
			{
				$rep_image='';

				$add_date=$db->query_value_null_ok('gallery','MIN(data)',array('evento'=>$row['id']));
				$add_date=(!is_null($add_date))?$add_date:time();

				//set default values for the watermark positions
				$watermark_top_left='';
				$watermark_top_right='';
				$watermark_bottom_left='';
				$watermark_bottom_right='';

				if (($watermark_enable=='1')&&(strlen($watermark_image)>0)&&file_exists($watermark_image))
				{
					//$watermark_pos - Possible values: 0 - Top-right; 1 - Center; 2 - Bottom-right (default for MKPortal)
					if ($watermark_pos=='2')
					{
						$watermark_top_right=$watermark_image;
					} else
					{
						$watermark_bottom_right=$watermark_image;
					}
				}

				$row['evento']=@html_entity_decode($row['evento'],ENT_QUOTES,get_charset());

				//find is there already a personal category container
				$pcc_gallery=$GLOBALS['SITE_DB']->query_select('galleries',NULL,array('name'=>'gallery_'.strval($row['father'])));
				$main_gallery=$GLOBALS['SITE_DB']->query_select('galleries',NULL,array('parent_id'=>''));
				$root_gallery=(isset($pcc_gallery[0]['name'])&&(strlen($pcc_gallery[0]['name'])>0))?$pcc_gallery[0]['name']:(isset($main_gallery[0]['name'])&&(strlen($main_gallery[0]['name'])>0))?$main_gallery[0]['name']:'root';

				$check_gallery_imported=$GLOBALS['SITE_DB']->query_select('galleries',NULL,array('name'=>'gallery_'.strval($row['id'])));

				if (!array_key_exists(0,$check_gallery_imported))
				{
					add_gallery('gallery_'.strval($row['id']),$row['evento'],'','','',$root_gallery,1,0,0,0,$rep_image,$watermark_top_left,$watermark_top_right,$watermark_bottom_left,$watermark_bottom_right,1,1,false,$add_date);
				}
			}
		}

		//get comments forum
		$forum_name=get_option('comments_forum_name');

		ocf_over_msn(); //used to fixed the correct forum prefix
		$forum_id=$GLOBALS['FORUM_DRIVER']->forum_id_from_name($forum_name);
		ocf_over_local(); //used to fixed the correct forum prefix

		//now we need to import the images
		$rows=$db->query('SELECT * FROM '.$table_prefix.'gallery ORDER BY id'); // NB: In MKPortal "gallery" is the images table, and "gallery_events" is the galleries table
		foreach ($rows as $row)
		{
			if (import_check_if_imported('image',strval($row['id']))) continue;

			$submitter=$row['idauth'];//import_id_remap_get('member',$GLOBALS['FORUM_DRIVER']->get_member_from_username($row['autore']),true);
			if (is_null($submitter)) $submitter=$GLOBALS['FORUM_DRIVER']->get_guest_id();
			$id=(get_param_integer('keep_preserve_ids',0)==0)?NULL:$row['id'];

			ocf_over_msn();
			$comment_text=html_to_comcode($row['titolo'].' '.$row['descrizione']);
			ocf_over_local();

			//copy image and thumbnail and apply urls
			$url='';
			$thumb_url='';
			//image source and destination
			$save_filename=$old_base_dir.'/mkportal/modules/gallery/album/'.$row['file'];
			$copy_destination=$ocp_path.'/uploads/galleries/'.$row['file'];

			//image thumbnail source and destination
			$save_tfilename=$old_base_dir.'/mkportal/modules/gallery/album/t_'.$row['file'];
			$copy_tdestination=$ocp_path.'/uploads/galleries_thumbs/'.$row['file'];

			if (@copy($save_filename,$copy_destination)!==false)
			{
				fix_permissions($copy_destination);
				sync_file($copy_destination);
			}
			if (@copy($save_tfilename,$copy_tdestination)!==false)
			{
				fix_permissions($copy_tdestination);
				sync_file($copy_tdestination);
			}

			$url=get_custom_base_url().'/uploads/galleries/'.$row['file'];
			$thumb_url=get_custom_base_url().'/uploads/galleries_thumbs/'.$row['file'];

			$id_new=add_image('','gallery_'.strval($row['evento']),$comment_text,$url,$url,$row['validate'],1,1,1,'',$submitter,$row['data'],NULL,$row['click'],$id);

			import_id_remap_put('image',strval($row['id']),$id_new);

			//import comments for image
			$comments=$db->query('SELECT * FROM '.$table_prefix.'gallery_comments WHERE identry='.strval($row['id']).' ORDER BY data');
			if (!is_null($forum_id))
			{
				foreach ($comments as $comment)
				{
					$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($comment['autore']);
					if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
					$title='';
					$post=$comment['testo'];
					$content_url=build_url(array('page'=>'galleries','id'=>$id_new,'type'=>'view'),get_module_zone('galleries'));
					ocf_over_msn(); //used to fixed the correct forum prefix
					$GLOBALS['FORUM_DRIVER']->make_post_forum_topic(
						$forum_name,
						'galleries_'.strval($id_new),
						$member,
						$title,
						html_to_comcode($post),
						$row['titolo'],
						do_lang('COMMENT'),
						$content_url->evaluate()
					);
					ocf_over_local(); //used to fixed the correct forum prefix
				}
			}

			//import gallery rating too
			$this->_import_ratings($db,'galleries',$row['id'],$id_new,$row['rate'],$table_prefix);
		}
	}

	/**
	 * Import ratings
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The ocPortal rating type - 'news'(used for blogs ratings),'downloads','galleries'
	 * @param  AUTO_LINK		The rating ID according to MKPortal
	 * @param  AUTO_LINK		The rating ID according to ocPortal
	 * @param  integer		The average rating
	 * @param  string			The table prefix the target prefix is using
	 */
	function _import_ratings($db,$ocp_type,$id_entry,$id_entry_new,$average_rate,$table_prefix='')
	{
		$mkp_type='';
		switch ($mkp_type)
		{
			case 'news':
				$mkp_type='blog';
				break;

			case 'galleries':
				$mkp_type='gallery';
				break;

			case 'downloads':
				$mkp_type='downloads';
				break;
		}

		$ratings=$db->query('SELECT * FROM '.$table_prefix.'votes WHERE id_entry='.strval($id_entry).' AND '.db_string_equal_to('module',$mkp_type).' ORDER BY id');

		foreach ($ratings as $rating)
		{
			$GLOBALS['SITE_DB']->query_insert('rating',array('rating_for_type'=>$ocp_type,'rating_for_id'=>$id_entry_new,'rating_member'=>$rating['id_member'],'rating_ip'=>$rating['ip'],'rating_time'=>time(),'rating'=>$average_rate));
		}
	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_blocks($db,$table_prefix,$old_base_dir)
	{
		require_code('menus2');
		//start importing PHP blocks
		$rows=$db->query('SELECT * FROM '.$table_prefix.'blocks WHERE '.db_string_not_equal_to('file','').' AND '.db_string_equal_to('active','checked').' ORDER BY progressive ASC');

		foreach (array('','/site') as $zone)
		{
			$left_panel=get_file_base().$zone.'/pages/comcode_custom/'.get_site_default_lang().'/panel_left.txt';
			$right_panel=get_file_base().$zone.'/pages/comcode_custom/'.get_site_default_lang().'/panel_right.txt';
			$center_panel=get_file_base().$zone.'/pages/comcode_custom/'.get_site_default_lang().'/start.txt';

			//ensure that there is custom left panel
			if (!file_exists($left_panel))
			{
				$source_path=get_file_base().$zone.'/pages/comcode/'.get_site_default_lang().'/panel_left.txt';
				if (file_exists($source_path))
				{
					copy($source_path,$left_panel);
				} else
				{
					//create file
					$myfile=@fopen($left_panel,'w');
					if ($myfile!==false)
					{
						fwrite($myfile,'');
						fclose($myfile);
					}
				}
			}

			//ensure that there is custom right panel
			if (!file_exists($right_panel))
			{
				$source_path=get_file_base().$zone.'/pages/comcode/'.get_site_default_lang().'/panel_right.txt';
				if (file_exists($source_path))
				{
					copy($source_path,$right_panel);
				} else
				{
					//create file
					$myfile=@fopen($right_panel,'w');
					if ($myfile!==false)
					{
						fwrite($myfile,'');
						fclose($myfile);
					}
				}
			}

			//ensure that there is custom start panel
			if (!file_exists($center_panel))
			{
				$source_path=get_file_base().$zone.'/pages/comcode/'.get_site_default_lang().'/start.txt';
				if (file_exists($source_path))
				{
					copy($source_path,$center_panel);
				} else
				{
					//create file
					$myfile=@fopen($center_panel,'wt');
					if ($myfile!==false)
					{
						fwrite($myfile,'');
						fclose($myfile);
					}
				}
			}

			//blocks remap array
			$blocks_remap=array(
				'Online Users'=>'side_users_online',
				'online_home'=>'side_users_online',
				'Calendar'=>'side_calendar',
				'last_downloads'=>'main_recent_downloads',
				'Latest News'=>'main_news',
				//'Main Menu'=>'main_features', //skip this
				'Site Stats'=>'side_stats',
				'Random Image'=>'main_iotd',
				'random_quote'=>'main_quotes',
	//			'rss'=>'side_rss', //skip, because they are imported in import_rss method
	//			'rss_simplepie'=>'side_rss', //skip, because they are imported in import_rss method
				'poll'=>'main_poll',
				'search'=>'main_search',
				'Lang'=>'side_language',
				'Boardnews'=>'main_forum_news',
				'Last Shouts'=>'side_shoutbox',
			);

			//go through all of the PHP blocks
			foreach ($rows as $row)
			{
				//find whether it is left (position=sinistra), center (position=centro), or right (position=destra).
				$position=($row['position']=='sinistra')?$left_panel:(($row['position']=='destra')?$right_panel:$center_panel);
				$middle=($position==$center_panel);
				$orig_block=$row['title'];

				//ignore blocks that could not be remapped
				if (!isset($blocks_remap[$row['title']])||strlen($blocks_remap[$row['title']])==0)
				{
					$exceptions=array(
						'Board Menu',
						'Personal Menu',
						'last_blog_post',
						'last_forum_post',
						'Latest News',
					);

					//skip next steps, if not needed
					if (!in_array($orig_block,$exceptions)) continue;

					//board menu
					if ($orig_block=='Board Menu')
					{
						//get position block content
						$contents=@file_get_contents($position);
						if ($contents===false) continue;

						//if the block is not set we need to include it at the end
						if (preg_match('/forum_features/im',$contents)==0)
						{
							$myfile=@fopen($position,'at+');
							if ($myfile===false) continue;

							$out='';
							$out.=(chr(10).($middle?chr(10):'')).'[block="forum_features" type="tree" caption="Forums"]side_stored_menu[/block]';

							fwrite($myfile,$out); //add block to the appropiate position in the end of the file

							fclose($myfile);
						}

					}

					//personal menu
					if ($orig_block=='Personal Menu')
					{
						//get position block content
						$contents=@file_get_contents($position);
						if ($contents===false) continue;

						//if the block is not set we need to include it at the end
						if (preg_match('/pc_features/im',$contents)==0)
						{
							$myfile=@fopen($position,'at+');
							if ($myfile===false) continue;

							$out='';
							$out.=(chr(10).($middle?chr(10):'')).'[block="pc_features" type="tree" caption="My stuff"]side_stored_menu[/block]';
							fwrite($myfile,$out); //add block to the appropiate position in the end of the file

							fclose($myfile);
						}

						//if the block is not set we need to include it at the end
						if (preg_match('/pc_edit/im',$contents)==0)
						{
							$myfile=@fopen($position,'at+');
							if ($myfile===false) continue;

							$out='';
							$out.=(chr(10).($middle?chr(10):'')).'[block="pc_edit" type="tree" caption="Settings" silent_failure="1"]side_stored_menu[/block]';
							fwrite($myfile,$out); //add block to the appropiate position in the end of the file

							fclose($myfile);
						}
					}

					//last blog post
					if ($orig_block=='last_blog_post')
					{
						//get position block content
						$contents=@file_get_contents($position);
						if ($contents===false) continue;

						//if the block is not set we need to include it at the end
						if (preg_match('/Last\sblog\spost/im',$contents)==0)
						{
							$myfile=@fopen($position,'at+');
							if ($myfile===false) continue;

							$out='';
							$out.=(chr(10).($middle?chr(10):'')).'[block="1" blogs="1" title="Last blog post"]side_news[/block]';
							fwrite($myfile,$out); //add block to the appropiate position in the end of the file

							fclose($myfile);
						}
					}

					//news
					if ($orig_block=='Latest News')
					{
						//get position block content
						$contents=@file_get_contents($position);
						if ($contents===false) continue;

						//if the block is not set we need to include it at the end
						if (preg_match('/main\_news/',$contents)==0)
						{
							$myfile=@fopen($position,'at+');
							if ($myfile===false) continue;

							$out='';
							$out.=(chr(10).($middle?chr(10):'')).'[block blogs="0"]main_news[/block]';
							fwrite($myfile,$out); //add block to the appropiate position in the end of the file

							fclose($myfile);
						}
					}

					//last forum posts
					if ($orig_block=='last_forum_post')
					{
						//get position block content
						$contents=@file_get_contents($position);
						if ($contents===false) continue;

						//if the block is not set we need to include it at the end
						if (preg_match('/Last\sforum\spost/im',$contents)==0)
						{
							$myfile=@fopen($position,'at+');
							if ($myfile===false) continue;

							$out='';
							$out.=(chr(10).($middle?chr(10):'')).'[block="General chat" title="Last forum post"]main_forum_topics[/block]';
							fwrite($myfile,$out); //add block to the appropiate position in the end of the file

							fclose($myfile);
						}
					}

					continue;
				}

				$remapped_block=$blocks_remap[$row['title']];

				$contents=@file_get_contents($position);
				if ($contents===false) continue;

				//if the block is not set we need to include it at the end
				if (preg_match('/'.$remapped_block.'/im',$contents)==0)
				{
					$myfile=@fopen($position,'at+');
					if ($myfile===false) continue;

					$out='';
					$out.=(chr(10).($middle?chr(10):'')).'[block]'.$remapped_block.'[/block]';
					fwrite($myfile,$out); //add block to the appropiate position in the end of the file

					fclose($myfile);
				}

			}

			//get pinned category id
			$pinned_news_cat_id=$this->get_news_category_id(do_lang('PINNED_NEWS'),'');
			$pinned_news=$GLOBALS['SITE_DB']->query_value_null_ok('news','id',array('news_category'=>$pinned_news_cat_id));

			if (!is_null($pinned_news))
			{
				//add pinned news module at the top of the center panel (start.txt)
				$contents=@file_get_contents($center_panel);
				if ($contents===false) $contents='';

				$myfile=@fopen($center_panel,'wt+');
				if ($myfile!==false)
				{
					//prepare the content to be written
					$out=''; //just to ensure
					$out.='[block="10000" blogs="0" filter="'.$pinned_news_cat_id.'" title="'.do_lang('PINNED_NEWS').'"]main_news[/block]'.(chr(10).($middle?chr(10):'')).$contents;

					//fseek($myfile, 0); //set the pointer at the start of the file
					fwrite($myfile,$out); //write the content of the from it's start

					fclose($myfile); //close file
				}
			}

			fix_permissions($left_panel);
			fix_permissions($right_panel);
			fix_permissions($center_panel);
			sync_file($left_panel);
			sync_file($right_panel);
			sync_file($center_panel);
		}

		//start importing PHP blocks
		$rows=$db->query('SELECT * FROM '.$table_prefix.'blocks WHERE '.db_string_equal_to('file','').' AND '.db_string_equal_to('active','checked').' ORDER BY progressive ASC');

		//go through all of the non-PHP blocks
		foreach ($rows as $row)
		{
			if (preg_match('/class="mkicon"/im',$row['content'])!=0)
			{
				//it is a links block
				$matches=array();
				preg_match_all('/href=\"(.*)\".*>(.*)<\/a>/Uim',$row['content'], $matches);

				$matches_url=(isset($matches[1])&&is_array($matches[1]))?$matches[1]:array();
				$matches_titles=(isset($matches[2])&&is_array($matches[2]))?$matches[2]:array();

				$block_title=@html_entity_decode($row['title'],ENT_QUOTES,get_charset());

				$out=chr(10).'[block="mkp_block_'.strval($row['id']).'" type="tree" caption="'.comcode_escape($block_title).'"]side_stored_menu[/block]';
				$left_panel_contents=file_get_contents($left_panel);
				if (strpos($left_panel_contents,$out)===false)
				{
					$myfile=@fopen($left_panel,'at');
					if ($myfile!==false)
					{
						fwrite($myfile,$out); //write the content of the from it's start
						fclose($myfile); //close file
					}
					fix_permissions($left_panel);
					sync_file($left_panel);
				}

				//if there are urls to be changed
				if (count($matches_url)>0)
				{
					foreach ($matches_url as $key=>$url)
					{
						$link_title=(isset($matches_titles[$key])&&(strlen($matches_titles[$key])>0))?$matches_titles[$key]:'';

						$_url_match=array();
						preg_match('/pid=.*/i',$url, $_url_match);
						$url_match=(isset($_url_match[0])&&strlen($_url_match[0])>0)?$_url_match[0]:'';
						$url_match=preg_replace('/pid=/','',$url_match);

						add_menu_item_simple('mkp_block_'.strval($row['id']),NULL,html_entity_decode($link_title,ENT_QUOTES,get_charset()),':pn'.$url_match);
					}
				}
			} else
			{
				//it is not a links block, so we write it into a new page
				$page_title=$row['title'];
				$page='';

				$c_dir=get_custom_file_base().'/pages/comcode_custom/'.get_site_default_lang().'/';
				$comcode_pages_title=do_lang('COMCODE_PAGES');

				//get other custom comcode pages names
				$older_comcode_files=array();
				$d=opendir($c_dir);
				while(false!==($entry = readdir($d)))
				{
					if (preg_match('/pn.*\.txt/',$entry)!=0)
					{
						$arr_index=intval(preg_replace('/pn|\.txt/','',$entry));
						$older_comcode_files[$arr_index]=$arr_index;
					}
				}
				closedir($d);

				ksort($older_comcode_files);

				//get the highest comcode page id
				$max_index=end($older_comcode_files);
				$max_index=is_null($max_index)?1:$max_index;
				$page.=' - [page caption="'.$page_title.'"]pn'.strval($max_index+1).'[/page]'.chr(10);

				$page2=do_template('IMPORT_MKPORTAL_FCOMCODEPAGE',array('TITLE'=>$page_title,'SUBTITLE'=>'','PAGE_HEADER'=>'','TEXT'=>$page,'PAGE_FOOTER'=>'','SIGNATURE'=>''));

				//save the comcode file
				$path=$c_dir.'pn'.strval($max_index+1).'.txt';
				$myfile=@fopen($path,'at');
				if ($myfile===false) intelligent_write_error($path);
				fwrite($myfile,$page2->evaluate());
				fclose($myfile);
				fix_permissions($path);
				sync_file($path);

				//add info about comcode file
				$path=$c_dir.'pnindex.txt';
				$myfile=@fopen($path,'at');
				if ($myfile===false) intelligent_write_error($path);
				fwrite($myfile,$page);
				fclose($myfile);
				fix_permissions($path);
				sync_file($path);
			}
		}
	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_reviews($db,$table_prefix,$old_base_dir)
	{
		require_code('menus2');

		//check is the comment forum configured in ocPortal
		$this->test_for_comments_forum();

		//include calatogue lib
		require_code('catalogues2');

		// Can we comment the news?
		$com=1;

		//get comments forum name
		$forum_name=get_option('comments_forum_name');

		ocf_over_msn(); //used to fixed the correct forum prefix
		$forum_id=$GLOBALS['FORUM_DRIVER']->forum_id_from_name($forum_name);
		ocf_over_local(); //used to fixed the correct forum prefix

		//get specific reviews fields
		$catalogues=$db->query('SELECT * FROM '.$table_prefix.'reviews_sections');

		$include_reviews_link=false; //include reviews link only once

		//go through all of the reviews sections
		foreach ($catalogues as $catalogue)
		{
			//make catalogue lang string
			$catalogue_name=strtoupper(preg_replace('#^[\_\.\-]#','x',preg_replace('#[^\w\.\-]#','_','review_'.$catalogue['title'])));
			$catalogue['title']=@html_entity_decode($catalogue['title'],ENT_QUOTES,get_charset());

			$specific_fields=array();

			// Add reviews catalogue if it doesn't already exist
			$current_review_catalogue=$GLOBALS['SITE_DB']->query_value_null_ok('catalogues','c_name',array('c_name'=>strtolower($catalogue_name)));
			if (is_null($current_review_catalogue))
			{
				$current_review_catalogue=actual_add_catalogue(strtolower($catalogue_name),$catalogue['title'],'',0,0,'',30);
				$fields=array(
					array(do_lang('REVIEW_TITLE'),'','short_trans',0,1),
					array(do_lang('REVIEW_DESCRIPTION'),'','long_trans',1,1),
					array(do_lang('REVIEW_IMAGE'),'','picture',0,1),
					array(do_lang('REVIEW_REVIEW'),'','long_trans',0,1),
//					array('REVIEW_ADDITIONAL_INFO','','long_trans',0,1)
				);

				$specific_fields=array();
				//add review/catalogue specific fields
				for ($i=1;$i<7;$i++)
				{
					if (strlen($catalogue['field'.strval($i)])>0)
					{
						//make lang string
						$lang_string=strtoupper(preg_replace('#^[\_\.\-]#','x',preg_replace('#[^\w\.\-]#','_',$catalogue['field'.strval($i)])));
						$lang_string=do_lang($lang_string,NULL,NULL,NULL,NULL,false);
						if (is_null($lang_string)) $lang_string=$catalogue['field'.strval($i)];

						$fields[]=array($lang_string,'','long_trans',0,1);
						$specific_fields[]=$i;
					}
				}

				//add fields to catalogue
				foreach ($fields as $i=>$field)
				{
					actual_add_catalogue_field(strtolower($catalogue_name),$field[0],'',$field[2],$i,$field[3],1,1,'',$field[4]);
				}
			}

			//import current reviews category
			$review_category_id=actual_add_catalogue_category(strtolower($catalogue_name),$catalogue['title'],'','',NULL,'');

			//include reviews link in main features menu
			if (!$include_reviews_link)
			{
				add_menu_item_simple('main_features',NULL,'REVIEWS','site:catalogues:category:'.strval($review_category_id));
				add_menu_item_simple('main_features',NULL,'REVIEWS','site:catalogues:index:'.strtolower($catalogue_name));
				$include_reviews_link=true;
			}

			$remappped_fields=collapse_1d_complexity('id',$GLOBALS['SITE_DB']->query_select('catalogue_fields',array('id'),array('c_name'=>strtolower($catalogue_name))));

			//select all reviews for current review catalogue
			$rows=$db->query('SELECT r.id AS review_id, r.title AS review_title, r.description AS review_description, r.field1 AS rf1, r.field2 AS rf2, r.field3 AS rf3, r.field4 AS rf4, r.field5 AS rf5, r.field6 AS rf6, r.field7 AS rf7, r.*, rc.title AS rc_title, rc.description AS rc_description, rc.field1 AS rcf1, rc.field2 AS rcf2, rc.field3 AS rcf3, rc.field4 AS rcf4, rc.field5 AS rcf5, rc.field6 AS rcf6, rc.field7 AS rcf7, rc.* FROM '.$table_prefix.'reviews r LEFT JOIN '.$table_prefix.'reviews_sections rc ON r.id_cat=rc.id WHERE r.id_cat='.strval($catalogue['id']));

			foreach ($rows as $row)
			{
				ocf_over_msn(); //used to fixed the correct forum prefix
				$map=array($remappped_fields[0]=>html_to_comcode($row['review_title']),$remappped_fields[1]=>html_to_comcode($row['review_description']),$remappped_fields[2]=>$row['image'],$remappped_fields[3]=>html_to_comcode($row['review']));
				$map_next_ind=count($map);
				foreach ($specific_fields as $field_num)
				{
					if (!isset($remappped_fields[$map_next_ind])) break; // Don't want to import non-used fields

					$map[$remappped_fields[$map_next_ind]]=html_to_comcode($row['rf'.strval($field_num+1)]);
					$map_next_ind++;
				}
				$new_id=actual_add_catalogue_entry($review_category_id,$row['validate'],'',0,0,0,$map,$row['date'],$GLOBALS['FORUM_DRIVER']->get_member_from_username($row['author']),NULL,$row['click']);
				ocf_over_local(); //used to fixed the correct forum prefix

				//import rating too
				$this->_import_ratings($db,'catalogues',$row['id'],$new_id,$row['rate'],$table_prefix);

				// Comments
				$comments=$db->query('SELECT * FROM '.$table_prefix.'reviews_comments WHERE id='.strval($row['review_id']).' ORDER BY data');
				if (!is_null($forum_id))
				{
					foreach ($comments as $comment)
					{
						$member=$comment['id_autore']; //$GLOBALS['FORUM_DRIVER']->get_member_from_username($comment['userid']);

						ocf_over_msn(); //used to fixed the correct forum prefix
						if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
						ocf_over_local(); //used to fixed the correct forum prefix

						$title=$row['review_title'];
						$post=$comment['testo'];
						$content_url=build_url(array('page'=>'catalogues','id'=>$new_id,'type'=>'view'),get_module_zone('catalogues'));

						ocf_over_msn(); //used to fixed the correct forum prefix
						$GLOBALS['FORUM_DRIVER']->make_post_forum_topic(
							$forum_name,
							'reviews_'.strval($new_id),
							$member,
							$title,
							html_to_comcode($post),
							$row['review_title'],
							do_lang('COMMENT'),
							$content_url->evaluate()
						);
						ocf_over_local(); //used to fixed the correct forum prefix
					}
				}
			}
		}
	}

	/**
	 * Check a comments forum has been configured.
	 */
	function test_for_comments_forum()
	{
		ocf_over_msn();
		$comments_forum=$GLOBALS['FORUM_DRIVER']->forum_id_from_name(get_option('comments_forum_name'));
		ocf_over_local();

		if (is_null($comments_forum))
		{
			$_config_url=build_url(array('page'=>'admin_config','type'=>'category','id'=>'FEATURE'),'adminzone');
			$config_url=$_config_url->evaluate();
			warn_exit(do_lang_tempcode('IMPORT_NO_COMMENTS_FORUM',escape_html($config_url.'#group_USER_INTERACTION')));
		}
	}

}
