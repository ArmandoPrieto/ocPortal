<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2012

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		import
 */

class Hook_phpnuke
{

	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['supports_advanced_import']=false;
		$info['product']='phpNuke 6.5 (more?)';
		$info['prefix']='nuke_';
		$info['import']=array(
								'authors',
								'banners',
								'config',
								'contacts',
								'downloads_and_categories',
								'ephems',
								'catalogue_faqs',
								'flagrant',
								'catalogue_links',
								'news_and_categories',
								'pages',
								'polls',
								'quotes',
								'cedi',
								'wordfilter'
							);
		$info['dependencies']=array( // This dependency tree is overdefined, but I wanted to make it clear what depends on what, rather than having a simplified version
								'news_and_categories'=>array('polls'),
							);

		return $info;
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_authors($db,$table_prefix,$old_base_dir) // phpNuke authors are almost forum members, as nuke doesn't have _core_ forum integration. We have to ignore most of this junk
	{
		require_code('authors');
		$rows=$db->query('SELECT * FROM '.$table_prefix.'authors',NULL,NULL,true);
		if (is_null($rows)) return;
		foreach ($rows as $row)
		{
			$test=$GLOBALS['SITE_DB']->query_value_null_ok('authors','author',array('author'=>$row['aid']));
			if (is_null($test))
			{
				$url=$row['url'];
				if ($url=='') $url='mailto:'.$row['email'];
				add_author($row['aid'],$url,NULL,'','');
			}
		}
	}
	
	/**
	 * Convert a mySQL timestamp to a standard timestamp.
	 *
	 * @param  string			MySQL timestamp
	 * @return TIME			Standard timestamp
	 */
	function mysql_time_to_timestamp($timestamp)
	{
		return strtotime($timestamp);
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_banners($db,$table_prefix,$old_base_dir)
	{
		require_code('banners');
		require_code('banners2');

		$rows=$db->query('SELECT * FROM '.$table_prefix.'banner b LEFT JOIN '.$table_prefix.'bannerclient c ON b.cid=c.cid');
		foreach ($rows as $row)
		{
			$name=$row['name'].$row['bid'];
			$test=$GLOBALS['SITE_DB']->query_value_null_ok('banners','name',array('name'=>$name));
			if (is_null($test))
			{
				$type=0; // Permanent
				$campaignremaining=0; // Irrelevant
				$caption=$row['alttext'];
				$end_date=$this->mysql_time_to_timestamp($row['date']);
				$old_url=$row['clickurl'];
				$image_url=$row['imageurl'];
				$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($row['contact']);
				if (is_null($member)) $member=get_member();
				add_banner($name,$image_url,'',$caption,$campaignremaining,$old_url,10,$row['email'].chr(10).$row['extrainfo'],$type,$end_date,$member,$row['active'],'',NULL,0,$row['clicks'],0,$row['impmade']);
			}
		}
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_config($db,$table_prefix,$old_base_dir)
	{
		$config_remap=array(
			'sitename'=>'site_name',
			'slogan'=>'description',
			'adminmail'=>'staff_address',
			'copyright'=>'copyright',
			'banners'=>'is_on_banners'
		);
	
		$rows=$db->query('SELECT * FROM '.$table_prefix.'config');
		foreach ($rows[0] as $name=>$value)
		{
			if (array_key_exists($name,$config_remap)) set_option($config_remap[$name],$value);
		}
	
		$rows=$db->query('SELECT content FROM '.$table_prefix.'message WHERE active=1 ORDER BY date DESC');
	
		set_option('welcome_message',$rows[0]['content']);
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_polls($db,$table_prefix,$old_base_dir)
	{
		require_code('polls');

		// Can we comment the poll?
		$rows=$db->query('SELECT pollcomm FROM '.$table_prefix.'config');
		$com=$rows[0]['pollcomm'];
	
		$forum_name=get_option('comments_forum_name');
		$forum_id=$GLOBALS['FORUM_DRIVER']->forum_id_from_name($forum_name);
	
		$rows=$db->query('SELECT * FROM '.$table_prefix.'poll_desc');
		foreach ($rows as $row)
		{
			// Find options on poll
			$options=$db->query('SELECT optionText,optionCount,voteID FROM '.$table_prefix.'poll_data WHERE pollID='.$row['pollID'].' ORDER BY voteID',5);
			$num_options=0;
			foreach ($options as $option)
			{
				if ($option['optionText']!='') $num_options++; else break;
			}
	
			// Add poll
			$id=add_poll($row['pollTitle'],$options[0]['optionText'],$options[1]['optionText'],$options[2]['optionText'],$options[3]['optionText'],$options[4]['optionText'],'','','','','',$num_options,1,1,1,$com,'',$row['timeStamp'],get_member(),$row['timeStamp'],$options[0]['optionCount'],$options[1]['optionCount'],$options[2]['optionCount'],$options[3]['optionCount'],$options[4]['optionCount'],0,0,0,0,0);

			// Who has voted in the poll?
			$votes=$db->query('SELECT ip FROM '.$table_prefix.'poll_check WHERE pollID='.strval($row['pollID']));
			foreach ($votes as $vote)
			{
				$GLOBALS['SITE_DB']->query_insert('poll_votes',array(
					'v_poll_id'=>$id,
					'v_voter_id'=>NULL,
					'v_voter_ip'=>$vote['ip'],
					'v_vote_for'=>NULL,
				));
			}

			// Poll comments
			$comments=$db->query('SELECT * FROM '.$table_prefix.'pollcomments WHERE pollID='.strval($row['pollID']).' ORDER BY date');
			if (!is_null($forum_id)) foreach ($comments as $comment)
			{
				$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($comment['name']);
				if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
				$title=$comment['subject'];
				$post=$comment['comment'];
				$content_url=build_url(array('page'=>'polls','id'=>$id,'type'=>'view'),get_module_zone('polls'));
				$GLOBALS['FORUM_DRIVER']->make_post_forum_topic(
					$forum_name,
					'polls_'.strval($id),
					$member,
					$title,
					'[html]'.$post.'[/html]',
					$row['pollTitle'],
					do_lang('COMMENT'),
					$content_url->evaluate(),
					$this->mysql_time_to_timestamp($comment['date'])
				);
			}
		}
	}
	
	/**
	 * Convert a named news category to an ocPortal news category ID.
	 *
	 * @param  SHORT_TEXT	Named news category
	 * @param  ID_TEXT		The image code the news category will use
	 * @return AUTO_LINK		The news category ID
	 */
	function get_news_category_id($title,$image)
	{
		$cat_id=$GLOBALS['SITE_DB']->query_value_null_ok('news_categories c LEFT JOIN '.$GLOBALS['SITE_DB']->get_table_prefix().'translate t ON c.nc_title=t.id','c.id',array('text_original'=>$title));
		if (is_null($cat_id))
			$cat_id=add_news_category($title,'newscats/'.$image,'');
		return $cat_id;
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_news_and_categories($db,$table_prefix,$old_base_dir)
	{
		require_code('news');
		require_code('news2');

		// Can we comment the news?
		$rows=$db->query('SELECT articlecomm FROM '.$table_prefix.'config');
		$com=$rows[0]['articlecomm'];
	
		$forum_name=get_option('comments_forum_name');
		$forum_id=$GLOBALS['FORUM_DRIVER']->forum_id_from_name($forum_name);
	
		// Reviews (imports into 'technology')
		$rows=$db->query('SELECT * FROM '.$table_prefix.'reviews');
		foreach ($rows as $i=>$row)
			$rows[$i]['validated']=1;
		$rows2=$db->query('SELECT * FROM '.$table_prefix.'reviews_add');
		foreach ($rows2 as $i=>$row)
		{
			$rows2[$i]['validated']=0;
			$rows2[$i]['hits']=0;
		}
		$rows=array_merge($rows,$rows2);
		foreach ($rows as $row)
		{
			$cat_id=$this->get_news_category_id(do_lang('NC_community'),'community');
			$new_id=add_news($row['title'],$row['cover'].chr(10).$row['url'].chr(10).$row['score'],$row['reviewer'],$row['validated'],$com,1,1,'',html_to_comcode($row['text']),$cat_id,array(),$this->mysql_time_to_timestamp($row['date']),get_member(),$row['hits']);

			// Comments
			$comments=$db->query('SELECT * FROM '.$table_prefix.'reviews_comments WHERE rid='.strval($row['id']).' ORDER BY date');
			if (!is_null($forum_id)) foreach ($comments as $comment)
			{
				$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($comment['userid']);
				if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
				$title='';
				$post=$comment['comment'];
				$content_url=build_url(array('page'=>'news','id'=>$new_id,'type'=>'view'),get_module_zone('news'));
				$GLOBALS['FORUM_DRIVER']->make_post_forum_topic(
					$forum_name,
					'news_'.strval($new_id),
					$member,
					$title,
					'[html]'.$post.'[/html]',
					$row['title'],
					do_lang('COMMENT'),
					$content_url->evaluate(),
					$this->mysql_time_to_timestamp($comment['date'])
				);
			}
		}
	
		// Journals (imports into community for author)
		$rows=$db->query('SELECT * FROM '.$table_prefix.'journal');
		foreach ($rows as $row)
		{
			$cat_id=$this->get_news_category_id(do_lang('JOURNAL_OF',$row['aid']),'community');
			$new_id=add_news($row['title'],$row['cover'].chr(10).$row['mood'].chr(10).$row['status'],$row['aid'],1,$com,1,1,'',html_to_comcode($row['bodytext']),$cat_id,array(),strtotime($row['pdate'].' '.$row['ptime']),get_member());

			// Comments
			$comments=$db->query('SELECT * FROM '.$table_prefix.'journal_comments WHERE rid='.$row['rid'].' ORDER BY date');
			if (!is_null($forum_id)) foreach ($comments as $comment)
			{
				$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($comment['aid']);
				if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
				$title='';
				$post=$comment['comment'];
				$content_url=build_url(array('page'=>'news','id'=>$new_id,'type'=>'view'),get_module_zone('news'));
				$GLOBALS['FORUM_DRIVER']->make_post_forum_topic(
					$forum_name,
					'news_'.strval($new_id),
					$member,
					$title,
					'[html]'.$post.'[/html]',
					$row['title'],
					do_lang('COMMENT'),
					$content_url->evaluate(),
					$this->mysql_time_to_timestamp($comment['date'])
				);
			}
		}
	
		// Stories (creates categories). NB: Dunno what stories_cat's are, but topic's are the way to go
		$cats=$db->query('SELECT * FROM '.$table_prefix.'topics');
		$cat_id=array();
		foreach ($cats as $cat)
		{
			$image=$cat['topicimage'];
			$dot_pos=strrpos($image,'.');
			if ($dot_pos===false) $dot_pos=strlen($image);
			$image=substr($image,0,$dot_pos);
			$cat_id[$cat['topicid']]=$this->get_news_category_id($cat['topictext'],$image);
		}
		$rows=$db->query('SELECT * FROM '.$table_prefix.'stories');
		foreach ($rows as $i=>$row)
			$rows[$i]['validated']=1;
		$rows2=$db->query('SELECT * FROM '.$table_prefix.'autonews');
		foreach ($rows2 as $i=>$row)
		{
			$rows2[$i]['validated']=0;
			$rows2[$i]['ratings']=0;
			$rows2[$i]['haspoll']=0;
		}
		$rows=array_merge($rows,$rows2);
		foreach ($rows as $row)
		{
			$append='';
			if ($row['haspoll']==1)
			{
				$poll_rows=$db->query('SELECT pollTitle FROM '.$table_prefix.'poll_desc WHERE pollID='.$row['pollID']);
				$poll_title=$poll_rows[0]['pollTitle'];
				$poll_id=$GLOBALS['SITE_DB']->query_value_null_ok('poll p LEFT JOIN '.get_table_prefix().'translate t ON p.question=t.id','p.id',array('text_original'=>$poll_title));
				if (is_null($poll_id)) $poll_id=1; // We couldn't find it (we should have imported polls first)
				$append=chr(10).'[block="'.$poll_id.'"][/block]';
			}
			$topic=array_key_exists($row['topic'],$cat_id)?$cat_id[$row['topic']]:db_get_first_id();
			$new_id=add_news($row['title'],$row['hometext'],$row['aid'],$row['validated'],$com,1,1,$row['notes'],html_to_comcode($row['bodytext']).$append,$topic,array(),$this->mysql_time_to_timestamp($row['time']),get_member(),$row['counter']);

			// Comments
			$comments=$db->query('SELECT * FROM '.$table_prefix.'comments WHERE sid='.$row['sid'].' ORDER BY date');
			if (!is_null($forum_id)) foreach ($comments as $comment)
			{
				$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($comment['name']);
				if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
				$title=$comment['subject'];
				$post=$comment['comment'];
				$content_url=build_url(array('page'=>'news','id'=>$new_id,'type'=>'view'),get_module_zone('news'));
				$GLOBALS['FORUM_DRIVER']->make_post_forum_topic(
					$forum_name,
					'news_'.strval($new_id),
					$member,
					$title,
					'[html]'.$post.'[/html]',
					$row['title'],
					do_lang('COMMENT'),
					$content_url->evaluate(),
					$this->mysql_time_to_timestamp($comment['date'])
				);
			}
	
			// Rating
			if ($row['ratings']!=0)
			{
				$real_rating=$row['score']; // Same scale as ocPortal :)
				$GLOBALS['SITE_DB']->query_insert('rating',array('rating_for_type'=>'news','rating_for_id'=>strval($new_id),'rating_member'=>get_member(),'rating_ip'=>'127.0.0.1','rating_time'=>time(),'rating'=>$real_rating));
			}
		}
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 * @return tempcode		Import message
	 */
	function import_downloads_and_categories($db,$table_prefix,$old_base_dir)
	{
		require_code('downloads2');
		require_code('downloads');

		$category_id_remap=array();
		$rows=$db->query('SELECT * FROM '.$table_prefix.'downloads_categories ORDER BY cid');
		$category_id_remap[0]=db_get_first_id();
		$orig_parents=array();
		foreach ($rows as $row)
		{
			$orig_parents[$row['cid']]=array($row['parentid'],$row['title'],$row['cdescription']);
			$id=add_download_category('',0,'','','');
			$category_id_remap[$row['cid']]=$id;
			$groups=$GLOBALS['FORUM_DRIVER']->get_usergroup_list(false,true);
			foreach (array_keys($groups) as $group_id)
				$GLOBALS['SITE_DB']->query_insert('group_category_access',array('module_the_name'=>'downloads','category_name'=>strval($id),'group_id'=>$group_id));
		}
		foreach ($orig_parents as $cid=>$bits)
		{
			list($orig_parent,$category,$description)=$bits;
	
			if ($orig_parent==0) $parent_id=db_get_first_id();
			else
			{
				$parent_id=$category_id_remap[$orig_parent];
			}

			edit_download_category($category,$parent_id,$description,$category_id_remap[$cid],'','','','');
		}

		$rows=$db->query('SELECT * FROM '.$table_prefix.'downloads_downloads');
		foreach ($rows as $i=>$row)
		{
			$rows[$i]['validated']=1;
			$rows[$i]['date']=$this->mysql_time_to_timestamp($row['date']);
		}
		$rows2=$db->query('SELECT * FROM '.$table_prefix.'downloads_newdownload');
		foreach ($rows2 as $i=>$row)
		{
			$rows2[$i]['validated']=0;
			$rows2[$i]['totalvotes']=0;
			$rows2[$i]['hits']=0;
			$rows2[$i]['date']=time();
			$rows2[$i]['screenshot']='';
		}
		$rows=array_merge($rows,$rows2);
		foreach ($rows as $row)
		{
			$url_parts=explode('/',$row['url']);
			$original_filename=rawurldecode($url_parts[count($url_parts)-1]);
			$url=$row['url'];
			if (url_is_local($url)) $url=get_custom_base_url().'/'.$url;
			$comments='';
			$comments_rows=$db->query('SELECT editorialtext FROM '.$table_prefix.'downloads_editorials WHERE downloadid='.$row['lid']);
			if (array_key_exists(0,$comments_rows)) $comments=$comments_rows[0]['editorialtext'];
			$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($row['submitter']);
			if (is_null($member)) $member=get_member();
			$new_id=add_download($category_id_remap[$row['cid']],$row['title'],$url,html_to_comcode($row['description']),$row['name'],html_to_comcode($comments),NULL,$row['validated'],1,1,1,'',$original_filename,$row['filesize'],0,0,NULL,$row['date'],$row['hits'],$row['hits'],$member);
			if ($row['totalvotes']!=0)
			{
				$real_rating=$row['downloadratingsummary']; // Same scale as ocPortal :)
				$GLOBALS['SITE_DB']->query_insert('rating',array('rating_for_type'=>'downloads','rating_for_id'=>strval($new_id),'rating_member'=>get_member(),'rating_ip'=>'127.0.0.1','rating_time'=>time(),'rating'=>$real_rating));
			}
	
			// Homepage->Into author
			$test=$GLOBALS['SITE_DB']->query_value_null_ok('authors','url',array('author'=>$row['name']));
			if (is_null($test))
			{
				require_code('authors');
				add_author($row['name'],$row['homepage'],NULL,'','');
			} else
			{
				$GLOBALS['SITE_DB']->query_update('authors',array('url'=>$row['homepage']),array('author'=>$row['name']));
			}
	
			// Image
			if (($row['screenshot']!='') && (addon_installed('galleries')))
			{
				$image_url=$row['screenshot'];
				if (url_is_local($image_url)) $image_url=get_custom_base_url().'/'.$image_url;
				$thumb_url='';
				add_image('','download_'.strval($new_id),'',$image_url,$thumb_url,$row['validated'],1,1,1,'');
			}
		}
	
		$out=do_template('IMPORT_MESSAGE',array('_GUID'=>'ff9131c37b9e4fa2cff991e3479ae867','MESSAGE'=>do_lang_tempcode('IMPORT_REBUILD_CACHE',do_lang('IMAGE_THUMBNAILS'))));
		return $out;
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_cedi($db,$table_prefix,$old_base_dir)
	{
		require_code('cedi');

		$root_cat=db_get_first_id();
	
		$rows=$db->query('SELECT * FROM '.$table_prefix.'encyclopedia');
		$page_id_remap=array();
		foreach ($rows as $i=>$row)
		{
			$id=$GLOBALS['SITE_DB']->query_insert('seedy_pages',array('notes'=>'','description'=>insert_lang_comcode(html_to_comcode($row['description']),2),'add_date'=>time(),'title'=>insert_lang($row['title'],1),'seedy_views'=>0,'hide_posts'=>0),true);
			$page_id_remap[$row['eid']]=$id;
			$GLOBALS['SITE_DB']->query_insert('seedy_children',array('parent_id'=>$root_cat,'child_id'=>$id,'the_order'=>$i,'title'=>$row['title']));
		}
		$rows=$db->query('SELECT * FROM '.$table_prefix.'encyclopedia_text');
		foreach ($rows as $i=>$row)
		{
			$row['date']=time();
			$id=$GLOBALS['SITE_DB']->query_insert('seedy_pages',array('notes'=>'','description'=>insert_lang_comcode(html_to_comcode($row['text']),2),'add_date'=>time(),'title'=>insert_lang($row['title'],2),'seedy_views'=>0,'hide_posts'=>0),true);
			$GLOBALS['SITE_DB']->query_insert('seedy_children',array('parent_id'=>$page_id_remap[$row['eid']],'child_id'=>$id,'the_order'=>$i,'title'=>$row['title']));
		}
	}

	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_catalogue_faqs($db,$table_prefix,$old_base_dir)
	{
		require_code('catalogues2');
		require_code('catalogues');

		$fields=collapse_1d_complexity('id',$GLOBALS['SITE_DB']->query_select('catalogue_fields',array('id'),array('c_name'=>'faqs')));
		$categories=$db->query('SELECT * FROM '.$table_prefix.'faqcategories');
		foreach ($categories as $category)
		{
			$id=actual_add_catalogue_category('faqs',$category['categories'],do_lang('DEFAULT_CATALOGUE_FAQS_DESCRIPTION'),'',NULL,'');
			grant_catalogue_full_access($id);
			$rows=$db->query('SELECT * FROM '.$table_prefix.'faqanswer WHERE id_cat='.$category['id_cat']);
			foreach ($rows as $i=>$row)
			{
				$map=array($fields[0]=>$row['question'],$fields[1]=>$row['answer'],$fields[2]=>$i);
				actual_add_catalogue_entry($id,1,'',1,1,1,$map);
			}
		}
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_catalogue_links($db,$table_prefix,$old_base_dir)
	{
		require_code('catalogues2');
		require_code('catalogues');

		$fields=collapse_1d_complexity('id',$GLOBALS['SITE_DB']->query_select('catalogue_fields',array('id'),array('c_name'=>'links')));
		$categories=$db->query('SELECT * FROM '.$table_prefix.'links_categories');
		// TODO: Got an error mail about the above query failing. Investigate on next review of importer.
		$root_category=$GLOBALS['SITE_DB']->query_value('catalogue_categories','MIN(id)',array('c_name'=>'links'));
		foreach ($categories as $category)
		{
			$id=actual_add_catalogue_category('links',$category['title'],$category['cdescription'],'',$root_category,'');
			grant_catalogue_full_access($id);
			$rows=$db->query('SELECT * FROM '.$table_prefix.'links_links WHERE cid='.$category['cid']);
			foreach ($rows as $i=>$row)
			{
				$rows[$i]['validated']=1;
				$rows[$i]['date']=$this->mysql_time_to_timestamp($row['date']);
			}
			$rows2=$db->query('SELECT * FROM '.$table_prefix.'links_newlink');
			foreach ($rows2 as $i=>$row)
			{
				$rows2[$i]['validated']=0;
				$rows2[$i]['hits']=0;
				$rows2[$i]['totalvotes']=0;
				$rows2[$i]['date']=time();
			}
			$rows=array_merge($rows,$rows2);
			foreach ($rows as $row)
			{
				$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($row['name']);
				if (is_null($member)) $member=get_member();
				$map=array($fields[0]=>$row['title'],$fields[1]=>$row['url'],$fields[2]=>$row['description']);
				$new_id=actual_add_catalogue_entry($id,$row['validated'],'',1,1,1,$map,$row['date'],$member);
	
				// Links rating
				if ($row['totalvotes']!=0)
				{
					$real_rating=$row['linkratingsummary']; // Same scale as ocPortal :)
					$GLOBALS['SITE_DB']->query_insert('rating',array('rating_for_type'=>'catalogues','rating_for_id'=>strval($new_id),'rating_member'=>get_member(),'rating_ip'=>'127.0.0.1','rating_time'=>time(),'rating'=>$real_rating));
				}
			}
		}
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_flagrant($db,$table_prefix,$old_base_dir)
	{
		require_code('flagrant');

		$rows=$db->query('SELECT * FROM '.$table_prefix.'public_messages');
		foreach ($rows as $row)
		{
			$member=$GLOBALS['FORUM_DRIVER']->get_member_from_username($row['who']);
			if (is_null($member)) $member=$GLOBALS['FORUM_DRIVER']->get_guest_id();
			$GLOBALS['SITE_DB']->query_insert('text',array('user_id'=>$member,'the_message'=>insert_lang_comcode($row['content'],2),'days'=>1,'order_time'=>strtotime($row['date']),'activation_time'=>NULL,'active_now'=>0,'notes'=>''));
		}
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_pages($db,$table_prefix,$old_base_dir)
	{
		$c_dir=get_custom_file_base().'/pages/comcode_custom/'.get_site_default_lang().'/';
		$comcode_pages_title=do_lang('COMCODE_PAGES');
		$page=<<<END
[title]{$comcode_pages_title}[/title]
	
END;
		$rows=$db->query('SELECT * FROM '.$table_prefix.'pages_categories');
		foreach ($rows as $row)
		{
			$page.=' - '.$row['title'].', '.$row['description'].chr(10);
			$pages=$db->query('SELECT * FROM '.$table_prefix.'pages WHERE cid='.$row['cid']);
			foreach ($pages as $pr)
			{
				$page.='  - [page caption="'.$pr['title'].'"]pn'.$pr['pid'].'[/page]'.chr(10);
	
				$page2=do_template('IMPORT_PHPNUKE_FCOMCODEPAGE',array('_GUID'=>'b8845762ea13b4a87c55b9ffc8c6992a','TITLE'=>$pr['title'],'SUBTITLE'=>$pr['subtitle'],'PAGE_HEADER'=>$pr['page_header'],'TEXT'=>$pr['text'],'PAGE_FOOTER'=>$pr['page_footer'],'SIGNATURE'=>$pr['signature']));
				$path=$c_dir.'pn'.strval($pr['pid']).'.txt';
				$myfile=@fopen($path,'wb');
				if ($myfile===false) warn_exit(do_lang_tempcode('WRITE_ERROR','pages/comcode_custom/'.get_site_default_lang()));
				$contents=$page2->evaluate();
				if (fwrite($myfile,$contents)<strlen($contents)) warn_exit(do_lang_tempcode('COULD_NOT_SAVE_FILE'));
				fclose($myfile);
				fix_permissions($path);
				sync_file($path);
			}
		}
		$path=$c_dir.'pnindex.txt';
		$myfile=@fopen($path,'wt');
		if ($myfile===false) warn_exit(do_lang_tempcode('WRITE_ERROR','pages/comcode_custom/'.get_site_default_lang()));
		if (fwrite($myfile,$page)<strlen($page)) warn_exit(do_lang_tempcode('COULD_NOT_SAVE_FILE'));
		fclose($myfile);
		fix_permissions($path);
		sync_file($path);
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_quotes($db,$table_prefix,$old_base_dir)
	{
		require_code('textfiles');
		$rows=$db->query('SELECT * FROM '.$table_prefix.'quotes');
		$out=read_text_file('quotes',get_site_default_lang(),true);
		foreach ($rows as $row)
		{
			$out.=$row['quote'].chr(10);
		}
		write_text_file('quotes',get_site_default_lang(),$out);
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_wordfilter($db,$table_prefix,$old_base_dir)
	{
		require_code('word_filter');

		$rows=$db->query('SELECT * FROM '.$table_prefix.'words');
		foreach ($rows as $row)
		{
			add_wordfilter_word($row['word'],$row['replacement']);
		}
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_ephems($db,$table_prefix,$old_base_dir)
	{
		require_code('catalogues2');
		require_code('catalogues');

		// Add ephems catalogue if it doesn't already exist
		$test=$GLOBALS['SITE_DB']->query_value_null_ok('catalogues','c_name',array('c_name'=>'ephems'));
		if (is_null($test))
		{
			actual_add_catalogue('ephems',lang_code_to_default_content('EPHEMS',false,2),insert_lang('',2),0,0,'',30);
			$fields=array(
				array('DAY','','integer',0,1),
				array('MONTH','','integer',1,1),
				array('YEAR','','integer',0,1),
				array('CAPTION','','long_trans',0,1)
			);
			foreach ($fields as $i=>$field)
				actual_add_catalogue_field('ephems',lang_code_to_default_content($field[0],false,3),insert_lang('',2),$field[2],$i,$field[3],1,1,'',$field[4]);
		}

		$id=actual_add_catalogue_category('ephems','ex-phpNuke','','',NULL,'');
	
		$fields=collapse_1d_complexity('id',$GLOBALS['SITE_DB']->query_select('catalogue_fields',array('id'),array('c_name'=>'ephems')));
		$ephems=$db->query('SELECT * FROM '.$table_prefix.'ephem');
		foreach ($ephems as $row)
		{
			$map=array($fields[0]=>$row['did'],$fields[1]=>$row['mid'],$fields[2]=>$row['yid'],$fields[3]=>$row['content']);
			actual_add_catalogue_entry($id,1,'',0,0,0,$map);
		}
	}
	
	/**
	 * Standard import function.
	 *
	 * @param  object			The DB connection to import from
	 * @param  string			The table prefix the target prefix is using
	 * @param  PATH			The base directory we are importing from
	 */
	function import_contacts($db,$table_prefix,$old_base_dir)
	{
		require_code('catalogues2');
		require_code('catalogues');

		// Add contacts catalogue if it doesn't already exist
		$test=$GLOBALS['SITE_DB']->query_value_null_ok('catalogues','c_name',array('c_name'=>'contacts'));
		if (is_null($test))
		{
			actual_add_catalogue('contacts',lang_code_to_default_content('CONTACTS',false,2),insert_lang('',2),0,0,'',30);
			$fields=array(
				array('CONTACT_FIRST_NAME','','short_text',0,1),
				array('CONTACT_LAST_NAME','','short_text',1,1),
				array('EMAIL_ADDRESS','','short_text',0,1),
				array('CONTACT_COMPANY','','short_text',0,1),
				array('CONTACT_HOMEADDRESS','','short_text',0,1),
				array('CONTACT_CITY','','short_text',0,1),
				array('CONTACT_HOMEPHONE','','short_text',0,1),
				array('CONTACT_WORKPHONE','','short_text',0,1),
				array('CONTACT_HOMEPAGE','','short_text',0,1),
				array('CONTACT_IM','','short_text',0,1),
				array('CONTACT_EVENTS','','long_text',0,1),
				array('CONTACT_NOTES','','long_text',0,1)
			);
			foreach ($fields as $i=>$field)
				actual_add_catalogue_field('contacts',lang_code_to_default_content($field[0],false,3),insert_lang('',2),$field[2],$i,$field[3],1,1,'',$field[4]);
		}
		$id=actual_add_catalogue_category('contacts','ex-phpNuke','','',NULL,'');

		$fields=collapse_1d_complexity('id',$GLOBALS['SITE_DB']->query_select('catalogue_fields',array('id'),array('c_name'=>'contacts')));
		$contacts=$db->query('SELECT * FROM '.$table_prefix.'contactbook');
		foreach ($contacts as $row)
		{
			$map=array($fields[0]=>$row['firstname'],$fields[1]=>$row['lastname'],$fields[2]=>$row['email'],$fields[3]=>$row['company'],$fields[4]=>$row['homeaddress'],$fields[5]=>$row['city'],$fields[6]=>$row['homephone'],$fields[7]=>$row['workphone'],$fields[8]=>$row['homepage'],$fields[9]=>$row['IM'],$fields[10]=>$row['events'],$fields[11]=>$row['notes']);
			actual_add_catalogue_entry($id,1,'',0,0,0,$map);
		}
	}

}


