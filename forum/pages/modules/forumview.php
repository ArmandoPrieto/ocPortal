<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2011

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		ocf_forum
 */

/**
 * Module page class.
 */
class Module_forumview
{

	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['author']='Chris Graham';
		$info['organisation']='ocProducts';
		$info['hacked_by']=NULL;
		$info['hack_version']=NULL;
		$info['version']=2;
		$info['locked']=false;
		return $info;
	}
	
	/**
	 * Standard modular entry-point finder function.
	 *
	 * @return ?array	A map of entry points (type-code=>language-code) (NULL: disabled).
	 */
	function get_entry_points()
	{
		return array('pt'=>'PERSONAL_TOPICS','!'=>'ROOT_FORUM');
	}

	/**
	 * Standard modular page-link finder function (does not return the main entry-points that are not inside the tree).
	 *
	 * @param  ?integer  The number of tree levels to computer (NULL: no limit)
	 * @param  boolean	Whether to not return stuff that does not support permissions (unless it is underneath something that does).
	 * @param  ?string	Position to start at in the tree. Does not need to be respected. (NULL: from root)
	 * @param  boolean	Whether to avoid returning categories.
	 * @return ?array 	A tuple: 1) full tree structure [made up of (pagelink, permission-module, permissions-id, title, children, ?entry point for the children, ?children permission module, ?whether there are children) OR a list of maps from a get_* function] 2) permissions-page 3) optional base entry-point for the tree 4) optional permission-module 5) optional permissions-id (NULL: disabled).
	 */
	function get_page_links($max_depth=NULL,$require_permission_support=false,$start_at=NULL,$dont_care_about_categories=false)
	{
		unset($require_permission_support);

		$permission_page='topics';

		require_code('ocf_forums');
		require_code('ocf_forums2');
		$forum_id=NULL;
		if (!is_null($start_at))
		{
			$matches=array();
			if (preg_match('#[^:]*:forumview:type=misc:id=(.*)#',$start_at,$matches)!=0) $forum_id=intval($matches[1]);
		}

		$adjusted_max_depth=is_null($max_depth)?NULL:(is_null($forum_id)?($max_depth):$max_depth);
		if (get_forum_type()=='ocf')
		{
			$structure=$dont_care_about_categories?array():ocf_get_forum_tree_secure(NULL,$forum_id,false,NULL,'',NULL,NULL,false,$adjusted_max_depth,true);
		} else
		{
			$structure=array();
		}
		return array($structure,$permission_page,'_SELF:_SELF:type=misc:id=!','forums');
	}

	/**
	 * Standard modular new-style deep page-link finder function (does not return the main entry-points).
	 *
	 * @param  string  	Callback function to send discovered page-links to.
	 * @param  MEMBER		The member we are finding stuff for (we only find what the member can view).
	 * @param  integer	Code for how deep we are tunnelling down, in terms of whether we are getting entries as well as categories.
	 * @param  string		Stub used to create page-links. This is passed in because we don't want to assume a zone or page name within this function.
	 * @param  ?string	Where we're looking under (NULL: root of tree). We typically will NOT show a root node as there's often already an entry-point representing it.
	 * @param  integer	Our recursion depth (used to calculate importance of page-link, used for instance by Google sitemap). Deeper is typically less important.
	 * @param  ?array		Non-standard for API [extra parameter tacked on] (NULL: yet unknown). Contents of database table for performance.
	 * @param  ?array		Non-standard for API [extra parameter tacked on] (NULL: yet unknown). Contents of database table for performance.
	 */
	function get_sitemap_pagelinks($callback,$member_id,$depth,$pagelink_stub,$parent_pagelink=NULL,$recurse_level=0,$category_data=NULL,$entry_data=NULL)
	{
		// This is where we start
		if (is_null($parent_pagelink))
		{
			$parent_pagelink=$pagelink_stub.':misc'; // This is the entry-point we're under
			$parent_attributes=array('id'=>strval(db_get_first_id()));
		} else
		{
			list(,$parent_attributes,)=page_link_decode($parent_pagelink);
		}

		// We read in all data for efficiency
		if (is_null($category_data))
		{
			$category_data=$GLOBALS['FORUM_DB']->query_select('f_forums',array('id','f_name AS title','f_parent_forum AS parent_id','f_cache_last_time AS edit_date'),NULL,'',300);
			if (count($category_data)==300) // Ah, we need to limit things then
			{
				$category_data=$GLOBALS['FORUM_DB']->query_select('f_forums',array('id','f_name AS title','f_parent_forum AS parent_id','f_cache_last_time AS edit_date'),array('f_cache_num_posts'),'',300);
			}
		}

		// Subcategories
		foreach ($category_data as $row)
		{
			if ((!is_null($row['parent_id'])) && (strval($row['parent_id'])==$parent_attributes['id']))
			{
				$pagelink=$pagelink_stub.'id='.strval($row['id']);
				if (__CLASS__!='')
				{
					$this->get_sitemap_pagelinks($callback,$member_id,$depth,$pagelink_stub,$pagelink,$recurse_level+1,$category_data,$entry_data); // Recurse
				} else
				{
					call_user_func_array(__FUNCTION__,array($callback,$member_id,$depth,$pagelink_stub,$pagelink,$recurse_level+1,$category_data,$entry_data)); // Recurse
				}
				if (has_category_access($member_id,'forums',strval($row['id'])))
				{
					call_user_func_array($callback,array($pagelink,$parent_pagelink,NULL,$row['edit_date'],max(0.7-$recurse_level*0.1,0.3),$row['title'])); // Callback
				} else // Not accessible: we need to copy the node through, but we will flag it 'Unknown' and say it's not accessible.
				{
					call_user_func_array($callback,array($pagelink,$parent_pagelink,NULL,$row['edit_date'],max(0.7-$recurse_level*0.1,0.3),do_lang('UNKNOWN'),false)); // Callback
				}
			}
		}

		// Entries
		if (($depth>=DEPTH__ENTRIES) && (has_category_access($member_id,'forums',$parent_attributes['id'])))
		{
			$start=0;
			do
			{
				$entry_data=$GLOBALS['FORUM_DB']->query_select('f_topics',array('id','t_cache_first_title AS title','t_forum_id AS category_id','t_cache_first_time AS add_date','t_cache_last_time AS edit_date'),array('t_forum_id'=>intval($parent_attributes['id'])),'',500,$start);

				foreach ($entry_data as $row)
				{
					$pagelink='forum:topicview:misc:'.strval($row['id']);
					call_user_func_array($callback,array($pagelink,$parent_pagelink,$row['add_date'],$row['edit_date'],0.2,$row['title'])); // Callback
				}

				$start+=500;
			}
			while (array_key_exists(0,$entry_data));
		}
	}

	/**
	 * Convert a page link to a category ID and category permission module type.
	 *
	 * @param  string	The page link
	 * @return array	The pair
	 */
	function extract_page_link_permissions($page_link)
	{
		$matches=array();
		preg_match('#^([^:]*):([^:]*):type=misc:id=(.*)$#',$page_link,$matches);
		return array($matches[3],'forums');
	}

	/**
	 * Standard modular uninstall function.
	 */
	function uninstall()
	{
		delete_menu_item_simple('_SEARCH:forumview:type=misc');
		delete_menu_item_simple('_SEARCH:forumview:type=pt:id={$USER_OVERIDE}');
		delete_menu_item_simple('_SEARCH:forumview:type=pt');
		delete_menu_item_simple('_SEARCH:vforums:type=misc');
		delete_menu_item_simple('_SEARCH:vforums:type=unread');
	}

	/**
	 * Standard modular install function.
	 *
	 * @param  ?integer	What version we're upgrading from (NULL: new install)
	 * @param  ?integer	What hack version we're upgrading from (NULL: new-install/not-upgrading-from-a-hacked-version)
	 */
	function install($upgrade_from=NULL,$upgrade_from_hack=NULL)
	{
		require_lang('ocf');
		add_menu_item_simple('member_features',NULL,'ROOT_FORUM','_SEARCH:forumview:type=misc');
		add_menu_item_simple('pc_features',NULL,'PERSONAL_TOPICS','_SEARCH:forumview:type=pt:id={$USER_OVERIDE}',0,0,true,do_lang('ZONE_BETWEEN'));
		add_menu_item_simple('forum_features',NULL,'ROOT_FORUM','_SEARCH:forumview:type=misc');
		add_menu_item_simple('forum_features',NULL,'PERSONAL_TOPICS','_SEARCH:forumview:type=pt');
		add_menu_item_simple('forum_features',NULL,'POSTS_SINCE_LAST_VISIT','_SEARCH:vforums:type=misc');
		add_menu_item_simple('forum_features',NULL,'TOPICS_UNREAD','_SEARCH:vforums:type=unread');
		add_menu_item_simple('forum_features',NULL,'RECENTLY_READ','_SEARCH:vforums:type=recently_read');
	}

	/**
	 * Standard modular run function.
	 *
	 * @return tempcode	The result of execution.
	 */
	function run()
	{
		if (get_forum_type()!='ocf') warn_exit(do_lang_tempcode('NO_OCF')); else ocf_require_all_forum_stuff();
		require_code('ocf_forumview');
		require_css('ocf');

		$id=NULL;
		$type=get_param('type','misc');
	
		$max=get_param_integer('max',intval(get_option('forum_topics_per_page')));

		if ($type=='pt')
		{
			if (is_guest()) access_denied('NOT_AS_GUEST');

			$start=get_param_integer('start',get_param_integer('kfs',0));

			$of_member_id=get_param_integer('id',get_member());
			require_code('ocf_forumview_pt');
			$details=ocf_get_personal_topics($start,$max,$of_member_id);
			$root_forum_name=$GLOBALS['FORUM_DB']->query_value('f_forums','f_name',array('id'=>get_param_integer('keep_forum_root',db_get_first_id())));
			$tree=hyperlink(build_url(array('page'=>'_SELF','id'=>get_param_integer('keep_forum_root',NULL)),'_SELF'),escape_html($root_forum_name),false,false,do_lang_tempcode('GO_BACKWARDS_TO',$root_forum_name),NULL,NULL,'up');
			$tree->attach(' &gt; ');
			$pt_username=$GLOBALS['FORUM_DRIVER']->get_username($of_member_id);
			if (is_null($pt_username)) $pt_username=do_lang('UNKNOWN');
			$tree->attach(do_lang_tempcode('PERSONAL_TOPICS_OF',escape_html($pt_username)));
			$details['name']=do_lang_tempcode('PERSONAL_TOPICS_OF',escape_html($pt_username));
		} else
		{
			$id=get_param_integer('id',db_get_first_id());
			$GLOBALS['FEED_URL']=find_script('backend').'?mode=ocf_forumview&filter='.strval($id);
			$start=get_param_integer('start',get_param_integer('kfs'.strval($id),0));
			$details=ocf_get_forum_view($start,$max,$id);
			$tree=ocf_forum_breadcrumbs($id,$details['name'],$details['parent_forum']);

			if ((array_key_exists('question',$details)) && (is_null(get_bot_type())))
			{
				// Was there a question answering attempt?
				$answer=post_param('answer','-1#');
				if ($answer!='-1#')
				{
					if (strtolower(trim($answer))==strtolower(trim($details['answer']))) // They got it right
					{
						if (!is_guest())
						{
							$GLOBALS['FORUM_DB']->query_insert('f_forum_intro_member',array('i_forum_id'=>$id,'i_member_id'=>get_member()));
						} else
						{
							$GLOBALS['FORUM_DB']->query_insert('f_forum_intro_ip',array('i_forum_id'=>$id,'i_ip'=>get_ip_address(3)));
						}
					} else // They got it wrong
					{
						$url=get_self_url();
						$title=get_page_title('INTRO_QUESTION');
						return redirect_screen($title,$url,do_lang_tempcode('INTRO_ANSWER_INCORRECT'),false,'warn');
					}
				} else
				{ // Ask the question
					$title=get_page_title(($details['answer']=='')?'INTRO_NOTICE':'INTRO_QUESTION');
					$url=get_self_url();
					return do_template('OCF_FORUM_INTRO_QUESTION_SCREEN',array('ANSWER'=>$details['answer'],'TITLE'=>$title,'URL'=>$url,'QUESTION'=>$details['question']));
				}
			}
		}

		if ($type=='pt') $forum_name=do_lang('PERSONAL_TOPICS');
		else $forum_name=$details['name'];
	
		$may_mass_moderate=(array_key_exists('may_move_topics',$details)) || (array_key_exists('may_delete_topics',$details));
	
		global $SEO_TITLE;
		$SEO_TITLE=$forum_name;

		// Find categories
		$categories=new ocp_tempcode();
		if ($type!='pt')
		{
			foreach ($details['categories'] as $best=>$category)
			{
				if (array_key_exists('subforums',$category)) // We only show if there is something in it
				{
					// Subforums
					$forums=new ocp_tempcode();
					foreach ($category['subforums'] as $subforum)
					{
						if ((array_key_exists('last_topic_id',$subforum)) && (!is_null($subforum['last_topic_id'])))
						{
							if (!is_null($subforum['last_member_id']))
							{
								if (!is_guest($subforum['last_member_id']))
								{
									//$colour=get_group_colour(ocf_get_member_primary_group($subforum['last_member_id']));
									$poster=do_template('OCF_USER_MEMBER',array(
										'_GUID'=>'39r932rwefldjfldjlf',
										/*'COLOUR'=>$colour,*/
										'USERNAME'=>$subforum['last_username'],
										'PROFILE_URL'=>$GLOBALS['FORUM_DRIVER']->member_profile_link($subforum['last_member_id'],false,true)
									));
								} else $poster=protect_from_escaping(escape_html($subforum['last_username']));
							} else
							{
								$poster=do_lang_tempcode('NA_EM');
							}

							$topic_url=build_url(array('page'=>'topicview','id'=>$subforum['last_topic_id'],'type'=>'first_unread'),get_module_zone('topicview'));
							$topic_url->attach('#first_unread');

							$latest=do_template('OCF_FORUM_LATEST',array(
								'_GUID'=>'dlfsdfkoewfdlfsldfk',
								'DATE'=>is_null($subforum['last_time'])?do_lang_tempcode('NA_EM'):protect_from_escaping(escape_html(get_timezoned_date($subforum['last_time']))),
								'DATE_RAW'=>is_null($subforum['last_time'])?'':strval($subforum['last_time']),
								'TOPIC_URL'=>$topic_url,
								'TOPIC_TITLE'=>($subforum['last_title']=='')?do_lang_tempcode('NA'):$subforum['last_title'],
								'POSTER'=>$poster,
								'MEMBER_ID'=>strval($subforum['last_member_id']),
								'ID'=>strval($subforum['last_topic_id'])
							));
						}
						elseif (array_key_exists('protected_last_post',$subforum))
						{
							$latest=do_lang_tempcode('PROTECTED_LAST_POST');
						}
						else $latest=do_lang_tempcode('NO_POSTS_YET');
	
						// Work out where the subforum URL is
						if (($subforum['redirection']!='') && (!is_numeric($subforum['redirection'])))
						{
							$subforum_url=$subforum['redirection'];
	
							$subforum_num_posts=do_lang_tempcode('NA_EM');
							$subforum_num_topics=do_lang_tempcode('NA_EM');
							$latest=do_lang_tempcode('NA_EM');
							$subforum['has_new']=false;
							$subforums=new ocp_tempcode();
							$new_post_or_not='redirect';
						}
						else
						{
							if ($subforum['redirection']!='')
							{
								$subforum_url=build_url(array('page'=>'_SELF','id'=>$subforum['redirection']),'_SELF');
								$new_post_or_not=$subforum['has_new']?'new_posts_redirect':'no_new_posts_redirect';
							} else
							{
								$subforum_url=build_url(array('page'=>'_SELF','id'=>$subforum['id']),'_SELF');
								$new_post_or_not=$subforum['has_new']?'new_posts':'no_new_posts';
							}
	
							$subforum_num_posts=protect_from_escaping(escape_html(integer_format($subforum['num_posts'])));
							$subforum_num_topics=protect_from_escaping(escape_html(integer_format($subforum['num_topics'])));
	
							// Subsubforums
							$subforums=new ocp_tempcode();
							ksort($subforum['children']);
							foreach ($subforum['children'] as $child)
							{
								// Work out where the subsubforum url is
								if (is_numeric($child['redirection']))
								{
									$link=hyperlink(build_url(array('page'=>'_SELF','id'=>$child['redirection']),'_SELF'),$child['name'],false,true);
								}
								elseif ($child['redirection']!='')
								{
									$link=hyperlink($child['redirection'],$child['name'],false,true);
								} else
								{
									$link=hyperlink(build_url(array('page'=>'_SELF','id'=>$child['id']),'_SELF'),$child['name'],false,true);
								}
								if (!$subforums->is_empty()) $subforums->attach(do_lang_tempcode('LIST_SEP'));
								$subforums->attach($link);
							}
						}

						$edit_url=has_actual_page_access(get_member(),'admin_ocf_forums')?build_url(array('page'=>'admin_ocf_forums','type'=>'_ed','id'=>$subforum['id']),'adminzone'):new ocp_tempcode();

						$forum_rules_url='';
						$intro_question_url='';
						if (!$subforum['intro_question']->is_empty())
						{
							if ($subforum['intro_answer']=='')
							{
								$keep=keep_symbol(array());
								$intro_rules_url=find_script('rules').'?id='.rawurlencode(strval($subforum['id'])).$keep;
							} else
							{
								$keep=keep_symbol(array());
								$intro_question_url=find_script('rules').'?id='.rawurlencode(strval($subforum['id'])).$keep;
							}
						}

						$forums->attach(do_template('OCF_FORUM_IN_CATEGORY',array(
							'_GUID'=>'slkfjof9jlsdjcsd',
							'ID'=>strval($subforum['id']),
							'NEW_POST_OR_NOT'=>$new_post_or_not,
							'LANG_NEW_POST_OR_NOT'=>do_lang('POST_INDICATOR_'.$new_post_or_not),
							'FORUM_NAME'=>$subforum['name'],
							'FORUM_URL'=>$subforum_url,
							'DESCRIPTION'=>$subforum['description'],
							'NUM_POSTS'=>$subforum_num_posts,
							'NUM_TOPICS'=>$subforum_num_topics,
							'LATEST'=>$latest,
							'SUBFORUMS'=>$subforums,
							'EDIT_URL'=>$edit_url,
							'FORUM_RULES_URL'=>$forum_rules_url,
							'INTRO_QUESTION_URL'=>$intro_question_url
						)));
					}

					// Category itself
					if ((!array_key_exists('expanded_by_default',$category)) || ($category['expanded_by_default']==1))
					{
						$display='table';
						$expand_type='contract';
					} else
					{
						$display='none';
						$expand_type='expand';
					}
					$category_description=$category['description'];
					$categories->attach(do_template('OCF_FORUM_CATEGORY',array('_GUID'=>'fc9bae42c680ea0162287e2ed3917bbe','CATEGORY_ID'=>strval($best),'EXPAND_TYPE'=>$expand_type,'DISPLAY'=>$display,'CATEGORY_TITLE'=>$category['title'],'CATEGORY_DESCRIPTION'=>$category_description,'FORUMS'=>$forums)));
				}
			}
		}

		// Buttons
		$button_array=array();
		if (array_key_exists('may_track_forum',$details))
		{
			$track_forum_url=build_url(array('page'=>'topics','type'=>'track_forum','id'=>$id),get_module_zone('topics'));
			$button_array[]=array('immediate'=>true,'rel'=>'track','title'=>do_lang_tempcode('TRACK_FORUM'),'url'=>$track_forum_url,'img'=>'track_forum');
		}
		elseif (array_key_exists('may_untrack_forum',$details))
		{
			$untrack_forum_url=build_url(array('page'=>'topics','type'=>'untrack_forum','id'=>$id),get_module_zone('topics'));
			$button_array[]=array('immediate'=>true,'rel'=>'untrack','title'=>do_lang_tempcode('UNTRACK_FORUM'),'url'=>$untrack_forum_url,'img'=>'untrack_forum');
		}
		$read_url=build_url(array('page'=>'topics','type'=>'mark_read','id'=>$id),get_module_zone('topics'));
		$button_array[]=array('immediate'=>true,'title'=>do_lang_tempcode('MARK_READ'),'url'=>$read_url,'img'=>'mark_read');
		if ($type!='pt')
		{
			if (addon_installed('search'))
			{
				$search_url=build_url(array('page'=>'search','type'=>'misc','id'=>'ocf_posts','search_under'=>$id),get_module_zone('search'));
				$button_array[]=array('immediate'=>false,'rel'=>'search','title'=>do_lang_tempcode('SEARCH'),'url'=>$search_url,'img'=>'search');
			}
			$new_topic_url=build_url(array('page'=>'topics','type'=>'new_topic','id'=>$id),get_module_zone('topics'));
		} else
		{
			if (addon_installed('search'))
			{
				$search_url=build_url(array('page'=>'search','type'=>'misc','id'=>'ocf_own_pt'),get_module_zone('search'));
				$button_array[]=array('immediate'=>false,'rel'=>'search','title'=>do_lang_tempcode('SEARCH'),'url'=>$search_url,'img'=>'search');
			}
			$new_topic_url=build_url(array('page'=>'topics','type'=>'new_pt','id'=>get_member()),get_module_zone('topics'));
		}
		if (array_key_exists('may_post_topic',$details))
		{
			$button_array[]=array('immediate'=>false,'rel'=>'add','title'=>do_lang_tempcode('ADD_TOPIC'),'url'=>$new_topic_url,'img'=>'new_topic');
		}
		$buttons=ocf_screen_button_wrap($button_array);

		// Find topics
		$topics=new ocp_tempcode();
		$pinned=false;
		foreach ($details['topics'] as $topic)
		{
			if (($pinned) && (!in_array('pinned',$topic['modifiers'])))
			{
				$topics->attach(do_template('OCF_PINNED_DIVIDER'));
			}
			$pinned=in_array('pinned',$topic['modifiers']);
			$topics->attach(ocf_render_topic($topic,/*$may_mass_moderate*/true,$type=='pt',NULL));
		}

		$starter_title=($type=='pt')?do_lang_tempcode('WITH_TITLING'):new ocp_tempcode();

		$action_url=build_url(array('page'=>'topics'),get_module_zone('topics'),NULL,false,true);
		if (!$topics->is_empty())
		{
			$moderator_actions='';
			if (($type=='pt') && ($of_member_id==get_member()))
			{
				$moderator_actions.='<option value="categorise_pts">'.do_lang('CATEGORISE_PTS').'</option>';
			}
			$moderator_actions.='<option value="mark_topics_read">'.do_lang('MARK_READ').'</option>';
			$moderator_actions.='<option value="mark_topics_unread">'.do_lang('MARK_UNREAD').'</option>';

			// Mass moderation
			if ($may_mass_moderate)
			{
				$moderator_actions.='<option value="move_topics">'.do_lang('MOVE_TOPICS').'</option>';
				if (has_specific_permission(get_member(),'delete_midrange_content','topics',array('forums',$id)))
				{
					$moderator_actions.='<option value="delete_topics">'.do_lang('DELETE_TOPICS').'</option>';
				}
				$moderator_actions.='<option value="pin_topics">'.do_lang('PIN_TOPIC').'</option>';
				$moderator_actions.='<option value="unpin_topics">'.do_lang('UNPIN_TOPIC').'</option>';
				$moderator_actions.='<option value="sink_topics">'.do_lang('SINK_TOPIC').'</option>';
				$moderator_actions.='<option value="unsink_topics">'.do_lang('UNSINK_TOPIC').'</option>';
				$moderator_actions.='<option value="cascade_topics">'.do_lang('CASCADE_TOPIC').'</option>';
				$moderator_actions.='<option value="uncascade_topics">'.do_lang('UNCASCADE_TOPIC').'</option>';
				$moderator_actions.='<option value="open_topics">'.do_lang('OPEN_TOPIC').'</option>';
				$moderator_actions.='<option value="close_topics">'.do_lang('CLOSE_TOPIC').'</option>';
				if (!is_null($id))
				{
					$multi_moderations=ocf_list_multi_moderations($id);
					if (count($multi_moderations)!=0)
					{
						$moderator_actions.='<optgroup label="'.do_lang('MULTI_MODERATIONS').'">';
						foreach ($multi_moderations as $mm_id=>$mm_name)
							$moderator_actions.='<option value="mm_'.strval($mm_id).'">'.$mm_name.'</option>';
						$moderator_actions.='</optgroup>';
					}
				}
			}

			if ($GLOBALS['XSS_DETECT']) ocp_mark_as_escaped($moderator_actions);

			require_code('templates_results_browser');
			$results_browser=results_browser(do_lang_tempcode('FORUM_TOPICS'),($type=='pt')?$of_member_id:$id,$start,'start',$max,'max',$details['max_rows'],NULL,$type,true);

			$order=array_key_exists('order',$details)?$details['order']:'last_post';
			$topic_wrapper=do_template('OCF_FORUM_TOPIC_WRAPPER',array('_GUID'=>'e452b81001e5c6b7adb4d82e627bf983','MAX'=>strval($max),'ORDER'=>$order,'MAY_CHANGE_MAX'=>array_key_exists('may_change_max',$details),'ACTION_URL'=>$action_url,'BUTTONS'=>$buttons,'STARTER_TITLE'=>$starter_title,'TREE'=>$tree,'RESULTS_BROWSER'=>$results_browser,'MODERATOR_ACTIONS'=>$moderator_actions,'TOPICS'=>$topics,'FORUM_NAME'=>$forum_name));
		}
		else $topic_wrapper=new ocp_tempcode();

		// Filters
		$filters=new ocp_tempcode();
		if ($type=='pt')
		{
			$filter_cats=ocf_get_filter_cats();

			foreach ($filter_cats as $filter_cat)
			{
				$text_filter_cat=$filter_cat;
				if ($filter_cat=='')
				{
					$filters=do_lang_tempcode('NONE_EM');
				} else
				{
					if (!$filters->is_empty()) $filters->attach(do_lang_tempcode('LIST_SEP'));
					if ($filter_cat!=get_param('category',''))
					{
						$filtered_url=build_url(array('page'=>'_SELF','category'=>$filter_cat),'_SELF',NULL,true);
						$filters->attach(hyperlink($filtered_url,$text_filter_cat,false,true));
					} else $filters->attach(escape_html($text_filter_cat));
				}
			}
		}

		breadcrumb_add_segment($tree);

		$map=array('_GUID'=>'1c14afd9265b1bf69375169dd6faf83c','STARTER_TITLE'=>$starter_title,'ID'=>is_null($id)?'':strval($id),'DESCRIPTION'=>array_key_exists('description',$details)?$details['description']:'','FILTERS'=>$filters,'BUTTONS'=>$buttons,'TOPIC_WRAPPER'=>$topic_wrapper,'TREE'=>$tree,'CATEGORIES'=>$categories);
		$content=do_template('OCF_FORUM',$map);

		if (addon_installed('awards'))
		{
			require_code('awards');
			$awards=is_null($id)?array():find_awards_for('forum',strval($id));
		} else $awards=array();

		$title=get_page_title(do_lang_tempcode('NAMED_FORUM',escape_html($details['name'])),false,NULL,NULL,$awards);

		$ret=ocf_wrapper($title,$content,true,true,$id);

		return $ret;
	}

}


