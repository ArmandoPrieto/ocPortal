<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2011

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		core_ocf
 */

/**
 * Module page class.
 */
class Module_delete
{
	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['author']='Chris Graham';
		$info['organisation']='ocProducts';
		$info['hacked_by']=NULL;
		$info['hack_version']=NULL;
		$info['version']=2;
		$info['locked']=false;
		return $info;
	}

	/**
	 * Standard modular entry-point finder function.
	 *
	 * @return ?array	A map of entry points (type-code=>language-code) (NULL: disabled).
	 */
	function get_entry_points()
	{
		return array('misc'=>'DELETE_MEMBER');
	}

	/**
	 * Standard modular run function.
	 *
	 * @return tempcode	The result of execution.
	 */
	function run()
	{
		if (get_forum_type()!='ocf') warn_exit(do_lang_tempcode('NO_OCF')); else ocf_require_all_forum_stuff();
		require_code('ocf_members_action');
		require_code('ocf_members_action2');
		require_css('ocf');

		$member_id=get_param_integer('id',get_member());
		enforce_personal_access($member_id,'delete_account');

		$type=get_param('type','misc');

		if ($type == 'misc')
			return $this->gui();
		if ($type == 'actual')
			return $this->actual();

		return new ocp_tempcode();
	}

	/**
	 * The UI for deleting a member.
	 *
	 * @return tempcode	The UI.
	 */
	function gui()
	{
		$member_id=get_param_integer('id',get_member());
		$username=$GLOBALS['FORUM_DRIVER']->get_username($member_id);
		if (is_null($username))
			warn_exit(do_lang_tempcode('USER_NO_EXIST'));
		$title=get_page_title('DELETE_MEMBER');

		$preview=do_lang_tempcode('_DELETE_MEMBER' . (($member_id == get_member()) ? '_SUICIDAL' : ''),$username);

		$url=build_url(array('page'=>'_SELF','type'=>'actual'),'_SELF');

		$hidden=form_input_hidden('id',strval($member_id));
		
		return do_template('CONFIRM_SCREEN',array('_GUID'=>'37653ef38707eff83bec2367a604c1fb','TITLE'=>$title,'PREVIEW'=>$preview,'URL'=>$url,'FIELDS'=>'','HIDDEN'=>$hidden));
	}

	/**
	 * The actualiser for deleting a member.
	 *
	 * @return tempcode	The UI.
	 */
	function actual()
	{
		$member_id=post_param_integer('id');
		$username=$GLOBALS['FORUM_DRIVER']->get_username($member_id);
		if (is_null($username))
			warn_exit(do_lang_tempcode('USER_NO_EXIST'));
		$title=get_page_title('DELETE_MEMBER');

		if (is_guest($member_id))
			warn_exit(do_lang_tempcode('INTERNAL_ERROR'));

		ocf_delete_member($member_id);

		if ($member_id == get_member())
		{
			$url=build_url(array('page'=>'login','type'=>'logout'),get_module_zone('login'));
			return redirect_screen($title,$url,do_lang_tempcode('SUCCESS'));
		}
		$url=build_url(array('page'=>'members','type'=>'misc'),get_module_zone('members'));
		return redirect_screen($title,$url,do_lang_tempcode('SUCCESS'));
	}

}

