<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2011

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		ocf_cpfs
 */

/**
 * Module page class.
 */
class Module_privacy
{

	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['author']='Kamen';
		$info['organisation']='ocProducts';
		$info['hacked_by']=NULL;
		$info['hack_version']=NULL;
		$info['version']=1;
		$info['locked']=false;
		return $info;
	}
	
	/**
	 * Standard modular uninstall function.
	 */
	function uninstall()
	{
		delete_menu_item_simple('personalzone:privacy:type=misc:id={$USER_OVERIDE}');
	}

	/**
	 * Standard modular install function.
	 *
	 * @param  ?integer	What version we're upgrading from (NULL: new install)
	 * @param  ?integer	What hack version we're upgrading from (NULL: new-install/not-upgrading-from-a-hacked-version)
	 */
	function install($upgrade_from=NULL,$upgrade_from_hack=NULL)
	{
		add_menu_item_simple('pc_edit',NULL,'PRIVACY','personalzone:privacy:type=misc:id={$USER_OVERIDE}');
	}
	
	/**
	 * Standard modular entry-point finder function.
	 *
	 * @return ?array	A map of entry points (type-code=>language-code) (NULL: disabled).
	 */
	function get_entry_points()
	{
		return is_guest()?array():array('misc'=>'EDIT_CPF');
	}
	
	/**
	 * Standard modular run function.
	 *
	 * @return tempcode	The result of execution.
	 */
	function run()
	{
		if (get_forum_type()!='ocf') warn_exit(do_lang_tempcode('NO_OCF')); else ocf_require_all_forum_stuff();
	
		require_lang('ocf_privacy');

		$member_id=get_param_integer('id',get_member());
		enforce_personal_access($member_id,NULL,'member_maintenance');

		if ($GLOBALS['FORUM_DRIVER']->get_member_row_field($member_id,'m_password_compat_scheme')=='remote')
		{
			warn_exit(do_lang_tempcode('DISALLOWED_REMOTE_MEMBER_ACTION'));
		}

		$type=get_param('type','misc');
		if ($type=='misc') return $this->gui();
		if ($type=='actual') return $this->actual();
	
		return new ocp_tempcode();
	}
	
	/**
	 * The UI for editing a members CPF permissions edit.
	 *
	 * @return tempcode	The UI.
	 */
	function gui()
	{
		$title=get_page_title('EDIT_CPF');

		$member_id=get_param_integer('id',get_member());
	
		$member_cpfs=ocf_get_custom_fields_member($member_id);

		require_javascript('javascript_multi');

		// UI fields
		$fields=new ocp_tempcode();
		require_code('form_templates');
		require_code('themes2');

		$tmp_groups=$GLOBALS['OCF_DRIVER']->get_usergroup_list(true);

		$cpf_ids=array();
		foreach ($member_cpfs as $cpf_id => $cpf)
		{
			if ((preg_replace('#^((\s)|(<br\s*/?'.'>)|(&nbsp;))*#','',$cpf) === '') && (count($member_cpfs)>15)) continue;
			
			$cpf_ids[]=$cpf_id; //id of the CPF

			$cpf_data=$GLOBALS['FORUM_DB']->query_select('f_custom_fields',array('*'),array('id'=>$cpf_id));
			if ($cpf_data[0]['cf_public_view']==0) continue;

			$cpf_permissions=$GLOBALS['FORUM_DB']->query_select('f_member_cpf_perms',array('*'),array('member_id'=>$member_id,'field_id'=>$cpf_id));


			if (!array_key_exists(0,$cpf_permissions))
			{
				$view_by_guests=true;

				$view_by_members=true;

				$view_by_friends=true;

				$view_by_groups=array();
				foreach ($tmp_groups as $gr_key => $group)
				{
					$view_by_groups[]=$gr_key;
				}
			} else
			{
				$view_by_guests=($cpf_permissions[0]['guest_view']==1);

				$view_by_members=($cpf_permissions[0]['member_view']==1);

				$view_by_friends=($cpf_permissions[0]['friend_view']==1);

				$view_by_groups=(strlen($cpf_permissions[0]['group_view'])>0)?explode(',',$cpf_permissions[0]['group_view']):array();
			}

			//CPF name
			$cpf_title=get_translated_text($cpf_data[0]['cf_name']);
			if (substr($cpf_title,0,4)=='ocp_')
			{
				$_cpf_title=do_lang('SPECIAL_CPF__'.$cpf_title,NULL,NULL,NULL,NULL,false);
				if (!is_null($_cpf_title)) $cpf_title=$_cpf_title;
			}

			$fields->attach(do_template('FORM_SCREEN_FIELD_SPACER',array('TITLE'=>$cpf_title)));

			$fields->attach(form_input_tick(do_lang_tempcode('GUESTS'),do_lang_tempcode('DESCRIPTION_VISIBLE_TO_GUESTS'),'guests_'.strval($cpf_id),$view_by_guests));

			$fields->attach(form_input_tick(do_lang_tempcode('MEMBERS'),do_lang_tempcode('DESCRIPTION_VISIBLE_TO_MEMBERS'),'members_'.strval($cpf_id),$view_by_members));

			$fields->attach(form_input_tick(do_lang_tempcode('FRIENDS'),do_lang_tempcode('DESCRIPTION_VISIBLE_TO_FRIENDS'),'friends_'.strval($cpf_id),$view_by_friends));

			$groups=new ocp_tempcode();
			foreach ($tmp_groups as $gr_key=>$group)
			{
				if ($group==get_option('probation_usergroup')) continue;

				$current_group_view=(in_array($gr_key,$view_by_groups));
				$groups->attach(form_input_list_entry(strval($gr_key),$current_group_view,$group,false,false));
			}

			$fields->attach(form_input_multi_list(do_lang_tempcode('GROUPS'),do_lang_tempcode('DESCRIPTION_VISIBLE_TO_GROUPS'),'groups_'.strval($cpf_id),$groups));
		}
		
		$cpfs_hidden=form_input_hidden('cpf_fields',implode(',', $cpf_ids));

		$post_url=build_url(array('page'=>'_SELF','type'=>'actual','id'=>$member_id,'uploading'=>1),'_SELF');

		$submit_name=do_lang_tempcode('SAVE');

		return do_template('OCF_CPF_PERMISSIONS_SCREEN',array('_GUID'=>'dbdac6ca3bc752b54d2a24a4c6e69c7c','TITLE'=>$title,'FIELDS'=>$fields,'SUBMIT_NAME'=>$submit_name,'URL'=>$post_url,'HIDDEN_FIELDS'=>$cpfs_hidden));
	}

	/**
	 * The actualiser for editing a members CPF permissions edit.
	 *
	 * @return tempcode	The UI.
	 */
	function actual()
	{
		$title=get_page_title('EDIT_CPF');
	
		$member_id=get_param_integer('id',get_member());

		$_cpf_fields=post_param('cpf_fields');
		$cpf_fields=explode(',', $_cpf_fields);

		foreach ($cpf_fields as $_field_id)
		{
			$field_id=intval($_field_id);
			
			$_guests_view=post_param('guests_'.strval($field_id),NULL);
			$_members_view=post_param('members_'.strval($field_id),NULL);
			$_friends_view=post_param('friends_'.strval($field_id),NULL);
			$_groups_view=post_param('groups_'.strval($field_id),NULL);

			$guests_view=(!is_null($_guests_view))?1:0;
			$members_view=(!is_null($_members_view))?1:0;
			$friends_view=(!is_null($_friends_view))?1:0;
			$groups_view=(!is_null($_groups_view))?$_groups_view:'';

			$cpf_permissions=$GLOBALS['FORUM_DB']->query_select('f_member_cpf_perms',array('*'),array('member_id'=>$member_id, 'field_id'=>$field_id));

			//if there are permissions saved already
			if (array_key_exists(0,$cpf_permissions) && $cpf_permissions[0]['field_id']==$field_id)
			{
				$GLOBALS['FORUM_DB']->query_update('f_member_cpf_perms',array('guest_view'=>$guests_view,'member_view'=>$members_view,'friend_view'=>$friends_view,'group_view'=>$groups_view),array('member_id'=>$member_id, 'field_id'=>$field_id),'',1);
			} else
			{
				//insert the custom permissions the user chose
				$GLOBALS['FORUM_DB']->query_insert('f_member_cpf_perms',array('guest_view'=>$guests_view,'member_view'=>$members_view,'friend_view'=>$friends_view,'group_view'=>$groups_view,'member_id'=>$member_id, 'field_id'=>$field_id));
			}
		}

		// Send back to start
		$url=$GLOBALS['FORUM_DRIVER']->member_profile_link($member_id,true,true);
		return redirect_screen($title,$url,do_lang_tempcode('SUCCESS'));
	}

}
