<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2011

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		core_ocf
 */

/**
 * Module page class.
 */
class Module_editprofile
{

	/**
	 * Standard modular info function.
	 *
	 * @return ?array	Map of module info (NULL: module is disabled).
	 */
	function info()
	{
		$info=array();
		$info['author']='Chris Graham';
		$info['organisation']='ocProducts';
		$info['hacked_by']=NULL;
		$info['hack_version']=NULL;
		$info['version']=2;
		$info['locked']=false;
		return $info;
	}
	
	/**
	 * Standard modular entry-point finder function.
	 *
	 * @return ?array	A map of entry points (type-code=>language-code) (NULL: disabled).
	 */
	function get_entry_points()
	{
		return array('misc'=>'EDIT_PROFILE');
	}
	
	/**
	 * Standard modular run function.
	 *
	 * @return tempcode	The result of execution.
	 */
	function run()
	{
		if (get_forum_type()!='ocf') warn_exit(do_lang_tempcode('NO_OCF')); else ocf_require_all_forum_stuff();
		require_code('ocf_members_action');
		require_code('ocf_members_action2');
	
		$type=get_param('type','misc');
	
		$member_id=get_param_integer('id',get_member());
		enforce_personal_access($member_id,NULL,'member_maintenance');
	
		if ($type=='misc') return $this->gui();
		if ($type=='actual') return $this->actual();
	
		return new ocp_tempcode();
	}
	
	/**
	 * The UI for editing a members profile.
	 *
	 * @return tempcode	The UI.
	 */
	function gui()
	{
		$member_id=get_param_integer('id',get_member());
	
		if (get_member()!=$member_id)
		{
			$title=get_page_title('EDIT_PROFILE_OF',true,array(escape_html($GLOBALS['FORUM_DRIVER']->get_username($member_id))));
		} else
		{
			$title=get_page_title('EDIT_PROFILE');
		}
	
		$myrow=$GLOBALS['FORUM_DRIVER']->get_member_row($member_id);
		if (is_null($myrow)) warn_exit(do_lang_tempcode('USER_NO_EXIST'));
		$custom_fields=ocf_get_custom_fields_member($member_id);

		list($fields,$hidden)=ocf_get_member_fields(false,$member_id,NULL,$myrow['m_email_address'],$myrow['m_preview_posts'],$myrow['m_dob_day'],$myrow['m_dob_month'],$myrow['m_dob_year'],get_users_timezone($member_id),$custom_fields,$myrow['m_theme'],$myrow['m_reveal_age'],$myrow['m_views_signatures'],$myrow['m_track_contributed_topics'],$myrow['m_language'],$myrow['m_allow_emails'],$myrow['m_validated'],$myrow['m_primary_group'],$myrow['m_username'],$myrow['m_is_perm_banned'],'',$myrow['m_zone_wide'],$myrow['m_highlighted_name'],$myrow['m_pt_allow'],get_translated_text($myrow['m_pt_rules_text'],$GLOBALS['FORUM_DB']),$myrow['m_on_probation_until']);

		// Awards?
		if (addon_installed('awards'))
		{
			require_code('awards');
			$fields->attach(get_award_fields('member',strval($member_id)));
		}

		$redirect=get_param('redirect',NULL);
		if (!is_null($redirect))
			$hidden->attach(form_input_hidden('redirect',$redirect));

		if (get_member()!=$member_id)
		{
			breadcrumb_set_parents(array(array('_SEARCH:members:view:'.strval($member_id),do_lang_tempcode('VIEW_PROFILE'))));
		}
		breadcrumb_set_self(do_lang_tempcode('EDIT_PROFILE'));

		$javascript="
			var form=document.getElementById('email_address').form;
			form.old_submit=form.onsubmit;
			form.onsubmit=function()
				{
					if (typeof form.elements['edit_password']!='undefined')
					{
						if ((form.elements['password_confirm']) && (form.elements['password_confirm'].value!=form.elements['edit_password'].value))
						{
							window.alert('".php_addslashes(do_lang('PASSWORD_MISMATCH'))."');
							return false;
						}
					}
					if (typeof form.old_submit!='undefined' && form.old_submit) return form.old_submit();
					return true;
				};
		";

		$submit_name=do_lang_tempcode('SAVE');
		$url=build_url(array('page'=>'_SELF','type'=>'actual','id'=>$member_id),'_SELF');
		return do_template('FORM_SCREEN',array('_GUID'=>'f64d8a4456fae9d7d42d8152029e62d4','JAVASCRIPT'=>$javascript,'AUTOCOMPLETE'=>false,'SKIP_VALIDATION'=>true,'PREVIEW'=>true,'HIDDEN'=>$hidden,'TITLE'=>$title,'FIELDS'=>$fields->evaluate(),'TEXT'=>'','SUBMIT_NAME'=>$submit_name,'URL'=>$url));
	}
	
	/**
	 * The actualiser for editing a members profile.
	 *
	 * @return tempcode	The UI.
	 */
	function actual()
	{
		$member_id=get_param_integer('id',get_member());
	
		$title=get_page_title('EDIT_PROFILE_OF',true,array(escape_html($GLOBALS['FORUM_DRIVER']->get_username($member_id))));
	
		$is_ldap=ocf_is_ldap_member($member_id);
		$is_httpauth=ocf_is_httpauth_member($member_id);
		$is_remote=($GLOBALS['FORUM_DRIVER']->get_member_row_field($member_id,'m_password_compat_scheme')=='remote');

		if (($is_ldap) || ($is_httpauth) || ($is_remote) || (($member_id!=get_member()) && (!has_specific_permission(get_member(),'assume_any_member'))))
		{
			$password=NULL;
		} else
		{
			$password=post_param('edit_password');
			if ($password=='') $password=NULL; else
			{
				$password_confirm=trim(post_param('password_confirm'));
				if ($password!=$password_confirm) warn_exit(make_string_tempcode(escape_html(do_lang('PASSWORD_MISMATCH'))));
			}
		}

		$custom_fields=ocf_get_all_custom_fields_match(
			$GLOBALS['FORUM_DRIVER']->get_members_groups($member_id), // groups
			(($member_id!=get_member()) && (!has_specific_permission(get_member(),'view_any_profile_field')))?1:NULL, // public view
			($member_id!=get_member())?NULL:1, // owner view
			($member_id!=get_member())?NULL:1 // owner set
		);
		$actual_custom_fields=ocf_read_in_custom_fields($custom_fields,$member_id);

		$pt_allow=array_key_exists('pt_allow',$_POST)?implode(',',$_POST['pt_allow']):'';
		$tmp_groups=$GLOBALS['OCF_DRIVER']->get_usergroup_list(true,true);
		$all_pt_allow='';
		foreach (array_keys($tmp_groups) as $key)
		{
			if ($key!=db_get_first_id())
			{
				if ($all_pt_allow!='') $all_pt_allow.=',';
				$all_pt_allow.=strval($key);
			}
		}
		if ($pt_allow==$all_pt_allow) $pt_allow='*';
		$pt_rules_text=post_param('pt_rules_text',NULL);

		if (has_specific_permission(get_member(),'member_maintenance'))
		{
			$validated=post_param_integer('validated',0);
			$primary_group=(($is_ldap) || (!has_specific_permission(get_member(),'assume_any_member')))?NULL:post_param_integer('primary_group');
			$is_perm_banned=post_param_integer('is_perm_banned',0);
			$old_is_perm_banned=$GLOBALS['FORUM_DRIVER']->get_member_row_field($member_id,'m_is_perm_banned');
			if ($old_is_perm_banned!=$is_perm_banned)
			{
				$reason=post_param('reason',NULL);
				if (is_null($reason)) // If a reason hasn't been given, we loop back to a form, then back here with a reason to actualalise the ban and edit
				{
					$title=get_page_title(($is_perm_banned==1)?'BAN_MEMBER':'UNBAN_MEMBER');
					$hidden=build_keep_post_fields();
					require_code('form_templates');
					$fields=form_input_line(do_lang_tempcode('REASON'),'','reason','',false);
					$text=do_lang_tempcode('DETECTED_BAN');
					$submit_name=do_lang_tempcode('PROCEED');
					$_url=build_url(array('page'=>'_SELF','type'=>'actual','id'=>$member_id),'_SELF');
					return do_template('FORM_SCREEN',array('_GUID'=>'e49beafaf39e38b8aabb6d93c14e5b93','SKIP_VALIDATION'=>true,'HIDDEN'=>$hidden,'TITLE'=>$title,'FIELDS'=>$fields,'TEXT'=>$text,'SUBMIT_NAME'=>$submit_name,'URL'=>$_url));
				} else
				{
					if ($is_perm_banned==1) ocf_ban_member($member_id,$reason); else ocf_unban_member($member_id,$reason);
				}
			}
			$highlighted_name=post_param_integer('highlighted_name',0);
			if (has_specific_permission(get_member(),'probate_members'))
			{
   			$on_probation_until=get_input_date('on_probation_until');

   			$current__on_probation_until=$GLOBALS['FORUM_DRIVER']->get_member_row_field($member_id,'m_on_probation_until');
   			if (((is_null($on_probation_until)) || ($on_probation_until<=time())) && ($current__on_probation_until>time()))
   			{
   				log_it('STOP_PROBATION',strval($member_id),$GLOBALS['FORUM_DRIVER']->get_username($member_id));
   			}
   			elseif ((!is_null($on_probation_until)) && ($on_probation_until>time()) && ($current__on_probation_until<=time()))
   			{
   				log_it('START_PROBATION',strval($member_id),$GLOBALS['FORUM_DRIVER']->get_username($member_id));
   			}
   			elseif ((!is_null($on_probation_until)) && ($current__on_probation_until>$on_probation_until) && ($on_probation_until>time()) && ($current__on_probation_until>time()))
   			{
   				log_it('REDUCE_PROBATION',strval($member_id),$GLOBALS['FORUM_DRIVER']->get_username($member_id));
   			}
   			elseif ((!is_null($on_probation_until)) && ($current__on_probation_until<$on_probation_until) && ($on_probation_until>time()) && ($current__on_probation_until>time()))
   			{
   				log_it('EXTEND_PROBATION',strval($member_id),$GLOBALS['FORUM_DRIVER']->get_username($member_id));
   			}
			} else
			{
				$on_probation_until=NULL;
			}
		} else
		{
			$validated=NULL;
			$primary_group=NULL;
			$highlighted_name=NULL;
			$on_probation_until=NULL;
		}
		if ((has_actual_page_access(get_member(),'admin_ocf_join')) || (has_specific_permission($member_id,'rename_self')))
		{
			$username=($is_ldap||$is_remote)?NULL:post_param('edit_username');
		} else $username=NULL;

		$email=post_param('email_address',NULL);
		if (!is_null($email)) $email=trim($email);

		$theme=post_param('theme',NULL);

		if ($is_remote)
		{
			$preview_posts=NULL;
			$zone_wide=NULL;
			$track_contributed_topics=NULL;
			$views_signatures=NULL;
			$timezone=NULL;
		} else
		{
			$preview_posts=post_param_integer('preview_posts',0);
			$zone_wide=post_param_integer('zone_wide',0);
			$track_contributed_topics=post_param_integer('track_contributed_topics',0);
			$views_signatures=post_param_integer('views_signatures',0);
			$timezone=post_param('timezone',get_site_timezone());
		}

		ocf_edit_member($member_id,$email,$preview_posts,post_param_integer('dob_day',NULL),post_param_integer('dob_month',NULL),post_param_integer('dob_year',NULL),$timezone,$primary_group,$actual_custom_fields,$theme,post_param_integer('reveal_age',0),$views_signatures,$track_contributed_topics,post_param('language',NULL),post_param_integer('allow_emails',0),$validated,$username,$password,$zone_wide,$highlighted_name,$pt_allow,$pt_rules_text,$on_probation_until);

		// Secondary groups
		//if (array_key_exists('secondary_groups',$_POST)) Can't use this line, because deselecting all will result in it not being passed
		{
			if (!array_key_exists('secondary_groups',$_POST)) $_POST['secondary_groups']=array();

			require_code('ocf_groups_action2');
			$members_groups=$GLOBALS['OCF_DRIVER']->get_members_groups($member_id);
			$group_count=$GLOBALS['FORUM_DB']->query_value('f_groups','COUNT(*)');
			$groups=list_to_map('id',$GLOBALS['FORUM_DB']->query_select('f_groups',array('*'),($group_count>200)?array('g_is_private_club'=>0):NULL));
			foreach ($_POST['secondary_groups'] as $group_id)
			{
				$group=$groups[intval($group_id)];
				
				if (($group['g_hidden']==1) && (!in_array($group['id'],$members_groups)) && (!has_specific_permission(get_member(),'see_hidden_groups'))) continue;
				
				if ((!in_array($group['id'],$members_groups)) && ((has_specific_permission(get_member(),'assume_any_member')) || ($group['g_open_membership']==1)))
				{
					ocf_add_member_to_group($member_id,$group['id']);
				}
			}
			foreach ($members_groups as $group_id)
			{
				if (!in_array(strval($group_id),$_POST['secondary_groups']))
				{
					ocf_member_leave_group($group_id,$member_id);
				}
			}
		}

		$GLOBALS['FORUM_DB']->query('DELETE FROM '.$GLOBALS['FORUM_DB']->get_table_prefix().'f_member_known_login_ips WHERE i_member_id='.strval($member_id).' AND '.db_string_not_equal_to('i_val_code','')); // So any re-confirms can happen

		$parents=array();
		if ($member_id!=get_member()) $parents[]=array('_SEARCH:members:view:'.strval($member_id),do_lang_tempcode('VIEW_PROFILE'));
		$parents[]=array('_SELF:_SELF:misc:'.strval($member_id),do_lang_tempcode('EDIT_PROFILE'));
		breadcrumb_set_parents($parents);
		breadcrumb_set_self(do_lang_tempcode('DONE'));

		if (addon_installed('awards'))
		{
			require_code('awards');
			handle_award_setting('member',strval($member_id));
		}

		$mpl=$GLOBALS['FORUM_DRIVER']->member_profile_link($member_id,true,true);
		$url=post_param('redirect',is_object($mpl)?$mpl->evaluate():$mpl);
		return redirect_screen($title,$url,do_lang_tempcode('SUCCESS'));
	}

}


