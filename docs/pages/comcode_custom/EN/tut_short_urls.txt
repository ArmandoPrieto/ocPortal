[title sub="Written by Chris Graham, ocProducts"]ocPortal Tutorial: URL schemes in ocPortal[/title]

ocPortal supports short URLs. [i]Officially[/i] we only support them in Apache, but practically you can get them working on any web server.

These short URLs have the following advantages:
 - More intuitive URL structure
 - More professional looking URLs, no direct reference to the website's implementation language
 - Easier to communicate, either verbally or through services such as Twitter
 - Quicker to type in
 - SEO improvement (to be honest, it is debatable, but it is very popular -- the [page="_SEARCH:tut_seo"]URL moniker feature is more relevant to SEO[/page])

Short URLs are enabled via the "URL Scheme" feature. In fact we have a number of different schemes you can choose from.

[contents]decimal,lower-alpha[/contents]

[title="2"]URL schemes[/title]

ocPortal uses "page-links" for internal configuration instead of URLs because of how the URL scheme changes how URLs are structured. The URL scheme determines how a page-link is turned into a URL.

The available URL schemes are:
 - Use /pg/ to identify CMS pages
 - Use .htm to identify CMS pages
 - Very simple unadorned URLs

"Use /pg/ to identify CMS pages" is recommended for novice users because it is unambiguous and simple to set up.

"Use .htm to identify CMS pages" requires the [tt].htaccess[/tt] file to have an awareness of each ocPortal zone, so it can disambiguate requests and thus route them to the correct zone.

"Very simple unadorned URLs" is great, but the webmaster may need to be very skilled at web server administration if they have other software packages installed in the same directory as ocPortal.

[title="3"]An example: linking to your own member profile[/title]

Often site owners wish to link to the current logged in member's profile. It is not obvious how to create a generic link for this, and it is hard to give one to a webmaster because it depends upon their URL scheme (and base URL).
We therefore will use this scenario of an example of how the URL would look in all the different URL schemes.

Let's start with the page-link. If you don't supply an [tt]id[/tt] parameter to the [tt]view[/t] screen of the [tt]members[/tt] module then it will automatically use the current member's ID (or show a login screen if it's a guest).
The page-link is therefore:
[tt]:members:view[/tt]
(I've assumed "Single public zone" is on, if that option is off then it would be [tt]site:members:view[/tt])

If no URL scheme (Raw PHP-style URLs) is enabled then the URL generated would be:
[tt](baseurl)/index.php?page=members&type=view[/tt]

If the URL scheme is "Use /pg/ to identify CMS pages":
[tt](baseurl)/pg/members/view[/tt]

If the URL scheme is "Use .htm to identify CMS pages":
[tt](baseurl)/members/view.htm[/tt]

If the URL scheme is "Very simple unadorned URLs":
[tt](baseurl)/members/view[/tt]

For completeness, let's show what they would be if it was linking to member #3:
[tt]:members:view:3[/tt]
[tt](baseurl)/index.php?page=members&type=view&id=3[/tt]
[tt](baseurl)/pg/members/view/3[/tt]
[tt](baseurl)/members/view/3.htm[/tt]
[tt](baseurl)/members/view/3[/tt]
(actually, depending on configuration, the number might be based on the username rather than the ID)

[title="2"]Setup instructions[/title]

ocPortal can also do short URLs on the following web-servers:
 - Apache (using [tt]mod_rewrite[/tt], and our rules in [tt]recommended.htaccess[/tt] -- details below)
 - Litespeed Server (as above, Litespeed simulates Apache)
 - IIS7 (due to the rules in our [tt]web.config[/tt])
 - IIS6 and below, if the IIRF extension is installed (details below)
 - Facebook's HHVM (built into our bundled configuration files)

[title="3"]Apache[/title]

Perform the following steps:
1) If you haven't already got a working ocPortal [tt].htaccess[/tt] file (the quick installer may have made it for you automatically), rename [tt]recommended.htaccess[/tt] to [tt].htaccess[/tt]. If your site gives errors after doing this, try [tt]simple.htaccess[/tt] instead. If you still get errors, your server probably doesn't have [tt]mod_rewrite[/tt] available, which is required for this functionality to work.
2) If things go wrong, you can disable short URLs via an emergency shut off option in the [tt]config_editor.php[/tt] script. Make sure you see where it is before proceeding to the next step.
3) Enable a URL Scheme from your site options (Admin Zone > Setup > Configuration > Site options > SEO).

[title="3"]IIS6 and below[/title]

You need to be a server administrator of your server, to install the free IIRF ISAPI module available from:
http://cheeso.members.winisp.net/IIRF.aspx

[i]ocProducts cannot take responsibility or provide support for this feature. We're happy to answer questions, but fiddling with your web server is only for those in the know. It is best you try things out on a test website before your live one.[/i]

To install IIRF:
1) Copy [tt]IIRF.dll[/tt] into your [tt]Inetpub[/tt] folder

2) In IIS manager add the dll as an ISAPI filter, but only to the website that runs ocPortal. This means that the IIRF plugin will only affect the ocPortal website, which is important because the IIRF configuration file is not modular -- if it were applied to all websites on the server, it could cause serious problems.

3) Make an [tt]IirfGlobal.ini[/tt] file in your [tt]Inetpub[/tt] folder containing the following:
[staff_note]begin_rewrite_rules[/staff_note][codebox]
# Anything that would point to a real file should actually be allowed to do so. If you have a "RewriteBase /subdir" command, you may need to change to "%{DOCUMENT_ROOT}/subdir/$1".
RewriteCond %{DOCUMENT_ROOT}/$1 -f [OR]
RewriteCond %{DOCUMENT_ROOT}/$1 -l [OR]
RewriteCond %{DOCUMENT_ROOT}/$1 -d
RewriteRule (.*) - [L]

# Redirect away from modules called directly by URL. Helpful as it allows you to "run" a module file in a debugger and still see it running.
RewriteRule ^([^=]*)pages/(modules|modules\_custom)/([^/]*)\.php$ $1index.php\?page=$3 [L,U,R]

# PG STYLE: These have a specially reduced form (no need to make it too explicit that these are Wiki+). We shouldn't shorten them too much, or the actual zone or base url might conflict
RewriteRule ^([^=]*)pg/s/([^\&\?]*)/index\.php$ $1index.php\?page=wiki&id=$2 [L,U]

# PG STYLE: These are standard patterns
RewriteRule ^([^=]*)pg/([^/\&\?]*)/([^/\&\?]*)/([^\&\?]*)/index\.php(.*)$ $1index.php\?page=$2&type=$3&id=$4$5 [L,U]
RewriteRule ^([^=]*)pg/([^/\&\?]*)/([^/\&\?]*)/index\.php(.*)$ $1index.php\?page=$2&type=$3$4 [L,U]
RewriteRule ^([^=]*)pg/([^/\&\?]*)/index\.php(.*)$ $1index.php\?page=$2$3 [L,U]
RewriteRule ^([^=]*)pg/index\.php(.*)$ $1index.php\?page=$3 [L,U]

# PG STYLE: Now the same as the above sets, but without any additional parameters (and thus no index.php)
RewriteRule ^([^=]*)pg/s/([^\&\?]*)$ $1index.php\?page=wiki&id=$2 [L,U]
RewriteRule ^([^=]*)pg/([^/\&\?]*)/([^/\&\?]*)/([^\&\?]*)/$ $1index.php\?page=$2&type=$3&id=$4 [L,U]
RewriteRule ^([^=]*)pg/([^/\&\?]*)/([^/\&\?]*)/([^\&\?]*)$ $1index.php\?page=$2&type=$3&id=$4 [L,U]
RewriteRule ^([^=]*)pg/([^/\&\?]*)/([^/\&\?]*)$ $1index.php\?page=$2&type=$3 [L,U]
RewriteRule ^([^=]*)pg/([^/\&\?]*)$ $1index.php\?page=$2 [L,U]

# PG STYLE: And these for those nasty situations where index.php was missing and we couldn't do anything about it (usually due to keep_session creeping into a semi-cached URL)
RewriteRule ^([^=]*)pg/s/([^\&\?\.]*)&(.*)$ $1index.php\?$3&page=wiki&id=$2 [L,U]
RewriteRule ^([^=]*)pg/([^/\&\?\.]*)/([^/\&\?\.]*)/([^/\&\?\.]*)&(.*)$ $1index.php\?$5&page=$2&type=$3&id=$4 [L,U]
RewriteRule ^([^=]*)pg/([^/\&\?\.]*)/([^/\&\?\.]*)&(.*)$ $1index.php\?$4&page=$2&type=$3 [L,U]
RewriteRule ^([^=]*)pg/([^/\&\?\.]*)&(.*)$ $1index.php\?$3&page=$2 [L,U]

# HTM STYLE: These have a specially reduced form (no need to make it too explicit that these are Wiki+). We shouldn't shorten them too much, or the actual zone or base url might conflict
RewriteRule ^(site|forum|adminzone|cms|collaboration)/s/([^\&\?]*)\.htm$ $1/index.php\?page=wiki&id=$2 [L,U]
RewriteRule ^s/([^\&\?]*)\.htm$ index\.php\?page=wiki&id=$1 [L,U]

# HTM STYLE: These are standard patterns
RewriteRule ^(site|forum|adminzone|cms|collaboration)/([^/\&\?]+)/([^/\&\?]*)/([^\&\?]*)\.htm$ $1/index.php\?page=$2&type=$3&id=$4 [L,U]
RewriteRule ^(site|forum|adminzone|cms|collaboration)/([^/\&\?]+)/([^/\&\?]*)\.htm$ $1/index.php\?page=$2&type=$3 [L,U]
RewriteRule ^(site|forum|adminzone|cms|collaboration)/([^/\&\?]+)\.htm$ $1/index.php\?page=$2 [L,U]
RewriteRule ^([^/\&\?]+)/([^/\&\?]*)/([^\&\?]*)\.htm$ index.php\?page=$1&type=$2&id=$3 [L,U]
RewriteRule ^([^/\&\?]+)/([^/\&\?]*)\.htm$ index.php\?page=$1&type=$2 [L,U]
RewriteRule ^([^/\&\?]+)\.htm$ index.php\?page=$1 [L,U]

# SIMPLE STYLE: These have a specially reduced form (no need to make it too explicit that these are Wiki+). We shouldn't shorten them too much, or the actual zone or base url might conflict
#RewriteRule ^(site|forum|adminzone|cms|collaboration)/s/([^\&\?]*)$ $1/index.php\?page=wiki&id=$2 [L,U]
#RewriteRule ^s/([^\&\?]*)$ index\.php\?page=wiki&id=$1 [L,U]

# SIMPLE STYLE: These are standard patterns
#RewriteRule ^(site|forum|adminzone|cms|collaboration)/([^/\&\?]+)/([^/\&\?]*)/([^\&\?]*)$ $1/index.php\?page=$2&type=$3&id=$4 [L,U]
#RewriteRule ^(site|forum|adminzone|cms|collaboration)/([^/\&\?]+)/([^/\&\?]*)$ $1/index.php\?page=$2&type=$3 [L,U]
#RewriteRule ^(site|forum|adminzone|cms|collaboration)/([^/\&\?]+)$ $1/index.php\?page=$2 [L,U]
#RewriteRule ^([^/\&\?]+)/([^/\&\?]*)/([^\&\?]*)$ index.php\?page=$1&type=$2&id=$3 [L,U]
#RewriteRule ^([^/\&\?]+)/([^/\&\?]*)$ index.php\?page=$1&type=$2 [L,U]
#RewriteRule ^([^/\&\?]+)$ index.php\?page=$1 [L,U]
[/codebox][staff_note]end_rewrite_rules[/staff_note]

4) Reset IIS

5) Test a short URL (e.g. [tt]http://mybaseurl/site/pg/downloads[/tt]) -- if it doesn't load, you've got a IIRF/IIS configuration problem.

6) If things go wrong, you can disable short URLs via an emergency shut off option in the [tt]config_editor.php[/tt] script. Make sure you see where it is before proceeding to the next step.

[concepts
 1_key="Short URL"      1_value="A URL that points to content in a simpler, shorter, form. Also called a Quick URL' or an 'SEO URL'"
]Concepts[/concepts]

[title="2"]See also[/title]

 - [page="_SEARCH:tut_adv_configuration"]Advanced configuration[/page]
 - [page="_SEARCH:tut_seo"]Improving your search engine ranking[/page]

{$SET,tutorial_tags,TODO,Installation and configuration}[block]main_tutorial_rating[/block]
